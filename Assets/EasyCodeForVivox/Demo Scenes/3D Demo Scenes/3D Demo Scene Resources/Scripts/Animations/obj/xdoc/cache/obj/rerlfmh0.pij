id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: EasyCodeForVivox
  commentId: N:EasyCodeForVivox
  language: CSharp
  name:
    CSharp: EasyCodeForVivox
    VB: EasyCodeForVivox
  nameWithType:
    CSharp: EasyCodeForVivox
    VB: EasyCodeForVivox
  qualifiedName:
    CSharp: EasyCodeForVivox
    VB: EasyCodeForVivox
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: EasyCodeForVivox.Easy3DPositional
    commentId: T:EasyCodeForVivox.Easy3DPositional
    language: CSharp
    name:
      CSharp: Easy3DPositional
      VB: Easy3DPositional
    nameWithType:
      CSharp: Easy3DPositional
      VB: Easy3DPositional
    qualifiedName:
      CSharp: EasyCodeForVivox.Easy3DPositional
      VB: EasyCodeForVivox.Easy3DPositional
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: Easy3DPositional
      path: ''
      startLine: 1666
    syntax:
      content:
        CSharp: 'public class Easy3DPositional : MonoBehaviour'
        VB: >-
          Public Class Easy3DPositional

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Easy3DPositional.listenerPosition
      commentId: F:EasyCodeForVivox.Easy3DPositional.listenerPosition
      language: CSharp
      name:
        CSharp: listenerPosition
        VB: listenerPosition
      nameWithType:
        CSharp: Easy3DPositional.listenerPosition
        VB: Easy3DPositional.listenerPosition
      qualifiedName:
        CSharp: EasyCodeForVivox.Easy3DPositional.listenerPosition
        VB: EasyCodeForVivox.Easy3DPositional.listenerPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: listenerPosition
        path: ''
        startLine: 1669
      syntax:
        content:
          CSharp: public Transform listenerPosition
          VB: Public listenerPosition As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Easy3DPositional.speakerPosition
      commentId: F:EasyCodeForVivox.Easy3DPositional.speakerPosition
      language: CSharp
      name:
        CSharp: speakerPosition
        VB: speakerPosition
      nameWithType:
        CSharp: Easy3DPositional.speakerPosition
        VB: Easy3DPositional.speakerPosition
      qualifiedName:
        CSharp: EasyCodeForVivox.Easy3DPositional.speakerPosition
        VB: EasyCodeForVivox.Easy3DPositional.speakerPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: speakerPosition
        path: ''
        startLine: 1670
      syntax:
        content:
          CSharp: public Transform speakerPosition
          VB: Public speakerPosition As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists
      commentId: M:EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists
      language: CSharp
      name:
        CSharp: CheckIfChannelExists()
        VB: CheckIfChannelExists()
      nameWithType:
        CSharp: Easy3DPositional.CheckIfChannelExists()
        VB: Easy3DPositional.CheckIfChannelExists()
      qualifiedName:
        CSharp: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists()
        VB: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CheckIfChannelExists
        path: ''
        startLine: 1714
      syntax:
        content:
          CSharp: public bool CheckIfChannelExists()
          VB: Public Function CheckIfChannelExists As Boolean
        return:
          type: System.Boolean
      overload: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Easy3DPositional.Update3DPosition
      commentId: M:EasyCodeForVivox.Easy3DPositional.Update3DPosition
      language: CSharp
      name:
        CSharp: Update3DPosition()
        VB: Update3DPosition()
      nameWithType:
        CSharp: Easy3DPositional.Update3DPosition()
        VB: Easy3DPositional.Update3DPosition()
      qualifiedName:
        CSharp: EasyCodeForVivox.Easy3DPositional.Update3DPosition()
        VB: EasyCodeForVivox.Easy3DPositional.Update3DPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Update3DPosition
        path: ''
        startLine: 1744
      syntax:
        content:
          CSharp: public void Update3DPosition()
          VB: Public Sub Update3DPosition
      overload: EasyCodeForVivox.Easy3DPositional.Update3DPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.NetCode3DPositional
    commentId: T:EasyCodeForVivox.NetCode3DPositional
    language: CSharp
    name:
      CSharp: NetCode3DPositional
      VB: NetCode3DPositional
    nameWithType:
      CSharp: NetCode3DPositional
      VB: NetCode3DPositional
    qualifiedName:
      CSharp: EasyCodeForVivox.NetCode3DPositional
      VB: EasyCodeForVivox.NetCode3DPositional
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: NetCode3DPositional
      path: ''
      startLine: 1860
    syntax:
      content:
        CSharp: 'public class NetCode3DPositional : MonoBehaviour'
        VB: >-
          Public Class NetCode3DPositional

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.NetCode3DPositional.listenerPosition
      commentId: F:EasyCodeForVivox.NetCode3DPositional.listenerPosition
      language: CSharp
      name:
        CSharp: listenerPosition
        VB: listenerPosition
      nameWithType:
        CSharp: NetCode3DPositional.listenerPosition
        VB: NetCode3DPositional.listenerPosition
      qualifiedName:
        CSharp: EasyCodeForVivox.NetCode3DPositional.listenerPosition
        VB: EasyCodeForVivox.NetCode3DPositional.listenerPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: listenerPosition
        path: ''
        startLine: 1863
      syntax:
        content:
          CSharp: public Transform listenerPosition
          VB: Public listenerPosition As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.NetCode3DPositional.speakerPosition
      commentId: F:EasyCodeForVivox.NetCode3DPositional.speakerPosition
      language: CSharp
      name:
        CSharp: speakerPosition
        VB: speakerPosition
      nameWithType:
        CSharp: NetCode3DPositional.speakerPosition
        VB: NetCode3DPositional.speakerPosition
      qualifiedName:
        CSharp: EasyCodeForVivox.NetCode3DPositional.speakerPosition
        VB: EasyCodeForVivox.NetCode3DPositional.speakerPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: speakerPosition
        path: ''
        startLine: 1864
      syntax:
        content:
          CSharp: public Transform speakerPosition
          VB: Public speakerPosition As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists
      commentId: M:EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists
      language: CSharp
      name:
        CSharp: CheckIfChannelExists()
        VB: CheckIfChannelExists()
      nameWithType:
        CSharp: NetCode3DPositional.CheckIfChannelExists()
        VB: NetCode3DPositional.CheckIfChannelExists()
      qualifiedName:
        CSharp: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists()
        VB: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CheckIfChannelExists
        path: ''
        startLine: 1909
      syntax:
        content:
          CSharp: public bool CheckIfChannelExists()
          VB: Public Function CheckIfChannelExists As Boolean
        return:
          type: System.Boolean
      overload: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.NetCode3DPositional.Update3DPosition
      commentId: M:EasyCodeForVivox.NetCode3DPositional.Update3DPosition
      language: CSharp
      name:
        CSharp: Update3DPosition()
        VB: Update3DPosition()
      nameWithType:
        CSharp: NetCode3DPositional.Update3DPosition()
        VB: NetCode3DPositional.Update3DPosition()
      qualifiedName:
        CSharp: EasyCodeForVivox.NetCode3DPositional.Update3DPosition()
        VB: EasyCodeForVivox.NetCode3DPositional.Update3DPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Update3DPosition
        path: ''
        startLine: 1939
      syntax:
        content:
          CSharp: public void Update3DPosition()
          VB: Public Sub Update3DPosition
      overload: EasyCodeForVivox.NetCode3DPositional.Update3DPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyManager
    commentId: T:EasyCodeForVivox.EasyManager
    language: CSharp
    name:
      CSharp: EasyManager
      VB: EasyManager
    nameWithType:
      CSharp: EasyManager
      VB: EasyManager
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyManager
      VB: EasyCodeForVivox.EasyManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyManager
      path: ''
      startLine: 1964
    syntax:
      content:
        CSharp: 'public class EasyManager : MonoBehaviour'
        VB: >-
          Public Class EasyManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyManager.InitializeClient(VivoxConfig)
      commentId: M:EasyCodeForVivox.EasyManager.InitializeClient(VivoxConfig)
      language: CSharp
      name:
        CSharp: InitializeClient(VivoxConfig)
        VB: InitializeClient(VivoxConfig)
      nameWithType:
        CSharp: EasyManager.InitializeClient(VivoxConfig)
        VB: EasyManager.InitializeClient(VivoxConfig)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.InitializeClient(VivoxConfig)
        VB: EasyCodeForVivox.EasyManager.InitializeClient(VivoxConfig)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: InitializeClient
        path: ''
        startLine: 2000
      syntax:
        content:
          CSharp: public Task InitializeClient(VivoxConfig vivoxConfig = null)
          VB: Public Function InitializeClient(vivoxConfig As VivoxConfig = Nothing) As Task
        parameters:
        - id: vivoxConfig
          type: VivoxConfig
        return:
          type: Task
      overload: EasyCodeForVivox.EasyManager.InitializeClient*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.UnitializeClient
      commentId: M:EasyCodeForVivox.EasyManager.UnitializeClient
      language: CSharp
      name:
        CSharp: UnitializeClient()
        VB: UnitializeClient()
      nameWithType:
        CSharp: EasyManager.UnitializeClient()
        VB: EasyManager.UnitializeClient()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.UnitializeClient()
        VB: EasyCodeForVivox.EasyManager.UnitializeClient()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UnitializeClient
        path: ''
        startLine: 2044
      syntax:
        content:
          CSharp: public void UnitializeClient()
          VB: Public Sub UnitializeClient
      overload: EasyCodeForVivox.EasyManager.UnitializeClient*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents
      commentId: M:EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents
      language: CSharp
      name:
        CSharp: SubscribeToVivoxEvents()
        VB: SubscribeToVivoxEvents()
      nameWithType:
        CSharp: EasyManager.SubscribeToVivoxEvents()
        VB: EasyManager.SubscribeToVivoxEvents()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents()
        VB: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SubscribeToVivoxEvents
        path: ''
        startLine: 2052
      syntax:
        content:
          CSharp: public void SubscribeToVivoxEvents()
          VB: Public Sub SubscribeToVivoxEvents
      overload: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents
      commentId: M:EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents
      language: CSharp
      name:
        CSharp: UnsubscribeToVivoxEvents()
        VB: UnsubscribeToVivoxEvents()
      nameWithType:
        CSharp: EasyManager.UnsubscribeToVivoxEvents()
        VB: EasyManager.UnsubscribeToVivoxEvents()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents()
        VB: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UnsubscribeToVivoxEvents
        path: ''
        startLine: 2112
      syntax:
        content:
          CSharp: public void UnsubscribeToVivoxEvents()
          VB: Public Sub UnsubscribeToVivoxEvents
      overload: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.LoginToVivox(System.String,System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyManager.LoginToVivox(System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: LoginToVivox(String, String, Boolean)
        VB: LoginToVivox(String, String, Boolean)
      nameWithType:
        CSharp: EasyManager.LoginToVivox(String, String, Boolean)
        VB: EasyManager.LoginToVivox(String, String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.LoginToVivox(System.String, System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyManager.LoginToVivox(System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LoginToVivox
        path: ''
        startLine: 2179
      syntax:
        content:
          CSharp: public void LoginToVivox(string userName, string displayName = null, bool joinMuted = false)
          VB: Public Sub LoginToVivox(userName As String, displayName As String = Nothing, joinMuted As Boolean = False)
        parameters:
        - id: userName
          type: System.String
        - id: displayName
          type: System.String
        - id: joinMuted
          type: System.Boolean
      overload: EasyCodeForVivox.EasyManager.LoginToVivox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.UpdateLoginProperties(System.String,ParticipantPropertyUpdateFrequency)
      commentId: M:EasyCodeForVivox.EasyManager.UpdateLoginProperties(System.String,ParticipantPropertyUpdateFrequency)
      language: CSharp
      name:
        CSharp: UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
        VB: UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
      nameWithType:
        CSharp: EasyManager.UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
        VB: EasyManager.UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.UpdateLoginProperties(System.String, ParticipantPropertyUpdateFrequency)
        VB: EasyCodeForVivox.EasyManager.UpdateLoginProperties(System.String, ParticipantPropertyUpdateFrequency)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UpdateLoginProperties
        path: ''
        startLine: 2184
      syntax:
        content:
          CSharp: public void UpdateLoginProperties(string userName, ParticipantPropertyUpdateFrequency updateFrequency)
          VB: Public Sub UpdateLoginProperties(userName As String, updateFrequency As ParticipantPropertyUpdateFrequency)
        parameters:
        - id: userName
          type: System.String
        - id: updateFrequency
          type: ParticipantPropertyUpdateFrequency
      overload: EasyCodeForVivox.EasyManager.UpdateLoginProperties*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.LogoutOfVivox(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.LogoutOfVivox(System.String)
      language: CSharp
      name:
        CSharp: LogoutOfVivox(String)
        VB: LogoutOfVivox(String)
      nameWithType:
        CSharp: EasyManager.LogoutOfVivox(String)
        VB: EasyManager.LogoutOfVivox(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.LogoutOfVivox(System.String)
        VB: EasyCodeForVivox.EasyManager.LogoutOfVivox(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LogoutOfVivox
        path: ''
        startLine: 2189
      syntax:
        content:
          CSharp: public void LogoutOfVivox(string userName)
          VB: Public Sub LogoutOfVivox(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.LogoutOfVivox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.JoinChannel(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyManager.JoinChannel(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      language: CSharp
      name:
        CSharp: JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      nameWithType:
        CSharp: EasyManager.JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: EasyManager.JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.JoinChannel(System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
        VB: EasyCodeForVivox.EasyManager.JoinChannel(System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannel
        path: ''
        startLine: 2194
      syntax:
        content:
          CSharp: public void JoinChannel(string userName, string channelName, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, ChannelType channelType, bool joinMuted = false, Channel3DProperties channel3DProperties = null)
          VB: Public Sub JoinChannel(userName As String, channelName As String, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelType As ChannelType, joinMuted As Boolean = False, channel3DProperties As Channel3DProperties = Nothing)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelType
          type: ChannelType
        - id: joinMuted
          type: System.Boolean
        - id: channel3DProperties
          type: Channel3DProperties
      overload: EasyCodeForVivox.EasyManager.JoinChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.JoinChannelRegion(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyManager.JoinChannelRegion(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      language: CSharp
      name:
        CSharp: JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      nameWithType:
        CSharp: EasyManager.JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: EasyManager.JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.JoinChannelRegion(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
        VB: EasyCodeForVivox.EasyManager.JoinChannelRegion(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannelRegion
        path: ''
        startLine: 2200
      syntax:
        content:
          CSharp: public void JoinChannelRegion(string userName, string channelName, string matchRegion, string matchHash, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, ChannelType channelType, bool joinMuted = false, Channel3DProperties channel3DProperties = null)
          VB: Public Sub JoinChannelRegion(userName As String, channelName As String, matchRegion As String, matchHash As String, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelType As ChannelType, joinMuted As Boolean = False, channel3DProperties As Channel3DProperties = Nothing)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: matchRegion
          type: System.String
        - id: matchHash
          type: System.String
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelType
          type: ChannelType
        - id: joinMuted
          type: System.Boolean
        - id: channel3DProperties
          type: Channel3DProperties
      overload: EasyCodeForVivox.EasyManager.JoinChannelRegion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.LeaveChannel(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.LeaveChannel(System.String,System.String)
      language: CSharp
      name:
        CSharp: LeaveChannel(String, String)
        VB: LeaveChannel(String, String)
      nameWithType:
        CSharp: EasyManager.LeaveChannel(String, String)
        VB: EasyManager.LeaveChannel(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.LeaveChannel(System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.LeaveChannel(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LeaveChannel
        path: ''
        startLine: 2207
      syntax:
        content:
          CSharp: public void LeaveChannel(string channelName, string userName)
          VB: Public Sub LeaveChannel(channelName As String, userName As String)
        parameters:
        - id: channelName
          type: System.String
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.LeaveChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.ToggleAudioInChannel(System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyManager.ToggleAudioInChannel(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleAudioInChannel(String, Boolean)
        VB: ToggleAudioInChannel(String, Boolean)
      nameWithType:
        CSharp: EasyManager.ToggleAudioInChannel(String, Boolean)
        VB: EasyManager.ToggleAudioInChannel(String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.ToggleAudioInChannel(System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyManager.ToggleAudioInChannel(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ToggleAudioInChannel
        path: ''
        startLine: 2212
      syntax:
        content:
          CSharp: public void ToggleAudioInChannel(string channelName, bool connect)
          VB: Public Sub ToggleAudioInChannel(channelName As String, connect As Boolean)
        parameters:
        - id: channelName
          type: System.String
        - id: connect
          type: System.Boolean
      overload: EasyCodeForVivox.EasyManager.ToggleAudioInChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.ToggleTextInChannel(System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyManager.ToggleTextInChannel(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleTextInChannel(String, Boolean)
        VB: ToggleTextInChannel(String, Boolean)
      nameWithType:
        CSharp: EasyManager.ToggleTextInChannel(String, Boolean)
        VB: EasyManager.ToggleTextInChannel(String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.ToggleTextInChannel(System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyManager.ToggleTextInChannel(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ToggleTextInChannel
        path: ''
        startLine: 2220
      syntax:
        content:
          CSharp: public void ToggleTextInChannel(string channelName, bool connect)
          VB: Public Sub ToggleTextInChannel(channelName As String, connect As Boolean)
        parameters:
        - id: channelName
          type: System.String
        - id: connect
          type: System.Boolean
      overload: EasyCodeForVivox.EasyManager.ToggleTextInChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SendChannelMessage(System.String,System.String,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.SendChannelMessage(System.String,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendChannelMessage(String, String, String, String, String)
        VB: SendChannelMessage(String, String, String, String, String)
      nameWithType:
        CSharp: EasyManager.SendChannelMessage(String, String, String, String, String)
        VB: EasyManager.SendChannelMessage(String, String, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SendChannelMessage(System.String, System.String, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.SendChannelMessage(System.String, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendChannelMessage
        path: ''
        startLine: 2228
      syntax:
        content:
          CSharp: public void SendChannelMessage(string userName, string channelName, string msg, string header = "", string body = "")
          VB: Public Sub SendChannelMessage(userName As String, channelName As String, msg As String, header As String = "", body As String = "")
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: msg
          type: System.String
        - id: header
          type: System.String
        - id: body
          type: System.String
      overload: EasyCodeForVivox.EasyManager.SendChannelMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SendEventMessage(System.String,System.String,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.SendEventMessage(System.String,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendEventMessage(String, String, String, String, String)
        VB: SendEventMessage(String, String, String, String, String)
      nameWithType:
        CSharp: EasyManager.SendEventMessage(String, String, String, String, String)
        VB: EasyManager.SendEventMessage(String, String, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SendEventMessage(System.String, System.String, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.SendEventMessage(System.String, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendEventMessage
        path: ''
        startLine: 2242
      syntax:
        content:
          CSharp: public void SendEventMessage(string userName, string channelName, string msg, string header = "", string body = "")
          VB: Public Sub SendEventMessage(userName As String, channelName As String, msg As String, header As String = "", body As String = "")
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: msg
          type: System.String
        - id: header
          type: System.String
        - id: body
          type: System.String
      overload: EasyCodeForVivox.EasyManager.SendEventMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SendDirectMessage(System.String,System.String,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.SendDirectMessage(System.String,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendDirectMessage(String, String, String, String, String)
        VB: SendDirectMessage(String, String, String, String, String)
      nameWithType:
        CSharp: EasyManager.SendDirectMessage(String, String, String, String, String)
        VB: EasyManager.SendDirectMessage(String, String, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SendDirectMessage(System.String, System.String, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.SendDirectMessage(System.String, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendDirectMessage
        path: ''
        startLine: 2248
      syntax:
        content:
          CSharp: public void SendDirectMessage(string userName, string userToMsg, string msg, string header = "", string body = "")
          VB: Public Sub SendDirectMessage(userName As String, userToMsg As String, msg As String, header As String = "", body As String = "")
        parameters:
        - id: userName
          type: System.String
        - id: userToMsg
          type: System.String
        - id: msg
          type: System.String
        - id: header
          type: System.String
        - id: body
          type: System.String
      overload: EasyCodeForVivox.EasyManager.SendDirectMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.MuteSelf
      commentId: M:EasyCodeForVivox.EasyManager.MuteSelf
      language: CSharp
      name:
        CSharp: MuteSelf()
        VB: MuteSelf()
      nameWithType:
        CSharp: EasyManager.MuteSelf()
        VB: EasyManager.MuteSelf()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.MuteSelf()
        VB: EasyCodeForVivox.EasyManager.MuteSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: MuteSelf
        path: ''
        startLine: 2255
      syntax:
        content:
          CSharp: public void MuteSelf()
          VB: Public Sub MuteSelf
      overload: EasyCodeForVivox.EasyManager.MuteSelf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.UnmuteSelf
      commentId: M:EasyCodeForVivox.EasyManager.UnmuteSelf
      language: CSharp
      name:
        CSharp: UnmuteSelf()
        VB: UnmuteSelf()
      nameWithType:
        CSharp: EasyManager.UnmuteSelf()
        VB: EasyManager.UnmuteSelf()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.UnmuteSelf()
        VB: EasyCodeForVivox.EasyManager.UnmuteSelf()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UnmuteSelf
        path: ''
        startLine: 2260
      syntax:
        content:
          CSharp: public void UnmuteSelf()
          VB: Public Sub UnmuteSelf
      overload: EasyCodeForVivox.EasyManager.UnmuteSelf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.LocalMuteRemoteUser(System.String,System.String)
      language: CSharp
      name:
        CSharp: LocalMuteRemoteUser(String, String)
        VB: LocalMuteRemoteUser(String, String)
      nameWithType:
        CSharp: EasyManager.LocalMuteRemoteUser(String, String)
        VB: EasyManager.LocalMuteRemoteUser(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser(System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalMuteRemoteUser
        path: ''
        startLine: 2265
      syntax:
        content:
          CSharp: public void LocalMuteRemoteUser(string userName, string channelName)
          VB: Public Sub LocalMuteRemoteUser(userName As String, channelName As String)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser(System.String,System.String)
      language: CSharp
      name:
        CSharp: LocalUnmuteRemoteUser(String, String)
        VB: LocalUnmuteRemoteUser(String, String)
      nameWithType:
        CSharp: EasyManager.LocalUnmuteRemoteUser(String, String)
        VB: EasyManager.LocalUnmuteRemoteUser(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser(System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalUnmuteRemoteUser
        path: ''
        startLine: 2269
      syntax:
        content:
          CSharp: public void LocalUnmuteRemoteUser(string userName, string channelName)
          VB: Public Sub LocalUnmuteRemoteUser(userName As String, channelName As String)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.LocalMuteAllPlayers(System.String)
      language: CSharp
      name:
        CSharp: LocalMuteAllPlayers(String)
        VB: LocalMuteAllPlayers(String)
      nameWithType:
        CSharp: EasyManager.LocalMuteAllPlayers(String)
        VB: EasyManager.LocalMuteAllPlayers(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers(System.String)
        VB: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalMuteAllPlayers
        path: ''
        startLine: 2274
      syntax:
        content:
          CSharp: public void LocalMuteAllPlayers(string channelName)
          VB: Public Sub LocalMuteAllPlayers(channelName As String)
        parameters:
        - id: channelName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers(System.String)
      language: CSharp
      name:
        CSharp: LocalUnmuteAllPlayers(String)
        VB: LocalUnmuteAllPlayers(String)
      nameWithType:
        CSharp: EasyManager.LocalUnmuteAllPlayers(String)
        VB: EasyManager.LocalUnmuteAllPlayers(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers(System.String)
        VB: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalUnmuteAllPlayers
        path: ''
        startLine: 2287
      syntax:
        content:
          CSharp: public void LocalUnmuteAllPlayers(string channelName)
          VB: Public Sub LocalUnmuteAllPlayers(channelName As String)
        parameters:
        - id: channelName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer(System.String)
      language: CSharp
      name:
        CSharp: GetTransmittingChannelsForPlayer(String)
        VB: GetTransmittingChannelsForPlayer(String)
      nameWithType:
        CSharp: EasyManager.GetTransmittingChannelsForPlayer(String)
        VB: EasyManager.GetTransmittingChannelsForPlayer(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer(System.String)
        VB: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetTransmittingChannelsForPlayer
        path: ''
        startLine: 2300
      syntax:
        content:
          CSharp: public IEnumerable<ChannelId> GetTransmittingChannelsForPlayer(string userName)
          VB: Public Function GetTransmittingChannelsForPlayer(userName As String) As IEnumerable(Of ChannelId)
        parameters:
        - id: userName
          type: System.String
        return:
          type: IEnumerable{ChannelId}
      overload: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel(System.String)
      language: CSharp
      name:
        CSharp: IsPlayerTransmittingInChannel(String)
        VB: IsPlayerTransmittingInChannel(String)
      nameWithType:
        CSharp: EasyManager.IsPlayerTransmittingInChannel(String)
        VB: EasyManager.IsPlayerTransmittingInChannel(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel(System.String)
        VB: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: IsPlayerTransmittingInChannel
        path: ''
        startLine: 2305
      syntax:
        content:
          CSharp: public bool IsPlayerTransmittingInChannel(string channelName)
          VB: Public Function IsPlayerTransmittingInChannel(channelName As String) As Boolean
        parameters:
        - id: channelName
          type: System.String
        return:
          type: System.Boolean
      overload: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode(System.String,TransmissionMode,ChannelId)
      commentId: M:EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode(System.String,TransmissionMode,ChannelId)
      language: CSharp
      name:
        CSharp: SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
        VB: SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
      nameWithType:
        CSharp: EasyManager.SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
        VB: EasyManager.SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode(System.String, TransmissionMode, ChannelId)
        VB: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode(System.String, TransmissionMode, ChannelId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetPlayerTransmissionMode
        path: ''
        startLine: 2310
      syntax:
        content:
          CSharp: public void SetPlayerTransmissionMode(string userName, TransmissionMode transmissionMode, ChannelId channelId = null)
          VB: Public Sub SetPlayerTransmissionMode(userName As String, transmissionMode As TransmissionMode, channelId As ChannelId = Nothing)
        parameters:
        - id: userName
          type: System.String
        - id: transmissionMode
          type: TransmissionMode
        - id: channelId
          type: ChannelId
      overload: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.GetChannelId(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.GetChannelId(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetChannelId(String, String)
        VB: GetChannelId(String, String)
      nameWithType:
        CSharp: EasyManager.GetChannelId(String, String)
        VB: EasyManager.GetChannelId(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.GetChannelId(System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.GetChannelId(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelId
        path: ''
        startLine: 2315
      syntax:
        content:
          CSharp: public ChannelId GetChannelId(string userName, string channelName)
          VB: Public Function GetChannelId(userName As String, channelName As String) As ChannelId
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        return:
          type: ChannelId
      overload: EasyCodeForVivox.EasyManager.GetChannelId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume(System.Int32)
      commentId: M:EasyCodeForVivox.EasyManager.AdjustLocalUserVolume(System.Int32)
      language: CSharp
      name:
        CSharp: AdjustLocalUserVolume(Int32)
        VB: AdjustLocalUserVolume(Int32)
      nameWithType:
        CSharp: EasyManager.AdjustLocalUserVolume(Int32)
        VB: EasyManager.AdjustLocalUserVolume(Int32)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume(System.Int32)
        VB: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: AdjustLocalUserVolume
        path: ''
        startLine: 2320
      syntax:
        content:
          CSharp: public void AdjustLocalUserVolume(int volume)
          VB: Public Sub AdjustLocalUserVolume(volume As Integer)
        parameters:
        - id: volume
          type: System.Int32
      overload: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume(System.String,System.String,System.Single)
      commentId: M:EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume(System.String,System.String,System.Single)
      language: CSharp
      name:
        CSharp: AdjustRemoteUserVolume(String, String, Single)
        VB: AdjustRemoteUserVolume(String, String, Single)
      nameWithType:
        CSharp: EasyManager.AdjustRemoteUserVolume(String, String, Single)
        VB: EasyManager.AdjustRemoteUserVolume(String, String, Single)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume(System.String, System.String, System.Single)
        VB: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume(System.String, System.String, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: AdjustRemoteUserVolume
        path: ''
        startLine: 2325
      syntax:
        content:
          CSharp: public void AdjustRemoteUserVolume(string userName, string channelName, float volume)
          VB: Public Sub AdjustRemoteUserVolume(userName As String, channelName As String, volume As Single)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: volume
          type: System.Single
      overload: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.CrossMuteUser(System.String,System.String,System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyManager.CrossMuteUser(System.String,System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: CrossMuteUser(String, String, String, Boolean)
        VB: CrossMuteUser(String, String, String, Boolean)
      nameWithType:
        CSharp: EasyManager.CrossMuteUser(String, String, String, Boolean)
        VB: EasyManager.CrossMuteUser(String, String, String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.CrossMuteUser(System.String, System.String, System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyManager.CrossMuteUser(System.String, System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CrossMuteUser
        path: ''
        startLine: 2331
      syntax:
        content:
          CSharp: public void CrossMuteUser(string userName, string channelName, string userToMute, bool mute)
          VB: Public Sub CrossMuteUser(userName As String, channelName As String, userToMute As String, mute As Boolean)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: userToMute
          type: System.String
        - id: mute
          type: System.Boolean
      overload: EasyCodeForVivox.EasyManager.CrossMuteUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.CrossMuteUsers(System.String,System.String,List{System.String},System.Boolean)
      commentId: M:EasyCodeForVivox.EasyManager.CrossMuteUsers(System.String,System.String,List{System.String},System.Boolean)
      language: CSharp
      name:
        CSharp: CrossMuteUsers(String, String, List<String>, Boolean)
        VB: CrossMuteUsers(String, String, List(Of String), Boolean)
      nameWithType:
        CSharp: EasyManager.CrossMuteUsers(String, String, List<String>, Boolean)
        VB: EasyManager.CrossMuteUsers(String, String, List(Of String), Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.CrossMuteUsers(System.String, System.String, List<System.String>, System.Boolean)
        VB: EasyCodeForVivox.EasyManager.CrossMuteUsers(System.String, System.String, List(Of System.String), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CrossMuteUsers
        path: ''
        startLine: 2336
      syntax:
        content:
          CSharp: public void CrossMuteUsers(string userName, string channelName, List<string> usersToMute, bool mute)
          VB: Public Sub CrossMuteUsers(userName As String, channelName As String, usersToMute As List(Of String), mute As Boolean)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: usersToMute
          type: List{System.String}
        - id: mute
          type: System.Boolean
      overload: EasyCodeForVivox.EasyManager.CrossMuteUsers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession(System.String)
      language: CSharp
      name:
        CSharp: ClearCrossMutedUsersForLoginSession(String)
        VB: ClearCrossMutedUsersForLoginSession(String)
      nameWithType:
        CSharp: EasyManager.ClearCrossMutedUsersForLoginSession(String)
        VB: EasyManager.ClearCrossMutedUsersForLoginSession(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession(System.String)
        VB: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ClearCrossMutedUsersForLoginSession
        path: ''
        startLine: 2341
      syntax:
        content:
          CSharp: public void ClearCrossMutedUsersForLoginSession(string loggedInUserName)
          VB: Public Sub ClearCrossMutedUsersForLoginSession(loggedInUserName As String)
        parameters:
        - id: loggedInUserName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.StartAudioInjection(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.StartAudioInjection(System.String,System.String)
      language: CSharp
      name:
        CSharp: StartAudioInjection(String, String)
        VB: StartAudioInjection(String, String)
      nameWithType:
        CSharp: EasyManager.StartAudioInjection(String, String)
        VB: EasyManager.StartAudioInjection(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.StartAudioInjection(System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.StartAudioInjection(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: StartAudioInjection
        path: ''
        startLine: 2346
      syntax:
        content:
          CSharp: public void StartAudioInjection(string username, string audioFilePath)
          VB: Public Sub StartAudioInjection(username As String, audioFilePath As String)
        parameters:
        - id: username
          type: System.String
        - id: audioFilePath
          type: System.String
      overload: EasyCodeForVivox.EasyManager.StartAudioInjection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.StopAudioInjection(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.StopAudioInjection(System.String)
      language: CSharp
      name:
        CSharp: StopAudioInjection(String)
        VB: StopAudioInjection(String)
      nameWithType:
        CSharp: EasyManager.StopAudioInjection(String)
        VB: EasyManager.StopAudioInjection(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.StopAudioInjection(System.String)
        VB: EasyCodeForVivox.EasyManager.StopAudioInjection(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: StopAudioInjection
        path: ''
        startLine: 2351
      syntax:
        content:
          CSharp: public void StopAudioInjection(string username)
          VB: Public Sub StopAudioInjection(username As String)
        parameters:
        - id: username
          type: System.String
      overload: EasyCodeForVivox.EasyManager.StopAudioInjection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection(System.String)
      language: CSharp
      name:
        CSharp: SetAutoVoiceActivityDetection(String)
        VB: SetAutoVoiceActivityDetection(String)
      nameWithType:
        CSharp: EasyManager.SetAutoVoiceActivityDetection(String)
        VB: EasyManager.SetAutoVoiceActivityDetection(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection(System.String)
        VB: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetAutoVoiceActivityDetection
        path: ''
        startLine: 2356
      syntax:
        content:
          CSharp: public void SetAutoVoiceActivityDetection(string userName)
          VB: Public Sub SetAutoVoiceActivityDetection(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection(System.String,System.Int32,System.Int32,System.Int32)
      commentId: M:EasyCodeForVivox.EasyManager.SetVoiceActivityDetection(System.String,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetVoiceActivityDetection(String, Int32, Int32, Int32)
        VB: SetVoiceActivityDetection(String, Int32, Int32, Int32)
      nameWithType:
        CSharp: EasyManager.SetVoiceActivityDetection(String, Int32, Int32, Int32)
        VB: EasyManager.SetVoiceActivityDetection(String, Int32, Int32, Int32)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection(System.String, System.Int32, System.Int32, System.Int32)
        VB: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection(System.String, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetVoiceActivityDetection
        path: ''
        startLine: 2361
      syntax:
        content:
          CSharp: public void SetVoiceActivityDetection(string userName, int hangover, int sensitivity, int noiseFloor)
          VB: Public Sub SetVoiceActivityDetection(userName As String, hangover As Integer, sensitivity As Integer, noiseFloor As Integer)
        parameters:
        - id: userName
          type: System.String
        - id: hangover
          type: System.Int32
        - id: sensitivity
          type: System.Int32
        - id: noiseFloor
          type: System.Int32
      overload: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SetAudioInputDevice(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.SetAudioInputDevice(System.String)
      language: CSharp
      name:
        CSharp: SetAudioInputDevice(String)
        VB: SetAudioInputDevice(String)
      nameWithType:
        CSharp: EasyManager.SetAudioInputDevice(String)
        VB: EasyManager.SetAudioInputDevice(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SetAudioInputDevice(System.String)
        VB: EasyCodeForVivox.EasyManager.SetAudioInputDevice(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetAudioInputDevice
        path: ''
        startLine: 2366
      syntax:
        content:
          CSharp: public void SetAudioInputDevice(string deviceName)
          VB: Public Sub SetAudioInputDevice(deviceName As String)
        parameters:
        - id: deviceName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.SetAudioInputDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.SetAudioOutputDevice(System.String)
      commentId: M:EasyCodeForVivox.EasyManager.SetAudioOutputDevice(System.String)
      language: CSharp
      name:
        CSharp: SetAudioOutputDevice(String)
        VB: SetAudioOutputDevice(String)
      nameWithType:
        CSharp: EasyManager.SetAudioOutputDevice(String)
        VB: EasyManager.SetAudioOutputDevice(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.SetAudioOutputDevice(System.String)
        VB: EasyCodeForVivox.EasyManager.SetAudioOutputDevice(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetAudioOutputDevice
        path: ''
        startLine: 2379
      syntax:
        content:
          CSharp: public void SetAudioOutputDevice(string deviceName)
          VB: Public Sub SetAudioOutputDevice(deviceName As String)
        parameters:
        - id: deviceName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.SetAudioOutputDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices
      commentId: M:EasyCodeForVivox.EasyManager.RefreshAudioInputDevices
      language: CSharp
      name:
        CSharp: RefreshAudioInputDevices()
        VB: RefreshAudioInputDevices()
      nameWithType:
        CSharp: EasyManager.RefreshAudioInputDevices()
        VB: EasyManager.RefreshAudioInputDevices()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices()
        VB: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: RefreshAudioInputDevices
        path: ''
        startLine: 2392
      syntax:
        content:
          CSharp: public void RefreshAudioInputDevices()
          VB: Public Sub RefreshAudioInputDevices
      overload: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices
      commentId: M:EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices
      language: CSharp
      name:
        CSharp: RefreshAudioOutputDevices()
        VB: RefreshAudioOutputDevices()
      nameWithType:
        CSharp: EasyManager.RefreshAudioOutputDevices()
        VB: EasyManager.RefreshAudioOutputDevices()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices()
        VB: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: RefreshAudioOutputDevices
        path: ''
        startLine: 2397
      syntax:
        content:
          CSharp: public void RefreshAudioOutputDevices()
          VB: Public Sub RefreshAudioOutputDevices
      overload: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.GetAudioInputDevices
      commentId: M:EasyCodeForVivox.EasyManager.GetAudioInputDevices
      language: CSharp
      name:
        CSharp: GetAudioInputDevices()
        VB: GetAudioInputDevices()
      nameWithType:
        CSharp: EasyManager.GetAudioInputDevices()
        VB: EasyManager.GetAudioInputDevices()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.GetAudioInputDevices()
        VB: EasyCodeForVivox.EasyManager.GetAudioInputDevices()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetAudioInputDevices
        path: ''
        startLine: 2402
      syntax:
        content:
          CSharp: public IEnumerable<IAudioDevice> GetAudioInputDevices()
          VB: Public Function GetAudioInputDevices As IEnumerable(Of IAudioDevice)
        return:
          type: IEnumerable{IAudioDevice}
      overload: EasyCodeForVivox.EasyManager.GetAudioInputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.GetAudioOutputDevices
      commentId: M:EasyCodeForVivox.EasyManager.GetAudioOutputDevices
      language: CSharp
      name:
        CSharp: GetAudioOutputDevices()
        VB: GetAudioOutputDevices()
      nameWithType:
        CSharp: EasyManager.GetAudioOutputDevices()
        VB: EasyManager.GetAudioOutputDevices()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.GetAudioOutputDevices()
        VB: EasyCodeForVivox.EasyManager.GetAudioOutputDevices()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetAudioOutputDevices
        path: ''
        startLine: 2407
      syntax:
        content:
          CSharp: public IEnumerable<IAudioDevice> GetAudioOutputDevices()
          VB: Public Function GetAudioOutputDevices As IEnumerable(Of IAudioDevice)
        return:
          type: IEnumerable{IAudioDevice}
      overload: EasyCodeForVivox.EasyManager.GetAudioOutputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.EnablePushToTalk(System.Boolean,KeyCode)
      commentId: M:EasyCodeForVivox.EasyManager.EnablePushToTalk(System.Boolean,KeyCode)
      language: CSharp
      name:
        CSharp: EnablePushToTalk(Boolean, KeyCode)
        VB: EnablePushToTalk(Boolean, KeyCode)
      nameWithType:
        CSharp: EasyManager.EnablePushToTalk(Boolean, KeyCode)
        VB: EasyManager.EnablePushToTalk(Boolean, KeyCode)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.EnablePushToTalk(System.Boolean, KeyCode)
        VB: EasyCodeForVivox.EasyManager.EnablePushToTalk(System.Boolean, KeyCode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: EnablePushToTalk
        path: ''
        startLine: 2412
      syntax:
        content:
          CSharp: public void EnablePushToTalk(bool enable, KeyCode keyCode)
          VB: Public Sub EnablePushToTalk(enable As Boolean, keyCode As KeyCode)
        parameters:
        - id: enable
          type: System.Boolean
        - id: keyCode
          type: KeyCode
      overload: EasyCodeForVivox.EasyManager.EnablePushToTalk*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String,System.String)
      language: CSharp
      name:
        CSharp: PlayTTSMessage(String, String)
        VB: PlayTTSMessage(String, String)
      nameWithType:
        CSharp: EasyManager.PlayTTSMessage(String, String)
        VB: EasyManager.PlayTTSMessage(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String, System.String)
        VB: EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: PlayTTSMessage
        path: ''
        startLine: 2440
      syntax:
        content:
          CSharp: public void PlayTTSMessage(string msg, string userName)
          VB: Public Sub PlayTTSMessage(msg As String, userName As String)
        parameters:
        - id: msg
          type: System.String
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.PlayTTSMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String,System.String,TTSDestination)
      commentId: M:EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String,System.String,TTSDestination)
      language: CSharp
      name:
        CSharp: PlayTTSMessage(String, String, TTSDestination)
        VB: PlayTTSMessage(String, String, TTSDestination)
      nameWithType:
        CSharp: EasyManager.PlayTTSMessage(String, String, TTSDestination)
        VB: EasyManager.PlayTTSMessage(String, String, TTSDestination)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String, System.String, TTSDestination)
        VB: EasyCodeForVivox.EasyManager.PlayTTSMessage(System.String, System.String, TTSDestination)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: PlayTTSMessage
        path: ''
        startLine: 2445
      syntax:
        content:
          CSharp: public void PlayTTSMessage(string msg, string userName, TTSDestination playMode)
          VB: Public Sub PlayTTSMessage(msg As String, userName As String, playMode As TTSDestination)
        parameters:
        - id: msg
          type: System.String
        - id: userName
          type: System.String
        - id: playMode
          type: TTSDestination
      overload: EasyCodeForVivox.EasyManager.PlayTTSMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.ChooseVoiceGender(EasyCodeForVivox.VoiceGender,System.String)
      commentId: M:EasyCodeForVivox.EasyManager.ChooseVoiceGender(EasyCodeForVivox.VoiceGender,System.String)
      language: CSharp
      name:
        CSharp: ChooseVoiceGender(VoiceGender, String)
        VB: ChooseVoiceGender(VoiceGender, String)
      nameWithType:
        CSharp: EasyManager.ChooseVoiceGender(VoiceGender, String)
        VB: EasyManager.ChooseVoiceGender(VoiceGender, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.ChooseVoiceGender(EasyCodeForVivox.VoiceGender, System.String)
        VB: EasyCodeForVivox.EasyManager.ChooseVoiceGender(EasyCodeForVivox.VoiceGender, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ChooseVoiceGender
        path: ''
        startLine: 2450
      syntax:
        content:
          CSharp: public void ChooseVoiceGender(VoiceGender voiceGender, string userName)
          VB: Public Sub ChooseVoiceGender(voiceGender As VoiceGender, userName As String)
        parameters:
        - id: voiceGender
          type: EasyCodeForVivox.VoiceGender
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyManager.ChooseVoiceGender*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyManager.OnLoggingIn(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnLoggingIn(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggingIn(ILoginSession)
        VB: OnLoggingIn(ILoginSession)
      nameWithType:
        CSharp: EasyManager.OnLoggingIn(ILoginSession)
        VB: EasyManager.OnLoggingIn(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLoggingIn(ILoginSession)
        VB: EasyCodeForVivox.EasyManager.OnLoggingIn(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoggingIn
        path: ''
        startLine: 2474
      syntax:
        content:
          CSharp: protected virtual void OnLoggingIn(ILoginSession loginSession)
          VB: Protected Overridable Sub OnLoggingIn(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyManager.OnLoggingIn*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLoggedIn(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnLoggedIn(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggedIn(ILoginSession)
        VB: OnLoggedIn(ILoginSession)
      nameWithType:
        CSharp: EasyManager.OnLoggedIn(ILoginSession)
        VB: EasyManager.OnLoggedIn(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLoggedIn(ILoginSession)
        VB: EasyCodeForVivox.EasyManager.OnLoggedIn(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoggedIn
        path: ''
        startLine: 2480
      syntax:
        content:
          CSharp: protected virtual void OnLoggedIn(ILoginSession loginSession)
          VB: Protected Overridable Sub OnLoggedIn(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyManager.OnLoggedIn*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLoggingOut(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnLoggingOut(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggingOut(ILoginSession)
        VB: OnLoggingOut(ILoginSession)
      nameWithType:
        CSharp: EasyManager.OnLoggingOut(ILoginSession)
        VB: EasyManager.OnLoggingOut(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLoggingOut(ILoginSession)
        VB: EasyCodeForVivox.EasyManager.OnLoggingOut(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoggingOut
        path: ''
        startLine: 2486
      syntax:
        content:
          CSharp: protected virtual void OnLoggingOut(ILoginSession loginSession)
          VB: Protected Overridable Sub OnLoggingOut(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyManager.OnLoggingOut*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLoggedOut(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnLoggedOut(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggedOut(ILoginSession)
        VB: OnLoggedOut(ILoginSession)
      nameWithType:
        CSharp: EasyManager.OnLoggedOut(ILoginSession)
        VB: EasyManager.OnLoggedOut(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLoggedOut(ILoginSession)
        VB: EasyCodeForVivox.EasyManager.OnLoggedOut(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoggedOut
        path: ''
        startLine: 2492
      syntax:
        content:
          CSharp: protected virtual void OnLoggedOut(ILoginSession loginSession)
          VB: Protected Overridable Sub OnLoggedOut(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyManager.OnLoggedOut*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLoginAdded(AccountId)
      commentId: M:EasyCodeForVivox.EasyManager.OnLoginAdded(AccountId)
      language: CSharp
      name:
        CSharp: OnLoginAdded(AccountId)
        VB: OnLoginAdded(AccountId)
      nameWithType:
        CSharp: EasyManager.OnLoginAdded(AccountId)
        VB: EasyManager.OnLoginAdded(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLoginAdded(AccountId)
        VB: EasyCodeForVivox.EasyManager.OnLoginAdded(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoginAdded
        path: ''
        startLine: 2510
      syntax:
        content:
          CSharp: protected virtual void OnLoginAdded(AccountId accountId)
          VB: Protected Overridable Sub OnLoginAdded(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.EasyManager.OnLoginAdded*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLoginRemoved(AccountId)
      commentId: M:EasyCodeForVivox.EasyManager.OnLoginRemoved(AccountId)
      language: CSharp
      name:
        CSharp: OnLoginRemoved(AccountId)
        VB: OnLoginRemoved(AccountId)
      nameWithType:
        CSharp: EasyManager.OnLoginRemoved(AccountId)
        VB: EasyManager.OnLoginRemoved(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLoginRemoved(AccountId)
        VB: EasyCodeForVivox.EasyManager.OnLoginRemoved(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoginRemoved
        path: ''
        startLine: 2516
      syntax:
        content:
          CSharp: protected virtual void OnLoginRemoved(AccountId accountId)
          VB: Protected Overridable Sub OnLoginRemoved(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.EasyManager.OnLoginRemoved*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLoginUpdated(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnLoginUpdated(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoginUpdated(ILoginSession)
        VB: OnLoginUpdated(ILoginSession)
      nameWithType:
        CSharp: EasyManager.OnLoginUpdated(ILoginSession)
        VB: EasyManager.OnLoginUpdated(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLoginUpdated(ILoginSession)
        VB: EasyCodeForVivox.EasyManager.OnLoginUpdated(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoginUpdated
        path: ''
        startLine: 2522
      syntax:
        content:
          CSharp: protected virtual void OnLoginUpdated(ILoginSession loginSession)
          VB: Protected Overridable Sub OnLoginUpdated(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyManager.OnLoginUpdated*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnChannelConnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnChannelConnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelConnecting(IChannelSession)
        VB: OnChannelConnecting(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnChannelConnecting(IChannelSession)
        VB: EasyManager.OnChannelConnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnChannelConnecting(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnChannelConnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelConnecting
        path: ''
        startLine: 2535
      syntax:
        content:
          CSharp: protected virtual void OnChannelConnecting(IChannelSession channelSession)
          VB: Protected Overridable Sub OnChannelConnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnChannelConnecting*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnChannelConnected(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnChannelConnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelConnected(IChannelSession)
        VB: OnChannelConnected(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnChannelConnected(IChannelSession)
        VB: EasyManager.OnChannelConnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnChannelConnected(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnChannelConnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelConnected
        path: ''
        startLine: 2541
      syntax:
        content:
          CSharp: protected virtual void OnChannelConnected(IChannelSession channelSession)
          VB: Protected Overridable Sub OnChannelConnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnChannelConnected*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnChannelDisconnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnChannelDisconnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelDisconnecting(IChannelSession)
        VB: OnChannelDisconnecting(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnChannelDisconnecting(IChannelSession)
        VB: EasyManager.OnChannelDisconnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnChannelDisconnecting(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnChannelDisconnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelDisconnecting
        path: ''
        startLine: 2550
      syntax:
        content:
          CSharp: protected virtual void OnChannelDisconnecting(IChannelSession channelSession)
          VB: Protected Overridable Sub OnChannelDisconnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnChannelDisconnecting*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnChannelDisconnected(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnChannelDisconnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelDisconnected(IChannelSession)
        VB: OnChannelDisconnected(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnChannelDisconnected(IChannelSession)
        VB: EasyManager.OnChannelDisconnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnChannelDisconnected(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnChannelDisconnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelDisconnected
        path: ''
        startLine: 2556
      syntax:
        content:
          CSharp: protected virtual void OnChannelDisconnected(IChannelSession channelSession)
          VB: Protected Overridable Sub OnChannelDisconnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnChannelDisconnected*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioChannelConnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnecting(IChannelSession)
        VB: OnAudioChannelConnecting(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnAudioChannelConnecting(IChannelSession)
        VB: EasyManager.OnAudioChannelConnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioChannelConnecting
        path: ''
        startLine: 2566
      syntax:
        content:
          CSharp: protected virtual void OnAudioChannelConnecting(IChannelSession channelSession)
          VB: Protected Overridable Sub OnAudioChannelConnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioChannelConnected(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioChannelConnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnected(IChannelSession)
        VB: OnAudioChannelConnected(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnAudioChannelConnected(IChannelSession)
        VB: EasyManager.OnAudioChannelConnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioChannelConnected(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnAudioChannelConnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioChannelConnected
        path: ''
        startLine: 2572
      syntax:
        content:
          CSharp: protected virtual void OnAudioChannelConnected(IChannelSession channelSession)
          VB: Protected Overridable Sub OnAudioChannelConnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnAudioChannelConnected*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnecting(IChannelSession)
        VB: OnAudioChannelDisconnecting(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnAudioChannelDisconnecting(IChannelSession)
        VB: EasyManager.OnAudioChannelDisconnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioChannelDisconnecting
        path: ''
        startLine: 2578
      syntax:
        content:
          CSharp: protected virtual void OnAudioChannelDisconnecting(IChannelSession channelSession)
          VB: Protected Overridable Sub OnAudioChannelDisconnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnected(IChannelSession)
        VB: OnAudioChannelDisconnected(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnAudioChannelDisconnected(IChannelSession)
        VB: EasyManager.OnAudioChannelDisconnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioChannelDisconnected
        path: ''
        startLine: 2584
      syntax:
        content:
          CSharp: protected virtual void OnAudioChannelDisconnected(IChannelSession channelSession)
          VB: Protected Overridable Sub OnAudioChannelDisconnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnTextChannelConnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnTextChannelConnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelConnecting(IChannelSession)
        VB: OnTextChannelConnecting(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnTextChannelConnecting(IChannelSession)
        VB: EasyManager.OnTextChannelConnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnTextChannelConnecting(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnTextChannelConnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnTextChannelConnecting
        path: ''
        startLine: 2593
      syntax:
        content:
          CSharp: protected virtual void OnTextChannelConnecting(IChannelSession channelSession)
          VB: Protected Overridable Sub OnTextChannelConnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnTextChannelConnecting*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnTextChannelConnected(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnTextChannelConnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelConnected(IChannelSession)
        VB: OnTextChannelConnected(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnTextChannelConnected(IChannelSession)
        VB: EasyManager.OnTextChannelConnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnTextChannelConnected(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnTextChannelConnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnTextChannelConnected
        path: ''
        startLine: 2599
      syntax:
        content:
          CSharp: protected virtual void OnTextChannelConnected(IChannelSession channelSession)
          VB: Protected Overridable Sub OnTextChannelConnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnTextChannelConnected*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnecting(IChannelSession)
        VB: OnTextChannelDisconnecting(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnTextChannelDisconnecting(IChannelSession)
        VB: EasyManager.OnTextChannelDisconnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnTextChannelDisconnecting
        path: ''
        startLine: 2605
      syntax:
        content:
          CSharp: protected virtual void OnTextChannelDisconnecting(IChannelSession channelSession)
          VB: Protected Overridable Sub OnTextChannelDisconnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyManager.OnTextChannelDisconnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnected(IChannelSession)
        VB: OnTextChannelDisconnected(IChannelSession)
      nameWithType:
        CSharp: EasyManager.OnTextChannelDisconnected(IChannelSession)
        VB: EasyManager.OnTextChannelDisconnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected(IChannelSession)
        VB: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnTextChannelDisconnected
        path: ''
        startLine: 2611
      syntax:
        content:
          CSharp: protected virtual void OnTextChannelDisconnected(IChannelSession channelSession)
          VB: Protected Overridable Sub OnTextChannelDisconnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLocalUserMuted
      commentId: M:EasyCodeForVivox.EasyManager.OnLocalUserMuted
      language: CSharp
      name:
        CSharp: OnLocalUserMuted()
        VB: OnLocalUserMuted()
      nameWithType:
        CSharp: EasyManager.OnLocalUserMuted()
        VB: EasyManager.OnLocalUserMuted()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLocalUserMuted()
        VB: EasyCodeForVivox.EasyManager.OnLocalUserMuted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLocalUserMuted
        path: ''
        startLine: 2624
      syntax:
        content:
          CSharp: protected virtual void OnLocalUserMuted()
          VB: Protected Overridable Sub OnLocalUserMuted
      overload: EasyCodeForVivox.EasyManager.OnLocalUserMuted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted
      commentId: M:EasyCodeForVivox.EasyManager.OnLocalUserUnmuted
      language: CSharp
      name:
        CSharp: OnLocalUserUnmuted()
        VB: OnLocalUserUnmuted()
      nameWithType:
        CSharp: EasyManager.OnLocalUserUnmuted()
        VB: EasyManager.OnLocalUserUnmuted()
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted()
        VB: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLocalUserUnmuted
        path: ''
        startLine: 2630
      syntax:
        content:
          CSharp: protected virtual void OnLocalUserUnmuted()
          VB: Protected Overridable Sub OnLocalUserUnmuted
      overload: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnCrossMuted(AccountId)
      commentId: M:EasyCodeForVivox.EasyManager.OnCrossMuted(AccountId)
      language: CSharp
      name:
        CSharp: OnCrossMuted(AccountId)
        VB: OnCrossMuted(AccountId)
      nameWithType:
        CSharp: EasyManager.OnCrossMuted(AccountId)
        VB: EasyManager.OnCrossMuted(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnCrossMuted(AccountId)
        VB: EasyCodeForVivox.EasyManager.OnCrossMuted(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnCrossMuted
        path: ''
        startLine: 2636
      syntax:
        content:
          CSharp: protected virtual void OnCrossMuted(AccountId accountId)
          VB: Protected Overridable Sub OnCrossMuted(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.EasyManager.OnCrossMuted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnCrossUnmuted(AccountId)
      commentId: M:EasyCodeForVivox.EasyManager.OnCrossUnmuted(AccountId)
      language: CSharp
      name:
        CSharp: OnCrossUnmuted(AccountId)
        VB: OnCrossUnmuted(AccountId)
      nameWithType:
        CSharp: EasyManager.OnCrossUnmuted(AccountId)
        VB: EasyManager.OnCrossUnmuted(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnCrossUnmuted(AccountId)
        VB: EasyCodeForVivox.EasyManager.OnCrossUnmuted(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnCrossUnmuted
        path: ''
        startLine: 2642
      syntax:
        content:
          CSharp: protected virtual void OnCrossUnmuted(AccountId accountId)
          VB: Protected Overridable Sub OnCrossUnmuted(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.EasyManager.OnCrossUnmuted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnUserMuted(IParticipant)
      commentId: M:EasyCodeForVivox.EasyManager.OnUserMuted(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserMuted(IParticipant)
        VB: OnUserMuted(IParticipant)
      nameWithType:
        CSharp: EasyManager.OnUserMuted(IParticipant)
        VB: EasyManager.OnUserMuted(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnUserMuted(IParticipant)
        VB: EasyCodeForVivox.EasyManager.OnUserMuted(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserMuted
        path: ''
        startLine: 2648
      syntax:
        content:
          CSharp: protected virtual void OnUserMuted(IParticipant participant)
          VB: Protected Overridable Sub OnUserMuted(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.EasyManager.OnUserMuted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnUserUnmuted(IParticipant)
      commentId: M:EasyCodeForVivox.EasyManager.OnUserUnmuted(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserUnmuted(IParticipant)
        VB: OnUserUnmuted(IParticipant)
      nameWithType:
        CSharp: EasyManager.OnUserUnmuted(IParticipant)
        VB: EasyManager.OnUserUnmuted(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnUserUnmuted(IParticipant)
        VB: EasyCodeForVivox.EasyManager.OnUserUnmuted(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserUnmuted
        path: ''
        startLine: 2654
      syntax:
        content:
          CSharp: protected virtual void OnUserUnmuted(IParticipant participant)
          VB: Protected Overridable Sub OnUserUnmuted(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.EasyManager.OnUserUnmuted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnUserSpeaking(IParticipant)
      commentId: M:EasyCodeForVivox.EasyManager.OnUserSpeaking(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserSpeaking(IParticipant)
        VB: OnUserSpeaking(IParticipant)
      nameWithType:
        CSharp: EasyManager.OnUserSpeaking(IParticipant)
        VB: EasyManager.OnUserSpeaking(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnUserSpeaking(IParticipant)
        VB: EasyCodeForVivox.EasyManager.OnUserSpeaking(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserSpeaking
        path: ''
        startLine: 2660
      syntax:
        content:
          CSharp: protected virtual void OnUserSpeaking(IParticipant participant)
          VB: Protected Overridable Sub OnUserSpeaking(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.EasyManager.OnUserSpeaking*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnUserNotSpeaking(IParticipant)
      commentId: M:EasyCodeForVivox.EasyManager.OnUserNotSpeaking(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserNotSpeaking(IParticipant)
        VB: OnUserNotSpeaking(IParticipant)
      nameWithType:
        CSharp: EasyManager.OnUserNotSpeaking(IParticipant)
        VB: EasyManager.OnUserNotSpeaking(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnUserNotSpeaking(IParticipant)
        VB: EasyCodeForVivox.EasyManager.OnUserNotSpeaking(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserNotSpeaking
        path: ''
        startLine: 2666
      syntax:
        content:
          CSharp: protected virtual void OnUserNotSpeaking(IParticipant participant)
          VB: Protected Overridable Sub OnUserNotSpeaking(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.EasyManager.OnUserNotSpeaking*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnUserJoinedChannel(IParticipant)
      commentId: M:EasyCodeForVivox.EasyManager.OnUserJoinedChannel(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserJoinedChannel(IParticipant)
        VB: OnUserJoinedChannel(IParticipant)
      nameWithType:
        CSharp: EasyManager.OnUserJoinedChannel(IParticipant)
        VB: EasyManager.OnUserJoinedChannel(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnUserJoinedChannel(IParticipant)
        VB: EasyCodeForVivox.EasyManager.OnUserJoinedChannel(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserJoinedChannel
        path: ''
        startLine: 2681
      syntax:
        content:
          CSharp: protected virtual void OnUserJoinedChannel(IParticipant participant)
          VB: Protected Overridable Sub OnUserJoinedChannel(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.EasyManager.OnUserJoinedChannel*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnUserLeftChannel(IParticipant)
      commentId: M:EasyCodeForVivox.EasyManager.OnUserLeftChannel(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserLeftChannel(IParticipant)
        VB: OnUserLeftChannel(IParticipant)
      nameWithType:
        CSharp: EasyManager.OnUserLeftChannel(IParticipant)
        VB: EasyManager.OnUserLeftChannel(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnUserLeftChannel(IParticipant)
        VB: EasyCodeForVivox.EasyManager.OnUserLeftChannel(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserLeftChannel
        path: ''
        startLine: 2687
      syntax:
        content:
          CSharp: protected virtual void OnUserLeftChannel(IParticipant participant)
          VB: Protected Overridable Sub OnUserLeftChannel(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.EasyManager.OnUserLeftChannel*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnUserValuesUpdated(IParticipant)
      commentId: M:EasyCodeForVivox.EasyManager.OnUserValuesUpdated(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserValuesUpdated(IParticipant)
        VB: OnUserValuesUpdated(IParticipant)
      nameWithType:
        CSharp: EasyManager.OnUserValuesUpdated(IParticipant)
        VB: EasyManager.OnUserValuesUpdated(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnUserValuesUpdated(IParticipant)
        VB: EasyCodeForVivox.EasyManager.OnUserValuesUpdated(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserValuesUpdated
        path: ''
        startLine: 2693
      syntax:
        content:
          CSharp: protected virtual void OnUserValuesUpdated(IParticipant participant)
          VB: Protected Overridable Sub OnUserValuesUpdated(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.EasyManager.OnUserValuesUpdated*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved(IChannelTextMessage)
      commentId: M:EasyCodeForVivox.EasyManager.OnChannelMessageRecieved(IChannelTextMessage)
      language: CSharp
      name:
        CSharp: OnChannelMessageRecieved(IChannelTextMessage)
        VB: OnChannelMessageRecieved(IChannelTextMessage)
      nameWithType:
        CSharp: EasyManager.OnChannelMessageRecieved(IChannelTextMessage)
        VB: EasyManager.OnChannelMessageRecieved(IChannelTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved(IChannelTextMessage)
        VB: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved(IChannelTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelMessageRecieved
        path: ''
        startLine: 2706
      syntax:
        content:
          CSharp: protected virtual void OnChannelMessageRecieved(IChannelTextMessage textMessage)
          VB: Protected Overridable Sub OnChannelMessageRecieved(textMessage As IChannelTextMessage)
        parameters:
        - id: textMessage
          type: IChannelTextMessage
      overload: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnEventMessageRecieved(IChannelTextMessage)
      commentId: M:EasyCodeForVivox.EasyManager.OnEventMessageRecieved(IChannelTextMessage)
      language: CSharp
      name:
        CSharp: OnEventMessageRecieved(IChannelTextMessage)
        VB: OnEventMessageRecieved(IChannelTextMessage)
      nameWithType:
        CSharp: EasyManager.OnEventMessageRecieved(IChannelTextMessage)
        VB: EasyManager.OnEventMessageRecieved(IChannelTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnEventMessageRecieved(IChannelTextMessage)
        VB: EasyCodeForVivox.EasyManager.OnEventMessageRecieved(IChannelTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnEventMessageRecieved
        path: ''
        startLine: 2712
      syntax:
        content:
          CSharp: protected virtual void OnEventMessageRecieved(IChannelTextMessage textMessage)
          VB: Protected Overridable Sub OnEventMessageRecieved(textMessage As IChannelTextMessage)
        parameters:
        - id: textMessage
          type: IChannelTextMessage
      overload: EasyCodeForVivox.EasyManager.OnEventMessageRecieved*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved(IDirectedTextMessage)
      commentId: M:EasyCodeForVivox.EasyManager.OnDirectMessageRecieved(IDirectedTextMessage)
      language: CSharp
      name:
        CSharp: OnDirectMessageRecieved(IDirectedTextMessage)
        VB: OnDirectMessageRecieved(IDirectedTextMessage)
      nameWithType:
        CSharp: EasyManager.OnDirectMessageRecieved(IDirectedTextMessage)
        VB: EasyManager.OnDirectMessageRecieved(IDirectedTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved(IDirectedTextMessage)
        VB: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved(IDirectedTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnDirectMessageRecieved
        path: ''
        startLine: 2718
      syntax:
        content:
          CSharp: protected virtual void OnDirectMessageRecieved(IDirectedTextMessage directedTextMessage)
          VB: Protected Overridable Sub OnDirectMessageRecieved(directedTextMessage As IDirectedTextMessage)
        parameters:
        - id: directedTextMessage
          type: IDirectedTextMessage
      overload: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnDirectMessageFailed(IFailedDirectedTextMessage)
      commentId: M:EasyCodeForVivox.EasyManager.OnDirectMessageFailed(IFailedDirectedTextMessage)
      language: CSharp
      name:
        CSharp: OnDirectMessageFailed(IFailedDirectedTextMessage)
        VB: OnDirectMessageFailed(IFailedDirectedTextMessage)
      nameWithType:
        CSharp: EasyManager.OnDirectMessageFailed(IFailedDirectedTextMessage)
        VB: EasyManager.OnDirectMessageFailed(IFailedDirectedTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnDirectMessageFailed(IFailedDirectedTextMessage)
        VB: EasyCodeForVivox.EasyManager.OnDirectMessageFailed(IFailedDirectedTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnDirectMessageFailed
        path: ''
        startLine: 2724
      syntax:
        content:
          CSharp: protected virtual void OnDirectMessageFailed(IFailedDirectedTextMessage failedMessage)
          VB: Protected Overridable Sub OnDirectMessageFailed(failedMessage As IFailedDirectedTextMessage)
        parameters:
        - id: failedMessage
          type: IFailedDirectedTextMessage
      overload: EasyCodeForVivox.EasyManager.OnDirectMessageFailed*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded(IAudioDevice)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceAdded(IAudioDevice)
        VB: OnAudioInputDeviceAdded(IAudioDevice)
      nameWithType:
        CSharp: EasyManager.OnAudioInputDeviceAdded(IAudioDevice)
        VB: EasyManager.OnAudioInputDeviceAdded(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded(IAudioDevice)
        VB: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioInputDeviceAdded
        path: ''
        startLine: 2737
      syntax:
        content:
          CSharp: protected virtual void OnAudioInputDeviceAdded(IAudioDevice audioDevice)
          VB: Protected Overridable Sub OnAudioInputDeviceAdded(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved(IAudioDevice)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceRemoved(IAudioDevice)
        VB: OnAudioInputDeviceRemoved(IAudioDevice)
      nameWithType:
        CSharp: EasyManager.OnAudioInputDeviceRemoved(IAudioDevice)
        VB: EasyManager.OnAudioInputDeviceRemoved(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved(IAudioDevice)
        VB: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioInputDeviceRemoved
        path: ''
        startLine: 2743
      syntax:
        content:
          CSharp: protected virtual void OnAudioInputDeviceRemoved(IAudioDevice audioDevice)
          VB: Protected Overridable Sub OnAudioInputDeviceRemoved(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated(IAudioDevice)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceUpdated(IAudioDevice)
        VB: OnAudioInputDeviceUpdated(IAudioDevice)
      nameWithType:
        CSharp: EasyManager.OnAudioInputDeviceUpdated(IAudioDevice)
        VB: EasyManager.OnAudioInputDeviceUpdated(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated(IAudioDevice)
        VB: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioInputDeviceUpdated
        path: ''
        startLine: 2749
      syntax:
        content:
          CSharp: protected virtual void OnAudioInputDeviceUpdated(IAudioDevice audioDevice)
          VB: Protected Overridable Sub OnAudioInputDeviceUpdated(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded(IAudioDevice)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceAdded(IAudioDevice)
        VB: OnAudioOutputDeviceAdded(IAudioDevice)
      nameWithType:
        CSharp: EasyManager.OnAudioOutputDeviceAdded(IAudioDevice)
        VB: EasyManager.OnAudioOutputDeviceAdded(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded(IAudioDevice)
        VB: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioOutputDeviceAdded
        path: ''
        startLine: 2754
      syntax:
        content:
          CSharp: protected virtual void OnAudioOutputDeviceAdded(IAudioDevice audioDevice)
          VB: Protected Overridable Sub OnAudioOutputDeviceAdded(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved(IAudioDevice)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: OnAudioOutputDeviceRemoved(IAudioDevice)
      nameWithType:
        CSharp: EasyManager.OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: EasyManager.OnAudioOutputDeviceRemoved(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioOutputDeviceRemoved
        path: ''
        startLine: 2760
      syntax:
        content:
          CSharp: protected virtual void OnAudioOutputDeviceRemoved(IAudioDevice audioDevice)
          VB: Protected Overridable Sub OnAudioOutputDeviceRemoved(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated(IAudioDevice)
      commentId: M:EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: OnAudioOutputDeviceUpdated(IAudioDevice)
      nameWithType:
        CSharp: EasyManager.OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: EasyManager.OnAudioOutputDeviceUpdated(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnAudioOutputDeviceUpdated
        path: ''
        startLine: 2766
      syntax:
        content:
          CSharp: protected virtual void OnAudioOutputDeviceUpdated(IAudioDevice audioDevice)
          VB: Protected Overridable Sub OnAudioOutputDeviceUpdated(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.EasyManager.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageAdded(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyManager.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
        VB: EasyManager.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.EasyManager.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnTTSMessageAdded
        path: ''
        startLine: 2778
      syntax:
        content:
          CSharp: protected virtual void OnTTSMessageAdded(ITTSMessageQueueEventArgs ttsArgs)
          VB: Protected Overridable Sub OnTTSMessageAdded(ttsArgs As ITTSMessageQueueEventArgs)
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
      overload: EasyCodeForVivox.EasyManager.OnTTSMessageAdded*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.EasyManager.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyManager.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
        VB: EasyManager.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnTTSMessageRemoved
        path: ''
        startLine: 2784
      syntax:
        content:
          CSharp: protected virtual void OnTTSMessageRemoved(ITTSMessageQueueEventArgs ttsArgs)
          VB: Protected Overridable Sub OnTTSMessageRemoved(ttsArgs As ITTSMessageQueueEventArgs)
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
      overload: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.EasyManager.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyManager.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
        VB: EasyManager.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnTTSMessageUpdated
        path: ''
        startLine: 2790
      syntax:
        content:
          CSharp: protected virtual void OnTTSMessageUpdated(ITTSMessageQueueEventArgs ttsArgs)
          VB: Protected Overridable Sub OnTTSMessageUpdated(ttsArgs As ITTSMessageQueueEventArgs)
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
      overload: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: EasyCodeForVivox.EasySession
    commentId: T:EasyCodeForVivox.EasySession
    language: CSharp
    name:
      CSharp: EasySession
      VB: EasySession
    nameWithType:
      CSharp: EasySession
      VB: EasySession
    qualifiedName:
      CSharp: EasyCodeForVivox.EasySession
      VB: EasyCodeForVivox.EasySession
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasySession
      path: ''
      startLine: 2816
    syntax:
      content:
        CSharp: public static class EasySession
        VB: Public Module EasySession
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: EasyCodeForVivox.EasySession.APIEndpoint
      commentId: P:EasyCodeForVivox.EasySession.APIEndpoint
      language: CSharp
      name:
        CSharp: APIEndpoint
        VB: APIEndpoint
      nameWithType:
        CSharp: EasySession.APIEndpoint
        VB: EasySession.APIEndpoint
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.APIEndpoint
        VB: EasyCodeForVivox.EasySession.APIEndpoint
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: APIEndpoint
        path: ''
        startLine: 2818
      syntax:
        content:
          CSharp: public static Uri APIEndpoint { get; set; }
          VB: Public Shared Property APIEndpoint As Uri
        parameters: []
        return:
          type: Uri
      overload: EasyCodeForVivox.EasySession.APIEndpoint*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.Domain
      commentId: P:EasyCodeForVivox.EasySession.Domain
      language: CSharp
      name:
        CSharp: Domain
        VB: Domain
      nameWithType:
        CSharp: EasySession.Domain
        VB: EasySession.Domain
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.Domain
        VB: EasyCodeForVivox.EasySession.Domain
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Domain
        path: ''
        startLine: 2819
      syntax:
        content:
          CSharp: public static string Domain { get; set; }
          VB: Public Shared Property Domain As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.EasySession.Domain*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.Issuer
      commentId: P:EasyCodeForVivox.EasySession.Issuer
      language: CSharp
      name:
        CSharp: Issuer
        VB: Issuer
      nameWithType:
        CSharp: EasySession.Issuer
        VB: EasySession.Issuer
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.Issuer
        VB: EasyCodeForVivox.EasySession.Issuer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Issuer
        path: ''
        startLine: 2820
      syntax:
        content:
          CSharp: public static string Issuer { get; set; }
          VB: Public Shared Property Issuer As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.EasySession.Issuer*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.SecretKey
      commentId: P:EasyCodeForVivox.EasySession.SecretKey
      language: CSharp
      name:
        CSharp: SecretKey
        VB: SecretKey
      nameWithType:
        CSharp: EasySession.SecretKey
        VB: EasySession.SecretKey
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.SecretKey
        VB: EasyCodeForVivox.EasySession.SecretKey
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SecretKey
        path: ''
        startLine: 2821
      syntax:
        content:
          CSharp: public static string SecretKey { get; set; }
          VB: Public Shared Property SecretKey As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.EasySession.SecretKey*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.Client
      commentId: F:EasyCodeForVivox.EasySession.Client
      language: CSharp
      name:
        CSharp: Client
        VB: Client
      nameWithType:
        CSharp: EasySession.Client
        VB: EasySession.Client
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.Client
        VB: EasyCodeForVivox.EasySession.Client
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Client
        path: ''
        startLine: 2823
      syntax:
        content:
          CSharp: public static VivoxUnity.Client Client
          VB: Public Shared Client As VivoxUnity.Client
        return:
          type: VivoxUnity.Client
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.LoginSessions
      commentId: F:EasyCodeForVivox.EasySession.LoginSessions
      language: CSharp
      name:
        CSharp: LoginSessions
        VB: LoginSessions
      nameWithType:
        CSharp: EasySession.LoginSessions
        VB: EasySession.LoginSessions
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.LoginSessions
        VB: EasyCodeForVivox.EasySession.LoginSessions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LoginSessions
        path: ''
        startLine: 2825
      syntax:
        content:
          CSharp: public static Dictionary<string, ILoginSession> LoginSessions
          VB: Public Shared LoginSessions As Dictionary(Of String, ILoginSession)
        return:
          type: Dictionary{System.String,ILoginSession}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.ChannelSessions
      commentId: F:EasyCodeForVivox.EasySession.ChannelSessions
      language: CSharp
      name:
        CSharp: ChannelSessions
        VB: ChannelSessions
      nameWithType:
        CSharp: EasySession.ChannelSessions
        VB: EasySession.ChannelSessions
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.ChannelSessions
        VB: EasyCodeForVivox.EasySession.ChannelSessions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ChannelSessions
        path: ''
        startLine: 2826
      syntax:
        content:
          CSharp: public static Dictionary<string, IChannelSession> ChannelSessions
          VB: Public Shared ChannelSessions As Dictionary(Of String, IChannelSession)
        return:
          type: Dictionary{System.String,IChannelSession}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.UseDynamicEvents
      commentId: P:EasyCodeForVivox.EasySession.UseDynamicEvents
      language: CSharp
      name:
        CSharp: UseDynamicEvents
        VB: UseDynamicEvents
      nameWithType:
        CSharp: EasySession.UseDynamicEvents
        VB: EasySession.UseDynamicEvents
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.UseDynamicEvents
        VB: EasyCodeForVivox.EasySession.UseDynamicEvents
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UseDynamicEvents
        path: ''
        startLine: 2828
      syntax:
        content:
          CSharp: public static bool UseDynamicEvents { get; set; }
          VB: Public Shared Property UseDynamicEvents As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: EasyCodeForVivox.EasySession.UseDynamicEvents*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySession.UniqueCounter
      commentId: P:EasyCodeForVivox.EasySession.UniqueCounter
      language: CSharp
      name:
        CSharp: UniqueCounter
        VB: UniqueCounter
      nameWithType:
        CSharp: EasySession.UniqueCounter
        VB: EasySession.UniqueCounter
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySession.UniqueCounter
        VB: EasyCodeForVivox.EasySession.UniqueCounter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UniqueCounter
        path: ''
        startLine: 2833
      syntax:
        content:
          CSharp: public static int UniqueCounter { get; }
          VB: Public Shared ReadOnly Property UniqueCounter As Integer
        parameters: []
        return:
          type: System.Int32
      overload: EasyCodeForVivox.EasySession.UniqueCounter*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: EasyCodeForVivox.VoiceGender
    commentId: T:EasyCodeForVivox.VoiceGender
    language: CSharp
    name:
      CSharp: VoiceGender
      VB: VoiceGender
    nameWithType:
      CSharp: VoiceGender
      VB: VoiceGender
    qualifiedName:
      CSharp: EasyCodeForVivox.VoiceGender
      VB: EasyCodeForVivox.VoiceGender
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: VoiceGender
      path: ''
      startLine: 2844
    syntax:
      content:
        CSharp: public enum VoiceGender
        VB: Public Enum VoiceGender
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.VoiceGender.male
      commentId: F:EasyCodeForVivox.VoiceGender.male
      language: CSharp
      name:
        CSharp: male
        VB: male
      nameWithType:
        CSharp: VoiceGender.male
        VB: VoiceGender.male
      qualifiedName:
        CSharp: EasyCodeForVivox.VoiceGender.male
        VB: EasyCodeForVivox.VoiceGender.male
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: male
        path: ''
        startLine: 2846
      syntax:
        content:
          CSharp: male = 0
          VB: male = 0
        return:
          type: EasyCodeForVivox.VoiceGender
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.VoiceGender.female
      commentId: F:EasyCodeForVivox.VoiceGender.female
      language: CSharp
      name:
        CSharp: female
        VB: female
      nameWithType:
        CSharp: VoiceGender.female
        VB: VoiceGender.female
      qualifiedName:
        CSharp: EasyCodeForVivox.VoiceGender.female
        VB: EasyCodeForVivox.VoiceGender.female
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: female
        path: ''
        startLine: 2847
      syntax:
        content:
          CSharp: female = 1
          VB: female = 1
        return:
          type: EasyCodeForVivox.VoiceGender
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: EasyCodeForVivox.EasyAccessToken
    commentId: T:EasyCodeForVivox.EasyAccessToken
    language: CSharp
    name:
      CSharp: EasyAccessToken
      VB: EasyAccessToken
    nameWithType:
      CSharp: EasyAccessToken
      VB: EasyAccessToken
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyAccessToken
      VB: EasyCodeForVivox.EasyAccessToken
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyAccessToken
      path: ''
      startLine: 8057
    summary: "\nCopied from Vivox General Unity Documentation.\nCreates Secure Token for Vivox API requests, needed for production ready applications\n<remarks>\n<p>Slightly Altered From Vivox Example To Create Proper Token</p>\n</remarks>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EasyAccessToken : MonoBehaviour'
        VB: >-
          Public Class EasyAccessToken

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyAccessToken.CreateToken(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyAccessToken.CreateToken(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: CreateToken(String, String, Int32, String, Int32, String, String, String)
        VB: CreateToken(String, String, Int32, String, Int32, String, String, String)
      nameWithType:
        CSharp: EasyAccessToken.CreateToken(String, String, Int32, String, Int32, String, String, String)
        VB: EasyAccessToken.CreateToken(String, String, Int32, String, Int32, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAccessToken.CreateToken(System.String, System.String, System.Int32, System.String, System.Int32, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyAccessToken.CreateToken(System.String, System.String, System.Int32, System.String, System.Int32, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CreateToken
        path: ''
        startLine: 8120
      summary: "\nVivox Access Token(VAT) format class to generate valid request tokens.\nRead more on Vivox Documentation\n<remarks>\n<p>This is the only method needed to create all neccessary types of tokens In Vivox</p>\n<p>Names and acronyms are mostly consistent with Vivox Documentation to avoid confusion but expanded upon for better understanding</p>\n</remarks>\n<ul><li>key Token Key - Get From Vivox Developer Portal</li><li>iss Token Issuer - Get From Vivox Developer Portal</li><li>exp Expiration - Vivox Uses Unix Epoch time - Add Expiration time to Epoch value</li><li>vxa Vivox Action to perform - Refer To Vivox Documentation</li><li>vxi Unique Identifier - Create from a custom counter or Unique GUID</li><li>sub Subject : The User to mute, unmute, kick etc.</li><li>f From : The User requesting an action, Usually self or Admin.</li><li>t Channel : The Channel to join, mute, kick, transcribe(Speech-To-Text Vivox Paid Service) etc.</li></ul>\n"
      remarks: "\n<p>Token creation for Kicking people from channels, Muting people, Muting All except one person(Presentation Mode).</p>\n<p>If (Admin) you can kick people from channels or servers.</p>\n<p>If (Admin) you can mute people in channels, muting all except one(Presentation Mode).</p>\n<p>SIP URI(Address) required for f, t, and sub.</p>\n<p>SUB, F, T Can/Should be Null if not needed for the claim/action request.</p>\n<p>ex. login only needs the f paramater, sub == null, t == null.</p>\n<p>ex. Token_F(&quot;yourTokenKey&quot;, &quot;blindmelon-AppName-dev&quot;, (int)epochTime, &quot;login&quot;, 0001, null, &quot;sip:.blindmelon-AppName-dev.jerky.@tla.vivox.com&quot;, null)</p>\n"
      example: []
      syntax:
        content:
          CSharp: public static string CreateToken(string key, string issuer, int exp, string vxa, int vxi, string sub, string f, string t)
          VB: Public Shared Function CreateToken(key As String, issuer As String, exp As Integer, vxa As String, vxi As Integer, sub As String, f As String, t As String) As String
        parameters:
        - id: key
          type: System.String
          description: Token Key From Vivox Developer Portal
        - id: issuer
          type: System.String
          description: Application Issuer - Vivox Developer Portal
        - id: exp
          type: System.Int32
          description: Time in epoch + 90 seconds or prefered timeout
        - id: vxa
          type: System.String
          description: 'Vivox Action to perform : ex. login, kick, join'
        - id: vxi
          type: System.Int32
          description: Unique identifier to garauntee unique Token. Recommended to use counter on server
        - id: sub
          type: System.String
          description: 'sub == Subject : The User to mute, unmute, kick etc.'
        - id: f
          type: System.String
          description: 'f == From : The User requesting an action'
        - id: t
          type: System.String
          description: 't == Channel : The Channel to join, mute, kick, transcribe etc.'
        return:
          type: System.String
          description: A Valid Token For Production Code with Vivox (JWT with empty header)
      overload: EasyCodeForVivox.EasyAccessToken.CreateToken*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasyAccessToken.UnixEpoch
      commentId: F:EasyCodeForVivox.EasyAccessToken.UnixEpoch
      language: CSharp
      name:
        CSharp: UnixEpoch
        VB: UnixEpoch
      nameWithType:
        CSharp: EasyAccessToken.UnixEpoch
        VB: EasyAccessToken.UnixEpoch
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAccessToken.UnixEpoch
        VB: EasyCodeForVivox.EasyAccessToken.UnixEpoch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UnixEpoch
        path: ''
        startLine: 8159
      example: []
      syntax:
        content:
          CSharp: public static readonly DateTime UnixEpoch
          VB: Public Shared ReadOnly UnixEpoch As DateTime
        return:
          type: DateTime
          description: "\nGets Unix Epoch (January 1st, 1970, 00:00:00) to create valid expiration times for Vivox Access Tokens- Used in <xref href=\"EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable%7bTimeSpan%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
      references:
        EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable{TimeSpan}): 
    - id: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable{TimeSpan})
      commentId: M:EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable{TimeSpan})
      language: CSharp
      name:
        CSharp: SecondsSinceUnixEpochPlusDuration(Nullable<TimeSpan>)
        VB: SecondsSinceUnixEpochPlusDuration(Nullable(Of TimeSpan))
      nameWithType:
        CSharp: EasyAccessToken.SecondsSinceUnixEpochPlusDuration(Nullable<TimeSpan>)
        VB: EasyAccessToken.SecondsSinceUnixEpochPlusDuration(Nullable(Of TimeSpan))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable<TimeSpan>)
        VB: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable(Of TimeSpan))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SecondsSinceUnixEpochPlusDuration
        path: ''
        startLine: 8169
      summary: "\nCopied Implementation From Vivox API.\nUsed for obtaining time in seconds of Unix Epoch to Now(Current Time) with the option of an added duration.\n"
      example: []
      syntax:
        content:
          CSharp: public static int SecondsSinceUnixEpochPlusDuration(TimeSpan? duration = default(TimeSpan? ))
          VB: Public Shared Function SecondsSinceUnixEpochPlusDuration(duration As TimeSpan? = Nothing) As Integer
        parameters:
        - id: duration
          type: System.Nullable{TimeSpan}
          description: Timespan ahead of (DateTime.UtcNow - Unix Epoch) you want to have a timestamp for.
        return:
          type: System.Int32
          description: The time in seconds from Unix Epoch (January 1st, 1970, 00:00:00) to DateTime.UtcNow with an added duration.
      overload: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration*
      see:
      - linkId: EasyCodeForVivox.EasyAccessToken.CreateToken(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)
        commentId: M:EasyCodeForVivox.EasyAccessToken.CreateToken(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        ? EasyCodeForVivox.EasyAccessToken.CreateToken(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)
        : 
  - id: EasyCodeForVivox.Claims
    commentId: T:EasyCodeForVivox.Claims
    language: CSharp
    name:
      CSharp: Claims
      VB: Claims
    nameWithType:
      CSharp: Claims
      VB: Claims
    qualifiedName:
      CSharp: EasyCodeForVivox.Claims
      VB: EasyCodeForVivox.Claims
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: Claims
      path: ''
      startLine: 8258
    summary: "\nVivox Access Token(VAT) format class to generate valid request tokens.\nRead more on Vivox Documentation\n<remarks>\n<p>\nClass/Model that will be seriliazed by <see cref=\"!:UnityEngine.JsonUtility\">JsonUtility</see> \nto create the JSON payload that will be used to create the Vivox Access Token\n</p>\n</remarks>\n<ul><li>iss Token Issuer - Get From Vivox Developer Portal</li><li>exp Expiration - Vivox Uses Unix Epoch time - Add Expiration time to Epoch value</li><li>vxa Vivox Action to perform - Login, Join Channel, Kick, Mute etc.</li><li>vxi Unique Identifier - Create from a custom counter or Unique GUID</li><li>sub Subject : The User to mute, unmute, kick etc.</li><li>f From : The User requesting an action, Usually self or Admin.</li><li>t Channel : The Channel to join, mute, kick, transcribe(Speech-To-Text Vivox Paid Service) etc.</li></ul>\n"
    example: []
    syntax:
      content:
        CSharp: public class Claims
        VB: Public Class Claims
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Claims.iss
      commentId: P:EasyCodeForVivox.Claims.iss
      language: CSharp
      name:
        CSharp: iss
        VB: iss
      nameWithType:
        CSharp: Claims.iss
        VB: Claims.iss
      qualifiedName:
        CSharp: EasyCodeForVivox.Claims.iss
        VB: EasyCodeForVivox.Claims.iss
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: iss
        path: ''
        startLine: 8263
      summary: "\nIssuer : Get from Vivox Developer Portal\n"
      example: []
      syntax:
        content:
          CSharp: public string iss { get; set; }
          VB: Public Property iss As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.Claims.iss*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Claims.exp
      commentId: P:EasyCodeForVivox.Claims.exp
      language: CSharp
      name:
        CSharp: exp
        VB: exp
      nameWithType:
        CSharp: Claims.exp
        VB: Claims.exp
      qualifiedName:
        CSharp: EasyCodeForVivox.Claims.exp
        VB: EasyCodeForVivox.Claims.exp
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: exp
        path: ''
        startLine: 8268
      summary: "\nEpoch Time : Vivox uses Unix Epoch time.\nex. DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)\n"
      example: []
      syntax:
        content:
          CSharp: public int exp { get; set; }
          VB: Public Property exp As Integer
        parameters: []
        return:
          type: System.Int32
      overload: EasyCodeForVivox.Claims.exp*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Claims.vxa
      commentId: P:EasyCodeForVivox.Claims.vxa
      language: CSharp
      name:
        CSharp: vxa
        VB: vxa
      nameWithType:
        CSharp: Claims.vxa
        VB: Claims.vxa
      qualifiedName:
        CSharp: EasyCodeForVivox.Claims.vxa
        VB: EasyCodeForVivox.Claims.vxa
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: vxa
        path: ''
        startLine: 8272
      summary: "\nVixoxAction : ex. login, join, mute\n"
      example: []
      syntax:
        content:
          CSharp: public string vxa { get; set; }
          VB: Public Property vxa As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.Claims.vxa*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Claims.vxi
      commentId: P:EasyCodeForVivox.Claims.vxi
      language: CSharp
      name:
        CSharp: vxi
        VB: vxi
      nameWithType:
        CSharp: Claims.vxi
        VB: Claims.vxi
      qualifiedName:
        CSharp: EasyCodeForVivox.Claims.vxi
        VB: EasyCodeForVivox.Claims.vxi
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: vxi
        path: ''
        startLine: 8279
      summary: "\nToken Uniqueness Identifier : Can be any number.\nRecommended to use an incrimental counter so every token generated will always be different.\nex. int counter = 0;\ncounter++;\n"
      example: []
      syntax:
        content:
          CSharp: public int vxi { get; set; }
          VB: Public Property vxi As Integer
        parameters: []
        return:
          type: System.Int32
      overload: EasyCodeForVivox.Claims.vxi*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Claims.sub
      commentId: P:EasyCodeForVivox.Claims.sub
      language: CSharp
      name:
        CSharp: sub
        VB: sub
      nameWithType:
        CSharp: Claims.sub
        VB: Claims.sub
      qualifiedName:
        CSharp: EasyCodeForVivox.Claims.sub
        VB: EasyCodeForVivox.Claims.sub
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: sub
        path: ''
        startLine: 8284
      summary: "\nSubject : The user to be muted, kicked, unmuted\nex. format == 	sip:.blindmelon-AppName-dev.jerky.@tla.vivox.com\n"
      example: []
      syntax:
        content:
          CSharp: public string sub { get; set; }
          VB: Public Property sub As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.Claims.sub*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Claims.f
      commentId: P:EasyCodeForVivox.Claims.f
      language: CSharp
      name:
        CSharp: f
        VB: f
      nameWithType:
        CSharp: Claims.f
        VB: Claims.f
      qualifiedName:
        CSharp: EasyCodeForVivox.Claims.f
        VB: EasyCodeForVivox.Claims.f
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: f
        path: ''
        startLine: 8289
      summary: "\nFrom : The user requesting a claim/action\nex. format == 	sip:.blindmelon-AppName-dev.beef.@tla.vivox.com\n"
      example: []
      syntax:
        content:
          CSharp: public string f { get; set; }
          VB: Public Property f As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.Claims.f*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Claims.t
      commentId: P:EasyCodeForVivox.Claims.t
      language: CSharp
      name:
        CSharp: t
        VB: t
      nameWithType:
        CSharp: Claims.t
        VB: Claims.t
      qualifiedName:
        CSharp: EasyCodeForVivox.Claims.t
        VB: EasyCodeForVivox.Claims.t
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: t
        path: ''
        startLine: 8294
      summary: "\nChannel : Channel where action/claim takes place.\nex. format ==	sip:confctl-g-blindmelon-AppName-dev.testchannel@tla.vivox.com\n"
      example: []
      syntax:
        content:
          CSharp: public string t { get; set; }
          VB: Public Property t As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.Claims.t*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: EasyCodeForVivox.EasyAudio
    commentId: T:EasyCodeForVivox.EasyAudio
    language: CSharp
    name:
      CSharp: EasyAudio
      VB: EasyAudio
    nameWithType:
      CSharp: EasyAudio
      VB: EasyAudio
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyAudio
      VB: EasyCodeForVivox.EasyAudio
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyAudio
      path: ''
      startLine: 8314
    syntax:
      content:
        CSharp: public class EasyAudio
        VB: Public Class EasyAudio
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyAudio.#ctor(EasySettingsSO,EasyEvents,EasyEventsAsync)
      commentId: M:EasyCodeForVivox.EasyAudio.#ctor(EasySettingsSO,EasyEvents,EasyEventsAsync)
      language: CSharp
      name:
        CSharp: EasyAudio(EasySettingsSO, EasyEvents, EasyEventsAsync)
        VB: EasyAudio(EasySettingsSO, EasyEvents, EasyEventsAsync)
      nameWithType:
        CSharp: EasyAudio.EasyAudio(EasySettingsSO, EasyEvents, EasyEventsAsync)
        VB: EasyAudio.EasyAudio(EasySettingsSO, EasyEvents, EasyEventsAsync)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.EasyAudio(EasySettingsSO, EasyEvents, EasyEventsAsync)
        VB: EasyCodeForVivox.EasyAudio.EasyAudio(EasySettingsSO, EasyEvents, EasyEventsAsync)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 8320
      syntax:
        content:
          CSharp: public EasyAudio(EasySettingsSO settings, EasyEvents events, EasyEventsAsync eventsAsync)
          VB: Public Sub New(settings As EasySettingsSO, events As EasyEvents, eventsAsync As EasyEventsAsync)
        parameters:
        - id: settings
          type: EasySettingsSO
        - id: events
          type: EasyEvents
        - id: eventsAsync
          type: EasyEventsAsync
      overload: EasyCodeForVivox.EasyAudio.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.Subscribe(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.Subscribe(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: Subscribe(VivoxUnity.Client)
        VB: Subscribe(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.Subscribe(VivoxUnity.Client)
        VB: EasyAudio.Subscribe(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.Subscribe(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.Subscribe(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Subscribe
        path: ''
        startLine: 8329
      syntax:
        content:
          CSharp: public void Subscribe(VivoxUnity.Client client)
          VB: Public Sub Subscribe(client As VivoxUnity.Client)
        parameters:
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyAudio.Subscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.Unsubscribe(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.Unsubscribe(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: Unsubscribe(VivoxUnity.Client)
        VB: Unsubscribe(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.Unsubscribe(VivoxUnity.Client)
        VB: EasyAudio.Unsubscribe(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.Unsubscribe(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.Unsubscribe(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Unsubscribe
        path: ''
        startLine: 8340
      syntax:
        content:
          CSharp: public void Unsubscribe(VivoxUnity.Client client)
          VB: Public Sub Unsubscribe(client As VivoxUnity.Client)
        parameters:
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyAudio.Unsubscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.GetAudioInputDevices(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.GetAudioInputDevices(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: GetAudioInputDevices(VivoxUnity.Client)
        VB: GetAudioInputDevices(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.GetAudioInputDevices(VivoxUnity.Client)
        VB: EasyAudio.GetAudioInputDevices(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.GetAudioInputDevices(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.GetAudioInputDevices(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetAudioInputDevices
        path: ''
        startLine: 8353
      syntax:
        content:
          CSharp: public IEnumerable<IAudioDevice> GetAudioInputDevices(VivoxUnity.Client client)
          VB: Public Function GetAudioInputDevices(client As VivoxUnity.Client) As IEnumerable(Of IAudioDevice)
        parameters:
        - id: client
          type: VivoxUnity.Client
        return:
          type: IEnumerable{IAudioDevice}
      overload: EasyCodeForVivox.EasyAudio.GetAudioInputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.GetAudioOutputDevices(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: GetAudioOutputDevices(VivoxUnity.Client)
        VB: GetAudioOutputDevices(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.GetAudioOutputDevices(VivoxUnity.Client)
        VB: EasyAudio.GetAudioOutputDevices(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetAudioOutputDevices
        path: ''
        startLine: 8358
      syntax:
        content:
          CSharp: public IEnumerable<IAudioDevice> GetAudioOutputDevices(VivoxUnity.Client client)
          VB: Public Function GetAudioOutputDevices(client As VivoxUnity.Client) As IEnumerable(Of IAudioDevice)
        parameters:
        - id: client
          type: VivoxUnity.Client
        return:
          type: IEnumerable{IAudioDevice}
      overload: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.SetAudioInputDevice(System.String,VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.SetAudioInputDevice(System.String,VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: SetAudioInputDevice(String, VivoxUnity.Client)
        VB: SetAudioInputDevice(String, VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.SetAudioInputDevice(String, VivoxUnity.Client)
        VB: EasyAudio.SetAudioInputDevice(String, VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.SetAudioInputDevice(System.String, VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.SetAudioInputDevice(System.String, VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetAudioInputDevice
        path: ''
        startLine: 8363
      syntax:
        content:
          CSharp: public void SetAudioInputDevice(string deviceName, VivoxUnity.Client client)
          VB: Public Sub SetAudioInputDevice(deviceName As String, client As VivoxUnity.Client)
        parameters:
        - id: deviceName
          type: System.String
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyAudio.SetAudioInputDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice(System.String,VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.SetAudioOutputDevice(System.String,VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: SetAudioOutputDevice(String, VivoxUnity.Client)
        VB: SetAudioOutputDevice(String, VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.SetAudioOutputDevice(String, VivoxUnity.Client)
        VB: EasyAudio.SetAudioOutputDevice(String, VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice(System.String, VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice(System.String, VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetAudioOutputDevice
        path: ''
        startLine: 8388
      syntax:
        content:
          CSharp: public void SetAudioOutputDevice(string deviceName, VivoxUnity.Client client)
          VB: Public Sub SetAudioOutputDevice(deviceName As String, client As VivoxUnity.Client)
        parameters:
        - id: deviceName
          type: System.String
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: RefreshAudioInputDevices(VivoxUnity.Client)
        VB: RefreshAudioInputDevices(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.RefreshAudioInputDevices(VivoxUnity.Client)
        VB: EasyAudio.RefreshAudioInputDevices(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: RefreshAudioInputDevices
        path: ''
        startLine: 8414
      syntax:
        content:
          CSharp: public void RefreshAudioInputDevices(VivoxUnity.Client client)
          VB: Public Sub RefreshAudioInputDevices(client As VivoxUnity.Client)
        parameters:
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: RefreshAudioOutputDevices(VivoxUnity.Client)
        VB: RefreshAudioOutputDevices(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.RefreshAudioOutputDevices(VivoxUnity.Client)
        VB: EasyAudio.RefreshAudioOutputDevices(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: RefreshAudioOutputDevices
        path: ''
        startLine: 8429
      syntax:
        content:
          CSharp: public void RefreshAudioOutputDevices(VivoxUnity.Client client)
          VB: Public Sub RefreshAudioOutputDevices(client As VivoxUnity.Client)
        parameters:
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume(System.Int32,VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume(System.Int32,VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: AdjustLocalPlayerAudioVolume(Int32, VivoxUnity.Client)
        VB: AdjustLocalPlayerAudioVolume(Int32, VivoxUnity.Client)
      nameWithType:
        CSharp: EasyAudio.AdjustLocalPlayerAudioVolume(Int32, VivoxUnity.Client)
        VB: EasyAudio.AdjustLocalPlayerAudioVolume(Int32, VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume(System.Int32, VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume(System.Int32, VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: AdjustLocalPlayerAudioVolume
        path: ''
        startLine: 8445
      syntax:
        content:
          CSharp: public void AdjustLocalPlayerAudioVolume(int value, VivoxUnity.Client client)
          VB: Public Sub AdjustLocalPlayerAudioVolume(value As Integer, client As VivoxUnity.Client)
        parameters:
        - id: value
          type: System.Int32
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume(System.String,IChannelSession,System.Single)
      commentId: M:EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume(System.String,IChannelSession,System.Single)
      language: CSharp
      name:
        CSharp: AdjustRemotePlayerAudioVolume(String, IChannelSession, Single)
        VB: AdjustRemotePlayerAudioVolume(String, IChannelSession, Single)
      nameWithType:
        CSharp: EasyAudio.AdjustRemotePlayerAudioVolume(String, IChannelSession, Single)
        VB: EasyAudio.AdjustRemotePlayerAudioVolume(String, IChannelSession, Single)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume(System.String, IChannelSession, System.Single)
        VB: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume(System.String, IChannelSession, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: AdjustRemotePlayerAudioVolume
        path: ''
        startLine: 8461
      syntax:
        content:
          CSharp: public void AdjustRemotePlayerAudioVolume(string userName, IChannelSession channelSession, float value)
          VB: Public Sub AdjustRemotePlayerAudioVolume(userName As String, channelSession As IChannelSession, value As Single)
        parameters:
        - id: userName
          type: System.String
        - id: channelSession
          type: IChannelSession
        - id: value
          type: System.Single
      overload: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.StartAudioInjection(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.EasyAudio.StartAudioInjection(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: StartAudioInjection(String, ILoginSession)
        VB: StartAudioInjection(String, ILoginSession)
      nameWithType:
        CSharp: EasyAudio.StartAudioInjection(String, ILoginSession)
        VB: EasyAudio.StartAudioInjection(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.StartAudioInjection(System.String, ILoginSession)
        VB: EasyCodeForVivox.EasyAudio.StartAudioInjection(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: StartAudioInjection
        path: ''
        startLine: 8471
      syntax:
        content:
          CSharp: public void StartAudioInjection(string wavToInject, ILoginSession loginSession)
          VB: Public Sub StartAudioInjection(wavToInject As String, loginSession As ILoginSession)
        parameters:
        - id: wavToInject
          type: System.String
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyAudio.StartAudioInjection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.StopAudioInjection(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyAudio.StopAudioInjection(ILoginSession)
      language: CSharp
      name:
        CSharp: StopAudioInjection(ILoginSession)
        VB: StopAudioInjection(ILoginSession)
      nameWithType:
        CSharp: EasyAudio.StopAudioInjection(ILoginSession)
        VB: EasyAudio.StopAudioInjection(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.StopAudioInjection(ILoginSession)
        VB: EasyCodeForVivox.EasyAudio.StopAudioInjection(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: StopAudioInjection
        path: ''
        startLine: 8476
      syntax:
        content:
          CSharp: public void StopAudioInjection(ILoginSession loginSession)
          VB: Public Sub StopAudioInjection(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyAudio.StopAudioInjection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection(System.String)
      commentId: M:EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection(System.String)
      language: CSharp
      name:
        CSharp: SetAutoVoiceActivityDetection(String)
        VB: SetAutoVoiceActivityDetection(String)
      nameWithType:
        CSharp: EasyAudio.SetAutoVoiceActivityDetection(String)
        VB: EasyAudio.SetAutoVoiceActivityDetection(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection(System.String)
        VB: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetAutoVoiceActivityDetection
        path: ''
        startLine: 8481
      syntax:
        content:
          CSharp: public void SetAutoVoiceActivityDetection(string userName)
          VB: Public Sub SetAutoVoiceActivityDetection(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection(System.String,System.Int32,System.Int32,System.Int32)
      commentId: M:EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection(System.String,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SetVoiceActivityDetection(String, Int32, Int32, Int32)
        VB: SetVoiceActivityDetection(String, Int32, Int32, Int32)
      nameWithType:
        CSharp: EasyAudio.SetVoiceActivityDetection(String, Int32, Int32, Int32)
        VB: EasyAudio.SetVoiceActivityDetection(String, Int32, Int32, Int32)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection(System.String, System.Int32, System.Int32, System.Int32)
        VB: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection(System.String, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetVoiceActivityDetection
        path: ''
        startLine: 8504
      syntax:
        content:
          CSharp: public void SetVoiceActivityDetection(string userName, int hangover = 2000, int sensitivity = 43, int noiseFloor = 576)
          VB: Public Sub SetVoiceActivityDetection(userName As String, hangover As Integer = 2000, sensitivity As Integer = 43, noiseFloor As Integer = 576)
        parameters:
        - id: userName
          type: System.String
        - id: hangover
          type: System.Int32
        - id: sensitivity
          type: System.Int32
        - id: noiseFloor
          type: System.Int32
      overload: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyAudioChannel
    commentId: T:EasyCodeForVivox.EasyAudioChannel
    language: CSharp
    name:
      CSharp: EasyAudioChannel
      VB: EasyAudioChannel
    nameWithType:
      CSharp: EasyAudioChannel
      VB: EasyAudioChannel
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyAudioChannel
      VB: EasyCodeForVivox.EasyAudioChannel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyAudioChannel
      path: ''
      startLine: 8614
    syntax:
      content:
        CSharp: public class EasyAudioChannel
        VB: Public Class EasyAudioChannel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyAudioChannel.#ctor(EasyEvents,EasyEventsAsync)
      commentId: M:EasyCodeForVivox.EasyAudioChannel.#ctor(EasyEvents,EasyEventsAsync)
      language: CSharp
      name:
        CSharp: EasyAudioChannel(EasyEvents, EasyEventsAsync)
        VB: EasyAudioChannel(EasyEvents, EasyEventsAsync)
      nameWithType:
        CSharp: EasyAudioChannel.EasyAudioChannel(EasyEvents, EasyEventsAsync)
        VB: EasyAudioChannel.EasyAudioChannel(EasyEvents, EasyEventsAsync)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudioChannel.EasyAudioChannel(EasyEvents, EasyEventsAsync)
        VB: EasyCodeForVivox.EasyAudioChannel.EasyAudioChannel(EasyEvents, EasyEventsAsync)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 8620
      syntax:
        content:
          CSharp: public EasyAudioChannel(EasyEvents events, EasyEventsAsync eventsAsync)
          VB: Public Sub New(events As EasyEvents, eventsAsync As EasyEventsAsync)
        parameters:
        - id: events
          type: EasyEvents
        - id: eventsAsync
          type: EasyEventsAsync
      overload: EasyCodeForVivox.EasyAudioChannel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudioChannel.Subscribe(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyAudioChannel.Subscribe(IChannelSession)
      language: CSharp
      name:
        CSharp: Subscribe(IChannelSession)
        VB: Subscribe(IChannelSession)
      nameWithType:
        CSharp: EasyAudioChannel.Subscribe(IChannelSession)
        VB: EasyAudioChannel.Subscribe(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudioChannel.Subscribe(IChannelSession)
        VB: EasyCodeForVivox.EasyAudioChannel.Subscribe(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Subscribe
        path: ''
        startLine: 8626
      syntax:
        content:
          CSharp: public void Subscribe(IChannelSession channelSession)
          VB: Public Sub Subscribe(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyAudioChannel.Subscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudioChannel.Unsubscribe(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyAudioChannel.Unsubscribe(IChannelSession)
      language: CSharp
      name:
        CSharp: Unsubscribe(IChannelSession)
        VB: Unsubscribe(IChannelSession)
      nameWithType:
        CSharp: EasyAudioChannel.Unsubscribe(IChannelSession)
        VB: EasyAudioChannel.Unsubscribe(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudioChannel.Unsubscribe(IChannelSession)
        VB: EasyCodeForVivox.EasyAudioChannel.Unsubscribe(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Unsubscribe
        path: ''
        startLine: 8631
      syntax:
        content:
          CSharp: public void Unsubscribe(IChannelSession channelSession)
          VB: Public Sub Unsubscribe(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyAudioChannel.Unsubscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel(IChannelSession,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel(IChannelSession,System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleAudioInChannel(IChannelSession, Boolean)
        VB: ToggleAudioInChannel(IChannelSession, Boolean)
      nameWithType:
        CSharp: EasyAudioChannel.ToggleAudioInChannel(IChannelSession, Boolean)
        VB: EasyAudioChannel.ToggleAudioInChannel(IChannelSession, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel(IChannelSession, System.Boolean)
        VB: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel(IChannelSession, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ToggleAudioInChannel
        path: ''
        startLine: 8641
      syntax:
        content:
          CSharp: public void ToggleAudioInChannel(IChannelSession channelSession, bool join)
          VB: Public Sub ToggleAudioInChannel(channelSession As IChannelSession, join As Boolean)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: join
          type: System.Boolean
      overload: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel``1(IChannelSession,System.Boolean,``0)
      commentId: M:EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel``1(IChannelSession,System.Boolean,``0)
      language: CSharp
      name:
        CSharp: ToggleAudioInChannel<T>(IChannelSession, Boolean, T)
        VB: ToggleAudioInChannel(Of T)(IChannelSession, Boolean, T)
      nameWithType:
        CSharp: EasyAudioChannel.ToggleAudioInChannel<T>(IChannelSession, Boolean, T)
        VB: EasyAudioChannel.ToggleAudioInChannel(Of T)(IChannelSession, Boolean, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel<T>(IChannelSession, System.Boolean, T)
        VB: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel(Of T)(IChannelSession, System.Boolean, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ToggleAudioInChannel
        path: ''
        startLine: 8666
      syntax:
        content:
          CSharp: public void ToggleAudioInChannel<T>(IChannelSession channelSession, bool join, T eventParameter)
          VB: Public Sub ToggleAudioInChannel(Of T)(channelSession As IChannelSession, join As Boolean, eventParameter As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: join
          type: System.Boolean
        - id: eventParameter
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyChannel
    commentId: T:EasyCodeForVivox.EasyChannel
    language: CSharp
    name:
      CSharp: EasyChannel
      VB: EasyChannel
    nameWithType:
      CSharp: EasyChannel
      VB: EasyChannel
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyChannel
      VB: EasyCodeForVivox.EasyChannel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyChannel
      path: ''
      startLine: 8796
    syntax:
      content:
        CSharp: public class EasyChannel
        VB: Public Class EasyChannel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyChannel.#ctor(EasyCodeForVivox.EasyUsers,EasyCodeForVivox.EasyMessages,EasyCodeForVivox.EasyAudioChannel,EasyCodeForVivox.EasyTextChannel,EasyEventsAsync,EasyEvents)
      commentId: M:EasyCodeForVivox.EasyChannel.#ctor(EasyCodeForVivox.EasyUsers,EasyCodeForVivox.EasyMessages,EasyCodeForVivox.EasyAudioChannel,EasyCodeForVivox.EasyTextChannel,EasyEventsAsync,EasyEvents)
      language: CSharp
      name:
        CSharp: EasyChannel(EasyUsers, EasyMessages, EasyAudioChannel, EasyTextChannel, EasyEventsAsync, EasyEvents)
        VB: EasyChannel(EasyUsers, EasyMessages, EasyAudioChannel, EasyTextChannel, EasyEventsAsync, EasyEvents)
      nameWithType:
        CSharp: EasyChannel.EasyChannel(EasyUsers, EasyMessages, EasyAudioChannel, EasyTextChannel, EasyEventsAsync, EasyEvents)
        VB: EasyChannel.EasyChannel(EasyUsers, EasyMessages, EasyAudioChannel, EasyTextChannel, EasyEventsAsync, EasyEvents)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.EasyChannel(EasyCodeForVivox.EasyUsers, EasyCodeForVivox.EasyMessages, EasyCodeForVivox.EasyAudioChannel, EasyCodeForVivox.EasyTextChannel, EasyEventsAsync, EasyEvents)
        VB: EasyCodeForVivox.EasyChannel.EasyChannel(EasyCodeForVivox.EasyUsers, EasyCodeForVivox.EasyMessages, EasyCodeForVivox.EasyAudioChannel, EasyCodeForVivox.EasyTextChannel, EasyEventsAsync, EasyEvents)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 8805
      syntax:
        content:
          CSharp: public EasyChannel(EasyUsers users, EasyMessages messages, EasyAudioChannel audioChannel, EasyTextChannel textChannel, EasyEventsAsync eventsAsync, EasyEvents events)
          VB: Public Sub New(users As EasyUsers, messages As EasyMessages, audioChannel As EasyAudioChannel, textChannel As EasyTextChannel, eventsAsync As EasyEventsAsync, events As EasyEvents)
        parameters:
        - id: users
          type: EasyCodeForVivox.EasyUsers
        - id: messages
          type: EasyCodeForVivox.EasyMessages
        - id: audioChannel
          type: EasyCodeForVivox.EasyAudioChannel
        - id: textChannel
          type: EasyCodeForVivox.EasyTextChannel
        - id: eventsAsync
          type: EasyEventsAsync
        - id: events
          type: EasyEvents
      overload: EasyCodeForVivox.EasyChannel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.Subscribe(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyChannel.Subscribe(IChannelSession)
      language: CSharp
      name:
        CSharp: Subscribe(IChannelSession)
        VB: Subscribe(IChannelSession)
      nameWithType:
        CSharp: EasyChannel.Subscribe(IChannelSession)
        VB: EasyChannel.Subscribe(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.Subscribe(IChannelSession)
        VB: EasyCodeForVivox.EasyChannel.Subscribe(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Subscribe
        path: ''
        startLine: 8817
      syntax:
        content:
          CSharp: public void Subscribe(IChannelSession channelSession)
          VB: Public Sub Subscribe(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyChannel.Subscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.Unsubscribe(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyChannel.Unsubscribe(IChannelSession)
      language: CSharp
      name:
        CSharp: Unsubscribe(IChannelSession)
        VB: Unsubscribe(IChannelSession)
      nameWithType:
        CSharp: EasyChannel.Unsubscribe(IChannelSession)
        VB: EasyChannel.Unsubscribe(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.Unsubscribe(IChannelSession)
        VB: EasyCodeForVivox.EasyChannel.Unsubscribe(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Unsubscribe
        path: ''
        startLine: 8822
      syntax:
        content:
          CSharp: public void Unsubscribe(IChannelSession channelSession)
          VB: Public Sub Unsubscribe(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyChannel.Unsubscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.JoinChannel(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyChannel.JoinChannel(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      language: CSharp
      name:
        CSharp: JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      nameWithType:
        CSharp: EasyChannel.JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: EasyChannel.JoinChannel(String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.JoinChannel(System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
        VB: EasyCodeForVivox.EasyChannel.JoinChannel(System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannel
        path: ''
        startLine: 8832
      syntax:
        content:
          CSharp: public void JoinChannel(string userName, string channelName, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, ChannelType channelType, bool joinMuted = false, Channel3DProperties channel3DProperties = null)
          VB: Public Sub JoinChannel(userName As String, channelName As String, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelType As ChannelType, joinMuted As Boolean = False, channel3DProperties As Channel3DProperties = Nothing)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelType
          type: ChannelType
        - id: joinMuted
          type: System.Boolean
        - id: channel3DProperties
          type: Channel3DProperties
      overload: EasyCodeForVivox.EasyChannel.JoinChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      language: CSharp
      name:
        CSharp: JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      nameWithType:
        CSharp: EasyChannel.JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: EasyChannel.JoinChannelRegion(String, String, String, String, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
        VB: EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String, System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannelRegion
        path: ''
        startLine: 8857
      syntax:
        content:
          CSharp: public void JoinChannelRegion(string userName, string channelName, string matchRegion, string matchHash, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, ChannelType channelType, bool joinMuted = false, Channel3DProperties channel3DProperties = null)
          VB: Public Sub JoinChannelRegion(userName As String, channelName As String, matchRegion As String, matchHash As String, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelType As ChannelType, joinMuted As Boolean = False, channel3DProperties As Channel3DProperties = Nothing)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: matchRegion
          type: System.String
        - id: matchHash
          type: System.String
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelType
          type: ChannelType
        - id: joinMuted
          type: System.Boolean
        - id: channel3DProperties
          type: Channel3DProperties
      overload: EasyCodeForVivox.EasyChannel.JoinChannelRegion*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.JoinChannelCustom``1(System.String,System.String,``0,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyChannel.JoinChannelCustom``1(System.String,System.String,``0,System.Boolean,System.Boolean,System.Boolean,ChannelType,System.Boolean,Channel3DProperties)
      language: CSharp
      name:
        CSharp: JoinChannelCustom<T>(String, String, T, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: JoinChannelCustom(Of T)(String, String, T, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      nameWithType:
        CSharp: EasyChannel.JoinChannelCustom<T>(String, String, T, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
        VB: EasyChannel.JoinChannelCustom(Of T)(String, String, T, Boolean, Boolean, Boolean, ChannelType, Boolean, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.JoinChannelCustom<T>(System.String, System.String, T, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
        VB: EasyCodeForVivox.EasyChannel.JoinChannelCustom(Of T)(System.String, System.String, T, System.Boolean, System.Boolean, System.Boolean, ChannelType, System.Boolean, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannelCustom
        path: ''
        startLine: 8882
      syntax:
        content:
          CSharp: public void JoinChannelCustom<T>(string userName, string channelName, T eventParameter, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, ChannelType channelType, bool joinMuted = false, Channel3DProperties channel3DProperties = null)
          VB: Public Sub JoinChannelCustom(Of T)(userName As String, channelName As String, eventParameter As T, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelType As ChannelType, joinMuted As Boolean = False, channel3DProperties As Channel3DProperties = Nothing)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: eventParameter
          type: '{T}'
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelType
          type: ChannelType
        - id: joinMuted
          type: System.Boolean
        - id: channel3DProperties
          type: Channel3DProperties
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyChannel.JoinChannelCustom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.JoinChannel(System.String,System.Boolean,System.Boolean,System.Boolean,IChannelSession,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyChannel.JoinChannel(System.String,System.Boolean,System.Boolean,System.Boolean,IChannelSession,System.Boolean)
      language: CSharp
      name:
        CSharp: JoinChannel(String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
        VB: JoinChannel(String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
      nameWithType:
        CSharp: EasyChannel.JoinChannel(String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
        VB: EasyChannel.JoinChannel(String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.JoinChannel(System.String, System.Boolean, System.Boolean, System.Boolean, IChannelSession, System.Boolean)
        VB: EasyCodeForVivox.EasyChannel.JoinChannel(System.String, System.Boolean, System.Boolean, System.Boolean, IChannelSession, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannel
        path: ''
        startLine: 8909
      syntax:
        content:
          CSharp: protected void JoinChannel(string userName, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, IChannelSession channelSession, bool joinMuted = false)
          VB: Protected Sub JoinChannel(userName As String, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelSession As IChannelSession, joinMuted As Boolean = False)
        parameters:
        - id: userName
          type: System.String
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelSession
          type: IChannelSession
        - id: joinMuted
          type: System.Boolean
      overload: EasyCodeForVivox.EasyChannel.JoinChannel*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,IChannelSession,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,IChannelSession,System.Boolean)
      language: CSharp
      name:
        CSharp: JoinChannelRegion(String, String, String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
        VB: JoinChannelRegion(String, String, String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
      nameWithType:
        CSharp: EasyChannel.JoinChannelRegion(String, String, String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
        VB: EasyChannel.JoinChannelRegion(String, String, String, Boolean, Boolean, Boolean, IChannelSession, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, IChannelSession, System.Boolean)
        VB: EasyCodeForVivox.EasyChannel.JoinChannelRegion(System.String, System.String, System.String, System.Boolean, System.Boolean, System.Boolean, IChannelSession, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannelRegion
        path: ''
        startLine: 8930
      syntax:
        content:
          CSharp: protected void JoinChannelRegion(string userName, string matchRegion, string matchHash, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, IChannelSession channelSession, bool joinMuted = false)
          VB: Protected Sub JoinChannelRegion(userName As String, matchRegion As String, matchHash As String, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelSession As IChannelSession, joinMuted As Boolean = False)
        parameters:
        - id: userName
          type: System.String
        - id: matchRegion
          type: System.String
        - id: matchHash
          type: System.String
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelSession
          type: IChannelSession
        - id: joinMuted
          type: System.Boolean
      overload: EasyCodeForVivox.EasyChannel.JoinChannelRegion*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: EasyCodeForVivox.EasyChannel.JoinChannelCustom``1(System.String,``0,System.Boolean,System.Boolean,System.Boolean,IChannelSession,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyChannel.JoinChannelCustom``1(System.String,``0,System.Boolean,System.Boolean,System.Boolean,IChannelSession,System.Boolean)
      language: CSharp
      name:
        CSharp: JoinChannelCustom<T>(String, T, Boolean, Boolean, Boolean, IChannelSession, Boolean)
        VB: JoinChannelCustom(Of T)(String, T, Boolean, Boolean, Boolean, IChannelSession, Boolean)
      nameWithType:
        CSharp: EasyChannel.JoinChannelCustom<T>(String, T, Boolean, Boolean, Boolean, IChannelSession, Boolean)
        VB: EasyChannel.JoinChannelCustom(Of T)(String, T, Boolean, Boolean, Boolean, IChannelSession, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.JoinChannelCustom<T>(System.String, T, System.Boolean, System.Boolean, System.Boolean, IChannelSession, System.Boolean)
        VB: EasyCodeForVivox.EasyChannel.JoinChannelCustom(Of T)(System.String, T, System.Boolean, System.Boolean, System.Boolean, IChannelSession, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: JoinChannelCustom
        path: ''
        startLine: 8950
      syntax:
        content:
          CSharp: protected void JoinChannelCustom<T>(string userName, T value, bool includeVoice, bool includeText, bool switchTransmissionToThisChannel, IChannelSession channelSession, bool joinMuted = false)
          VB: Protected Sub JoinChannelCustom(Of T)(userName As String, value As T, includeVoice As Boolean, includeText As Boolean, switchTransmissionToThisChannel As Boolean, channelSession As IChannelSession, joinMuted As Boolean = False)
        parameters:
        - id: userName
          type: System.String
        - id: value
          type: '{T}'
        - id: includeVoice
          type: System.Boolean
        - id: includeText
          type: System.Boolean
        - id: switchTransmissionToThisChannel
          type: System.Boolean
        - id: channelSession
          type: IChannelSession
        - id: joinMuted
          type: System.Boolean
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyChannel.JoinChannelCustom*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: EasyCodeForVivox.EasyChannel.LeaveChannel(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyChannel.LeaveChannel(System.String,System.String)
      language: CSharp
      name:
        CSharp: LeaveChannel(String, String)
        VB: LeaveChannel(String, String)
      nameWithType:
        CSharp: EasyChannel.LeaveChannel(String, String)
        VB: EasyChannel.LeaveChannel(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.LeaveChannel(System.String, System.String)
        VB: EasyCodeForVivox.EasyChannel.LeaveChannel(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LeaveChannel
        path: ''
        startLine: 8974
      syntax:
        content:
          CSharp: public void LeaveChannel(string channelName, string userName)
          VB: Public Sub LeaveChannel(channelName As String, userName As String)
        parameters:
        - id: channelName
          type: System.String
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyChannel.LeaveChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.LeaveChannel(ILoginSession,IChannelSession)
      commentId: M:EasyCodeForVivox.EasyChannel.LeaveChannel(ILoginSession,IChannelSession)
      language: CSharp
      name:
        CSharp: LeaveChannel(ILoginSession, IChannelSession)
        VB: LeaveChannel(ILoginSession, IChannelSession)
      nameWithType:
        CSharp: EasyChannel.LeaveChannel(ILoginSession, IChannelSession)
        VB: EasyChannel.LeaveChannel(ILoginSession, IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.LeaveChannel(ILoginSession, IChannelSession)
        VB: EasyCodeForVivox.EasyChannel.LeaveChannel(ILoginSession, IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LeaveChannel
        path: ''
        startLine: 8995
      syntax:
        content:
          CSharp: public void LeaveChannel(ILoginSession loginSession, IChannelSession channelToRemove)
          VB: Public Sub LeaveChannel(loginSession As ILoginSession, channelToRemove As IChannelSession)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: channelToRemove
          type: IChannelSession
      overload: EasyCodeForVivox.EasyChannel.LeaveChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.GetExistingChannelSession(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyChannel.GetExistingChannelSession(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetExistingChannelSession(String, String)
        VB: GetExistingChannelSession(String, String)
      nameWithType:
        CSharp: EasyChannel.GetExistingChannelSession(String, String)
        VB: EasyChannel.GetExistingChannelSession(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.GetExistingChannelSession(System.String, System.String)
        VB: EasyCodeForVivox.EasyChannel.GetExistingChannelSession(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetExistingChannelSession
        path: ''
        startLine: 9008
      syntax:
        content:
          CSharp: public IChannelSession GetExistingChannelSession(string userName, string channelName)
          VB: Public Function GetExistingChannelSession(userName As String, channelName As String) As IChannelSession
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        return:
          type: IChannelSession
      overload: EasyCodeForVivox.EasyChannel.GetExistingChannelSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.CreateNewChannel(System.String,System.String,ChannelType,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyChannel.CreateNewChannel(System.String,System.String,ChannelType,Channel3DProperties)
      language: CSharp
      name:
        CSharp: CreateNewChannel(String, String, ChannelType, Channel3DProperties)
        VB: CreateNewChannel(String, String, ChannelType, Channel3DProperties)
      nameWithType:
        CSharp: EasyChannel.CreateNewChannel(String, String, ChannelType, Channel3DProperties)
        VB: EasyChannel.CreateNewChannel(String, String, ChannelType, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.CreateNewChannel(System.String, System.String, ChannelType, Channel3DProperties)
        VB: EasyCodeForVivox.EasyChannel.CreateNewChannel(System.String, System.String, ChannelType, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CreateNewChannel
        path: ''
        startLine: 9025
      syntax:
        content:
          CSharp: public IChannelSession CreateNewChannel(string userName, string channelName, ChannelType channelType, Channel3DProperties channel3DProperties = null)
          VB: Public Function CreateNewChannel(userName As String, channelName As String, channelType As ChannelType, channel3DProperties As Channel3DProperties = Nothing) As IChannelSession
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: channelType
          type: ChannelType
        - id: channel3DProperties
          type: Channel3DProperties
        return:
          type: IChannelSession
      overload: EasyCodeForVivox.EasyChannel.CreateNewChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.GetChannelSIP(ChannelType,System.String,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyChannel.GetChannelSIP(ChannelType,System.String,Channel3DProperties)
      language: CSharp
      name:
        CSharp: GetChannelSIP(ChannelType, String, Channel3DProperties)
        VB: GetChannelSIP(ChannelType, String, Channel3DProperties)
      nameWithType:
        CSharp: EasyChannel.GetChannelSIP(ChannelType, String, Channel3DProperties)
        VB: EasyChannel.GetChannelSIP(ChannelType, String, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.GetChannelSIP(ChannelType, System.String, Channel3DProperties)
        VB: EasyCodeForVivox.EasyChannel.GetChannelSIP(ChannelType, System.String, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelSIP
        path: ''
        startLine: 9050
      syntax:
        content:
          CSharp: public string GetChannelSIP(ChannelType channelType, string channelName, Channel3DProperties channel3DProperties = null)
          VB: Public Function GetChannelSIP(channelType As ChannelType, channelName As String, channel3DProperties As Channel3DProperties = Nothing) As String
        parameters:
        - id: channelType
          type: ChannelType
        - id: channelName
          type: System.String
        - id: channel3DProperties
          type: Channel3DProperties
        return:
          type: System.String
      overload: EasyCodeForVivox.EasyChannel.GetChannelSIP*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.GetChannelSIP(System.String)
      commentId: M:EasyCodeForVivox.EasyChannel.GetChannelSIP(System.String)
      language: CSharp
      name:
        CSharp: GetChannelSIP(String)
        VB: GetChannelSIP(String)
      nameWithType:
        CSharp: EasyChannel.GetChannelSIP(String)
        VB: EasyChannel.GetChannelSIP(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.GetChannelSIP(System.String)
        VB: EasyCodeForVivox.EasyChannel.GetChannelSIP(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelSIP
        path: ''
        startLine: 9067
      syntax:
        content:
          CSharp: public string GetChannelSIP(string channelName)
          VB: Public Function GetChannelSIP(channelName As String) As String
        parameters:
        - id: channelName
          type: System.String
        return:
          type: System.String
      overload: EasyCodeForVivox.EasyChannel.GetChannelSIP*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.RemoveChannelSession(System.String)
      commentId: M:EasyCodeForVivox.EasyChannel.RemoveChannelSession(System.String)
      language: CSharp
      name:
        CSharp: RemoveChannelSession(String)
        VB: RemoveChannelSession(String)
      nameWithType:
        CSharp: EasyChannel.RemoveChannelSession(String)
        VB: EasyChannel.RemoveChannelSession(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.RemoveChannelSession(System.String)
        VB: EasyCodeForVivox.EasyChannel.RemoveChannelSession(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: RemoveChannelSession
        path: ''
        startLine: 9081
      syntax:
        content:
          CSharp: public void RemoveChannelSession(string channelName)
          VB: Public Sub RemoveChannelSession(channelName As String)
        parameters:
        - id: channelName
          type: System.String
      overload: EasyCodeForVivox.EasyChannel.RemoveChannelSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.GetChannelToken(System.String,IChannelSession,System.Boolean,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyChannel.GetChannelToken(System.String,IChannelSession,System.Boolean,Channel3DProperties)
      language: CSharp
      name:
        CSharp: GetChannelToken(String, IChannelSession, Boolean, Channel3DProperties)
        VB: GetChannelToken(String, IChannelSession, Boolean, Channel3DProperties)
      nameWithType:
        CSharp: EasyChannel.GetChannelToken(String, IChannelSession, Boolean, Channel3DProperties)
        VB: EasyChannel.GetChannelToken(String, IChannelSession, Boolean, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.GetChannelToken(System.String, IChannelSession, System.Boolean, Channel3DProperties)
        VB: EasyCodeForVivox.EasyChannel.GetChannelToken(System.String, IChannelSession, System.Boolean, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelToken
        path: ''
        startLine: 9092
      syntax:
        content:
          CSharp: public string GetChannelToken(string userName, IChannelSession channelSession, bool joinMuted = false, Channel3DProperties channel3DProperties = null)
          VB: Public Function GetChannelToken(userName As String, channelSession As IChannelSession, joinMuted As Boolean = False, channel3DProperties As Channel3DProperties = Nothing) As String
        parameters:
        - id: userName
          type: System.String
        - id: channelSession
          type: IChannelSession
        - id: joinMuted
          type: System.Boolean
        - id: channel3DProperties
          type: Channel3DProperties
        return:
          type: System.String
      overload: EasyCodeForVivox.EasyChannel.GetChannelToken*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.GetRegionChannelToken(System.String,IChannelSession,System.String,System.String,System.Boolean,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasyChannel.GetRegionChannelToken(System.String,IChannelSession,System.String,System.String,System.Boolean,Channel3DProperties)
      language: CSharp
      name:
        CSharp: GetRegionChannelToken(String, IChannelSession, String, String, Boolean, Channel3DProperties)
        VB: GetRegionChannelToken(String, IChannelSession, String, String, Boolean, Channel3DProperties)
      nameWithType:
        CSharp: EasyChannel.GetRegionChannelToken(String, IChannelSession, String, String, Boolean, Channel3DProperties)
        VB: EasyChannel.GetRegionChannelToken(String, IChannelSession, String, String, Boolean, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.GetRegionChannelToken(System.String, IChannelSession, System.String, System.String, System.Boolean, Channel3DProperties)
        VB: EasyCodeForVivox.EasyChannel.GetRegionChannelToken(System.String, IChannelSession, System.String, System.String, System.Boolean, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetRegionChannelToken
        path: ''
        startLine: 9124
      syntax:
        content:
          CSharp: public string GetRegionChannelToken(string userName, IChannelSession channelSession, string matchRegion, string matchHash, bool joinMuted = false, Channel3DProperties channel3DProperties = null)
          VB: Public Function GetRegionChannelToken(userName As String, channelSession As IChannelSession, matchRegion As String, matchHash As String, joinMuted As Boolean = False, channel3DProperties As Channel3DProperties = Nothing) As String
        parameters:
        - id: userName
          type: System.String
        - id: channelSession
          type: IChannelSession
        - id: matchRegion
          type: System.String
        - id: matchHash
          type: System.String
        - id: joinMuted
          type: System.Boolean
        - id: channel3DProperties
          type: Channel3DProperties
        return:
          type: System.String
      overload: EasyCodeForVivox.EasyChannel.GetRegionChannelToken*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged(System.Object,PropertyChangedEventArgs)
      commentId: M:EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged(System.Object,PropertyChangedEventArgs)
      language: CSharp
      name:
        CSharp: OnChannelStatePropertyChanged(Object, PropertyChangedEventArgs)
        VB: OnChannelStatePropertyChanged(Object, PropertyChangedEventArgs)
      nameWithType:
        CSharp: EasyChannel.OnChannelStatePropertyChanged(Object, PropertyChangedEventArgs)
        VB: EasyChannel.OnChannelStatePropertyChanged(Object, PropertyChangedEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged(System.Object, PropertyChangedEventArgs)
        VB: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged(System.Object, PropertyChangedEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelStatePropertyChanged
        path: ''
        startLine: 9163
      syntax:
        content:
          CSharp: public void OnChannelStatePropertyChanged(object sender, PropertyChangedEventArgs channelArgs)
          VB: Public Sub OnChannelStatePropertyChanged(sender As Object, channelArgs As PropertyChangedEventArgs)
        parameters:
        - id: sender
          type: System.Object
        - id: channelArgs
          type: PropertyChangedEventArgs
      overload: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyLogin
    commentId: T:EasyCodeForVivox.EasyLogin
    language: CSharp
    name:
      CSharp: EasyLogin
      VB: EasyLogin
    nameWithType:
      CSharp: EasyLogin
      VB: EasyLogin
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyLogin
      VB: EasyCodeForVivox.EasyLogin
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyLogin
      path: ''
      startLine: 9247
    syntax:
      content:
        CSharp: public class EasyLogin
        VB: Public Class EasyLogin
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyLogin.#ctor(EasyCodeForVivox.EasyMessages,EasyCodeForVivox.EasyTextToSpeech,EasyEvents,EasyEventsAsync,EasySettingsSO,EasyCodeForVivox.EasyMute)
      commentId: M:EasyCodeForVivox.EasyLogin.#ctor(EasyCodeForVivox.EasyMessages,EasyCodeForVivox.EasyTextToSpeech,EasyEvents,EasyEventsAsync,EasySettingsSO,EasyCodeForVivox.EasyMute)
      language: CSharp
      name:
        CSharp: EasyLogin(EasyMessages, EasyTextToSpeech, EasyEvents, EasyEventsAsync, EasySettingsSO, EasyMute)
        VB: EasyLogin(EasyMessages, EasyTextToSpeech, EasyEvents, EasyEventsAsync, EasySettingsSO, EasyMute)
      nameWithType:
        CSharp: EasyLogin.EasyLogin(EasyMessages, EasyTextToSpeech, EasyEvents, EasyEventsAsync, EasySettingsSO, EasyMute)
        VB: EasyLogin.EasyLogin(EasyMessages, EasyTextToSpeech, EasyEvents, EasyEventsAsync, EasySettingsSO, EasyMute)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.EasyLogin(EasyCodeForVivox.EasyMessages, EasyCodeForVivox.EasyTextToSpeech, EasyEvents, EasyEventsAsync, EasySettingsSO, EasyCodeForVivox.EasyMute)
        VB: EasyCodeForVivox.EasyLogin.EasyLogin(EasyCodeForVivox.EasyMessages, EasyCodeForVivox.EasyTextToSpeech, EasyEvents, EasyEventsAsync, EasySettingsSO, EasyCodeForVivox.EasyMute)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 9256
      syntax:
        content:
          CSharp: public EasyLogin(EasyMessages messages, EasyTextToSpeech textToSpeech, EasyEvents eventsSync, EasyEventsAsync eventsAync, EasySettingsSO easySettings, EasyMute mute)
          VB: Public Sub New(messages As EasyMessages, textToSpeech As EasyTextToSpeech, eventsSync As EasyEvents, eventsAync As EasyEventsAsync, easySettings As EasySettingsSO, mute As EasyMute)
        parameters:
        - id: messages
          type: EasyCodeForVivox.EasyMessages
        - id: textToSpeech
          type: EasyCodeForVivox.EasyTextToSpeech
        - id: eventsSync
          type: EasyEvents
        - id: eventsAync
          type: EasyEventsAsync
        - id: easySettings
          type: EasySettingsSO
        - id: mute
          type: EasyCodeForVivox.EasyMute
      overload: EasyCodeForVivox.EasyLogin.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.LoginToVivox(System.String,System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyLogin.LoginToVivox(System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: LoginToVivox(String, String, Boolean)
        VB: LoginToVivox(String, String, Boolean)
      nameWithType:
        CSharp: EasyLogin.LoginToVivox(String, String, Boolean)
        VB: EasyLogin.LoginToVivox(String, String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.LoginToVivox(System.String, System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyLogin.LoginToVivox(System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LoginToVivox
        path: ''
        startLine: 9288
      syntax:
        content:
          CSharp: public void LoginToVivox(string userName, string displayName = null, bool joinMuted = false)
          VB: Public Sub LoginToVivox(userName As String, displayName As String = Nothing, joinMuted As Boolean = False)
        parameters:
        - id: userName
          type: System.String
        - id: displayName
          type: System.String
        - id: joinMuted
          type: System.Boolean
      overload: EasyCodeForVivox.EasyLogin.LoginToVivox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.LoginToVivox``1(System.String,``0,System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyLogin.LoginToVivox``1(System.String,``0,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: LoginToVivox<T>(String, T, String, Boolean)
        VB: LoginToVivox(Of T)(String, T, String, Boolean)
      nameWithType:
        CSharp: EasyLogin.LoginToVivox<T>(String, T, String, Boolean)
        VB: EasyLogin.LoginToVivox(Of T)(String, T, String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.LoginToVivox<T>(System.String, T, System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyLogin.LoginToVivox(Of T)(System.String, T, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LoginToVivox
        path: ''
        startLine: 9310
      syntax:
        content:
          CSharp: public void LoginToVivox<T>(string userName, T value, string displayName = null, bool joinMuted = false)
          VB: Public Sub LoginToVivox(Of T)(userName As String, value As T, displayName As String = Nothing, joinMuted As Boolean = False)
        parameters:
        - id: userName
          type: System.String
        - id: value
          type: '{T}'
        - id: displayName
          type: System.String
        - id: joinMuted
          type: System.Boolean
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyLogin.LoginToVivox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.LoginToVivox(ILoginSession,Uri,System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyLogin.LoginToVivox(ILoginSession,Uri,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: LoginToVivox(ILoginSession, Uri, String, Boolean)
        VB: LoginToVivox(ILoginSession, Uri, String, Boolean)
      nameWithType:
        CSharp: EasyLogin.LoginToVivox(ILoginSession, Uri, String, Boolean)
        VB: EasyLogin.LoginToVivox(ILoginSession, Uri, String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.LoginToVivox(ILoginSession, Uri, System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyLogin.LoginToVivox(ILoginSession, Uri, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LoginToVivox
        path: ''
        startLine: 9332
      syntax:
        content:
          CSharp: protected void LoginToVivox(ILoginSession loginSession, Uri serverUri, string userName, bool joinMuted = false)
          VB: Protected Sub LoginToVivox(loginSession As ILoginSession, serverUri As Uri, userName As String, joinMuted As Boolean = False)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: serverUri
          type: Uri
        - id: userName
          type: System.String
        - id: joinMuted
          type: System.Boolean
      overload: EasyCodeForVivox.EasyLogin.LoginToVivox*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: EasyCodeForVivox.EasyLogin.LoginToVivox``1(ILoginSession,``0,Uri,System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyLogin.LoginToVivox``1(ILoginSession,``0,Uri,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: LoginToVivox<T>(ILoginSession, T, Uri, String, Boolean)
        VB: LoginToVivox(Of T)(ILoginSession, T, Uri, String, Boolean)
      nameWithType:
        CSharp: EasyLogin.LoginToVivox<T>(ILoginSession, T, Uri, String, Boolean)
        VB: EasyLogin.LoginToVivox(Of T)(ILoginSession, T, Uri, String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.LoginToVivox<T>(ILoginSession, T, Uri, System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyLogin.LoginToVivox(Of T)(ILoginSession, T, Uri, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LoginToVivox
        path: ''
        startLine: 9360
      syntax:
        content:
          CSharp: protected void LoginToVivox<T>(ILoginSession loginSession, T value, Uri serverUri, string userName, bool joinMuted = false)
          VB: Protected Sub LoginToVivox(Of T)(loginSession As ILoginSession, value As T, serverUri As Uri, userName As String, joinMuted As Boolean = False)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        - id: serverUri
          type: Uri
        - id: userName
          type: System.String
        - id: joinMuted
          type: System.Boolean
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyLogin.LoginToVivox*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: EasyCodeForVivox.EasyLogin.UpdateLoginProperties(System.String,ParticipantPropertyUpdateFrequency)
      commentId: M:EasyCodeForVivox.EasyLogin.UpdateLoginProperties(System.String,ParticipantPropertyUpdateFrequency)
      language: CSharp
      name:
        CSharp: UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
        VB: UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
      nameWithType:
        CSharp: EasyLogin.UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
        VB: EasyLogin.UpdateLoginProperties(String, ParticipantPropertyUpdateFrequency)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.UpdateLoginProperties(System.String, ParticipantPropertyUpdateFrequency)
        VB: EasyCodeForVivox.EasyLogin.UpdateLoginProperties(System.String, ParticipantPropertyUpdateFrequency)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UpdateLoginProperties
        path: ''
        startLine: 9389
      syntax:
        content:
          CSharp: public void UpdateLoginProperties(string userName, ParticipantPropertyUpdateFrequency updateFrequency)
          VB: Public Sub UpdateLoginProperties(userName As String, updateFrequency As ParticipantPropertyUpdateFrequency)
        parameters:
        - id: userName
          type: System.String
        - id: updateFrequency
          type: ParticipantPropertyUpdateFrequency
      overload: EasyCodeForVivox.EasyLogin.UpdateLoginProperties*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode(System.String,TransmissionMode,ChannelId)
      commentId: M:EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode(System.String,TransmissionMode,ChannelId)
      language: CSharp
      name:
        CSharp: SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
        VB: SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
      nameWithType:
        CSharp: EasyLogin.SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
        VB: EasyLogin.SetPlayerTransmissionMode(String, TransmissionMode, ChannelId)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode(System.String, TransmissionMode, ChannelId)
        VB: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode(System.String, TransmissionMode, ChannelId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SetPlayerTransmissionMode
        path: ''
        startLine: 9405
      syntax:
        content:
          CSharp: public void SetPlayerTransmissionMode(string userName, TransmissionMode transmissionMode, ChannelId channelId = null)
          VB: Public Sub SetPlayerTransmissionMode(userName As String, transmissionMode As TransmissionMode, channelId As ChannelId = Nothing)
        parameters:
        - id: userName
          type: System.String
        - id: transmissionMode
          type: TransmissionMode
        - id: channelId
          type: ChannelId
      overload: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.GetChannelId(System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyLogin.GetChannelId(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetChannelId(String, String)
        VB: GetChannelId(String, String)
      nameWithType:
        CSharp: EasyLogin.GetChannelId(String, String)
        VB: EasyLogin.GetChannelId(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.GetChannelId(System.String, System.String)
        VB: EasyCodeForVivox.EasyLogin.GetChannelId(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelId
        path: ''
        startLine: 9411
      syntax:
        content:
          CSharp: public ChannelId GetChannelId(string userName, string channelName)
          VB: Public Function GetChannelId(userName As String, channelName As String) As ChannelId
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        return:
          type: ChannelId
      overload: EasyCodeForVivox.EasyLogin.GetChannelId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.LogoutOfVivox(System.String)
      commentId: M:EasyCodeForVivox.EasyLogin.LogoutOfVivox(System.String)
      language: CSharp
      name:
        CSharp: LogoutOfVivox(String)
        VB: LogoutOfVivox(String)
      nameWithType:
        CSharp: EasyLogin.LogoutOfVivox(String)
        VB: EasyLogin.LogoutOfVivox(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.LogoutOfVivox(System.String)
        VB: EasyCodeForVivox.EasyLogin.LogoutOfVivox(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LogoutOfVivox
        path: ''
        startLine: 9416
      syntax:
        content:
          CSharp: public void LogoutOfVivox(string userName)
          VB: Public Sub LogoutOfVivox(userName As String)
        parameters:
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyLogin.LogoutOfVivox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.LogoutOfVivox``1(System.String,``0)
      commentId: M:EasyCodeForVivox.EasyLogin.LogoutOfVivox``1(System.String,``0)
      language: CSharp
      name:
        CSharp: LogoutOfVivox<T>(String, T)
        VB: LogoutOfVivox(Of T)(String, T)
      nameWithType:
        CSharp: EasyLogin.LogoutOfVivox<T>(String, T)
        VB: EasyLogin.LogoutOfVivox(Of T)(String, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.LogoutOfVivox<T>(System.String, T)
        VB: EasyCodeForVivox.EasyLogin.LogoutOfVivox(Of T)(System.String, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LogoutOfVivox
        path: ''
        startLine: 9441
      syntax:
        content:
          CSharp: public void LogoutOfVivox<T>(string userName, T value)
          VB: Public Sub LogoutOfVivox(Of T)(userName As String, value As T)
        parameters:
        - id: userName
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyLogin.LogoutOfVivox*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged(System.Object,PropertyChangedEventArgs)
      commentId: M:EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged(System.Object,PropertyChangedEventArgs)
      language: CSharp
      name:
        CSharp: OnLoginPropertyChanged(Object, PropertyChangedEventArgs)
        VB: OnLoginPropertyChanged(Object, PropertyChangedEventArgs)
      nameWithType:
        CSharp: EasyLogin.OnLoginPropertyChanged(Object, PropertyChangedEventArgs)
        VB: EasyLogin.OnLoginPropertyChanged(Object, PropertyChangedEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged(System.Object, PropertyChangedEventArgs)
        VB: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged(System.Object, PropertyChangedEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoginPropertyChanged
        path: ''
        startLine: 9476
      syntax:
        content:
          CSharp: public void OnLoginPropertyChanged(object sender, PropertyChangedEventArgs propArgs)
          VB: Public Sub OnLoginPropertyChanged(sender As Object, propArgs As PropertyChangedEventArgs)
        parameters:
        - id: sender
          type: System.Object
        - id: propArgs
          type: PropertyChangedEventArgs
      overload: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.OnLoginAdded(System.Object,KeyEventArg{AccountId})
      commentId: M:EasyCodeForVivox.EasyLogin.OnLoginAdded(System.Object,KeyEventArg{AccountId})
      language: CSharp
      name:
        CSharp: OnLoginAdded(Object, KeyEventArg<AccountId>)
        VB: OnLoginAdded(Object, KeyEventArg(Of AccountId))
      nameWithType:
        CSharp: EasyLogin.OnLoginAdded(Object, KeyEventArg<AccountId>)
        VB: EasyLogin.OnLoginAdded(Object, KeyEventArg(Of AccountId))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.OnLoginAdded(System.Object, KeyEventArg<AccountId>)
        VB: EasyCodeForVivox.EasyLogin.OnLoginAdded(System.Object, KeyEventArg(Of AccountId))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoginAdded
        path: ''
        startLine: 9536
      syntax:
        content:
          CSharp: public void OnLoginAdded(object sender, KeyEventArg<AccountId> accountId)
          VB: Public Sub OnLoginAdded(sender As Object, accountId As KeyEventArg(Of AccountId))
        parameters:
        - id: sender
          type: System.Object
        - id: accountId
          type: KeyEventArg{AccountId}
      overload: EasyCodeForVivox.EasyLogin.OnLoginAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.OnLoginRemoved(System.Object,KeyEventArg{AccountId})
      commentId: M:EasyCodeForVivox.EasyLogin.OnLoginRemoved(System.Object,KeyEventArg{AccountId})
      language: CSharp
      name:
        CSharp: OnLoginRemoved(Object, KeyEventArg<AccountId>)
        VB: OnLoginRemoved(Object, KeyEventArg(Of AccountId))
      nameWithType:
        CSharp: EasyLogin.OnLoginRemoved(Object, KeyEventArg<AccountId>)
        VB: EasyLogin.OnLoginRemoved(Object, KeyEventArg(Of AccountId))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.OnLoginRemoved(System.Object, KeyEventArg<AccountId>)
        VB: EasyCodeForVivox.EasyLogin.OnLoginRemoved(System.Object, KeyEventArg(Of AccountId))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoginRemoved
        path: ''
        startLine: 9541
      syntax:
        content:
          CSharp: public void OnLoginRemoved(object sender, KeyEventArg<AccountId> accountId)
          VB: Public Sub OnLoginRemoved(sender As Object, accountId As KeyEventArg(Of AccountId))
        parameters:
        - id: sender
          type: System.Object
        - id: accountId
          type: KeyEventArg{AccountId}
      overload: EasyCodeForVivox.EasyLogin.OnLoginRemoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyLogin.OnLoginUpdated(System.Object,ValueEventArg{AccountId,ILoginSession})
      commentId: M:EasyCodeForVivox.EasyLogin.OnLoginUpdated(System.Object,ValueEventArg{AccountId,ILoginSession})
      language: CSharp
      name:
        CSharp: OnLoginUpdated(Object, ValueEventArg<AccountId, ILoginSession>)
        VB: OnLoginUpdated(Object, ValueEventArg(Of AccountId, ILoginSession))
      nameWithType:
        CSharp: EasyLogin.OnLoginUpdated(Object, ValueEventArg<AccountId, ILoginSession>)
        VB: EasyLogin.OnLoginUpdated(Object, ValueEventArg(Of AccountId, ILoginSession))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyLogin.OnLoginUpdated(System.Object, ValueEventArg<AccountId, ILoginSession>)
        VB: EasyCodeForVivox.EasyLogin.OnLoginUpdated(System.Object, ValueEventArg(Of AccountId, ILoginSession))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnLoginUpdated
        path: ''
        startLine: 9546
      syntax:
        content:
          CSharp: public void OnLoginUpdated(object sender, ValueEventArg<AccountId, ILoginSession> valueEventArgs)
          VB: Public Sub OnLoginUpdated(sender As Object, valueEventArgs As ValueEventArg(Of AccountId, ILoginSession))
        parameters:
        - id: sender
          type: System.Object
        - id: valueEventArgs
          type: ValueEventArg{AccountId,ILoginSession}
      overload: EasyCodeForVivox.EasyLogin.OnLoginUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyMessages
    commentId: T:EasyCodeForVivox.EasyMessages
    language: CSharp
    name:
      CSharp: EasyMessages
      VB: EasyMessages
    nameWithType:
      CSharp: EasyMessages
      VB: EasyMessages
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyMessages
      VB: EasyCodeForVivox.EasyMessages
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyMessages
      path: ''
      startLine: 9564
    syntax:
      content:
        CSharp: public class EasyMessages
        VB: Public Class EasyMessages
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyMessages.#ctor(EasyEventsAsync,EasyEvents)
      commentId: M:EasyCodeForVivox.EasyMessages.#ctor(EasyEventsAsync,EasyEvents)
      language: CSharp
      name:
        CSharp: EasyMessages(EasyEventsAsync, EasyEvents)
        VB: EasyMessages(EasyEventsAsync, EasyEvents)
      nameWithType:
        CSharp: EasyMessages.EasyMessages(EasyEventsAsync, EasyEvents)
        VB: EasyMessages.EasyMessages(EasyEventsAsync, EasyEvents)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.EasyMessages(EasyEventsAsync, EasyEvents)
        VB: EasyCodeForVivox.EasyMessages.EasyMessages(EasyEventsAsync, EasyEvents)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 9569
      syntax:
        content:
          CSharp: public EasyMessages(EasyEventsAsync eventsAsync, EasyEvents events)
          VB: Public Sub New(eventsAsync As EasyEventsAsync, events As EasyEvents)
        parameters:
        - id: eventsAsync
          type: EasyEventsAsync
        - id: events
          type: EasyEvents
      overload: EasyCodeForVivox.EasyMessages.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages(IChannelSession)
      language: CSharp
      name:
        CSharp: SubscribeToChannelMessages(IChannelSession)
        VB: SubscribeToChannelMessages(IChannelSession)
      nameWithType:
        CSharp: EasyMessages.SubscribeToChannelMessages(IChannelSession)
        VB: EasyMessages.SubscribeToChannelMessages(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages(IChannelSession)
        VB: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SubscribeToChannelMessages
        path: ''
        startLine: 9575
      syntax:
        content:
          CSharp: public void SubscribeToChannelMessages(IChannelSession channelSession)
          VB: Public Sub SubscribeToChannelMessages(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages(ILoginSession)
      language: CSharp
      name:
        CSharp: SubscribeToDirectMessages(ILoginSession)
        VB: SubscribeToDirectMessages(ILoginSession)
      nameWithType:
        CSharp: EasyMessages.SubscribeToDirectMessages(ILoginSession)
        VB: EasyMessages.SubscribeToDirectMessages(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages(ILoginSession)
        VB: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SubscribeToDirectMessages
        path: ''
        startLine: 9580
      syntax:
        content:
          CSharp: public void SubscribeToDirectMessages(ILoginSession loginSession)
          VB: Public Sub SubscribeToDirectMessages(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages(IChannelSession)
      language: CSharp
      name:
        CSharp: UnsubscribeFromChannelMessages(IChannelSession)
        VB: UnsubscribeFromChannelMessages(IChannelSession)
      nameWithType:
        CSharp: EasyMessages.UnsubscribeFromChannelMessages(IChannelSession)
        VB: EasyMessages.UnsubscribeFromChannelMessages(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages(IChannelSession)
        VB: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UnsubscribeFromChannelMessages
        path: ''
        startLine: 9586
      syntax:
        content:
          CSharp: public void UnsubscribeFromChannelMessages(IChannelSession channelSession)
          VB: Public Sub UnsubscribeFromChannelMessages(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages(ILoginSession)
      language: CSharp
      name:
        CSharp: UnsubscribeFromDirectMessages(ILoginSession)
        VB: UnsubscribeFromDirectMessages(ILoginSession)
      nameWithType:
        CSharp: EasyMessages.UnsubscribeFromDirectMessages(ILoginSession)
        VB: EasyMessages.UnsubscribeFromDirectMessages(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages(ILoginSession)
        VB: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UnsubscribeFromDirectMessages
        path: ''
        startLine: 9591
      syntax:
        content:
          CSharp: public void UnsubscribeFromDirectMessages(ILoginSession loginSession)
          VB: Public Sub UnsubscribeFromDirectMessages(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession,System.String)
      language: CSharp
      name:
        CSharp: SendChannelMessage(IChannelSession, String)
        VB: SendChannelMessage(IChannelSession, String)
      nameWithType:
        CSharp: EasyMessages.SendChannelMessage(IChannelSession, String)
        VB: EasyMessages.SendChannelMessage(IChannelSession, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendChannelMessage
        path: ''
        startLine: 9602
      syntax:
        content:
          CSharp: public void SendChannelMessage(IChannelSession channel, string inputMsg)
          VB: Public Sub SendChannelMessage(channel As IChannelSession, inputMsg As String)
        parameters:
        - id: channel
          type: IChannelSession
        - id: inputMsg
          type: System.String
      overload: EasyCodeForVivox.EasyMessages.SendChannelMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendChannelMessage``1(IChannelSession,System.String,``0)
      commentId: M:EasyCodeForVivox.EasyMessages.SendChannelMessage``1(IChannelSession,System.String,``0)
      language: CSharp
      name:
        CSharp: SendChannelMessage<T>(IChannelSession, String, T)
        VB: SendChannelMessage(Of T)(IChannelSession, String, T)
      nameWithType:
        CSharp: EasyMessages.SendChannelMessage<T>(IChannelSession, String, T)
        VB: EasyMessages.SendChannelMessage(Of T)(IChannelSession, String, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendChannelMessage<T>(IChannelSession, System.String, T)
        VB: EasyCodeForVivox.EasyMessages.SendChannelMessage(Of T)(IChannelSession, System.String, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendChannelMessage
        path: ''
        startLine: 9627
      syntax:
        content:
          CSharp: public void SendChannelMessage<T>(IChannelSession channel, string inputMsg, T value)
          VB: Public Sub SendChannelMessage(Of T)(channel As IChannelSession, inputMsg As String, value As T)
        parameters:
        - id: channel
          type: IChannelSession
        - id: inputMsg
          type: System.String
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyMessages.SendChannelMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendChannelMessage(IChannelSession, String, String, String)
        VB: SendChannelMessage(IChannelSession, String, String, String)
      nameWithType:
        CSharp: EasyMessages.SendChannelMessage(IChannelSession, String, String, String)
        VB: EasyMessages.SendChannelMessage(IChannelSession, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendChannelMessage(IChannelSession, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendChannelMessage
        path: ''
        startLine: 9652
      syntax:
        content:
          CSharp: public void SendChannelMessage(IChannelSession channel, string inputMsg, string header, string body)
          VB: Public Sub SendChannelMessage(channel As IChannelSession, inputMsg As String, header As String, body As String)
        parameters:
        - id: channel
          type: IChannelSession
        - id: inputMsg
          type: System.String
        - id: header
          type: System.String
        - id: body
          type: System.String
      overload: EasyCodeForVivox.EasyMessages.SendChannelMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendChannelMessage``1(IChannelSession,System.String,``0,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendChannelMessage``1(IChannelSession,System.String,``0,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendChannelMessage<T>(IChannelSession, String, T, String, String)
        VB: SendChannelMessage(Of T)(IChannelSession, String, T, String, String)
      nameWithType:
        CSharp: EasyMessages.SendChannelMessage<T>(IChannelSession, String, T, String, String)
        VB: EasyMessages.SendChannelMessage(Of T)(IChannelSession, String, T, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendChannelMessage<T>(IChannelSession, System.String, T, System.String, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendChannelMessage(Of T)(IChannelSession, System.String, T, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendChannelMessage
        path: ''
        startLine: 9678
      syntax:
        content:
          CSharp: public void SendChannelMessage<T>(IChannelSession channel, string inputMsg, T value, string header, string body)
          VB: Public Sub SendChannelMessage(Of T)(channel As IChannelSession, inputMsg As String, value As T, header As String, body As String)
        parameters:
        - id: channel
          type: IChannelSession
        - id: inputMsg
          type: System.String
        - id: value
          type: '{T}'
        - id: header
          type: System.String
        - id: body
          type: System.String
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyMessages.SendChannelMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendEventMessage(IChannelSession,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendEventMessage(IChannelSession,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendEventMessage(IChannelSession, String, String, String)
        VB: SendEventMessage(IChannelSession, String, String, String)
      nameWithType:
        CSharp: EasyMessages.SendEventMessage(IChannelSession, String, String, String)
        VB: EasyMessages.SendEventMessage(IChannelSession, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendEventMessage(IChannelSession, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendEventMessage(IChannelSession, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendEventMessage
        path: ''
        startLine: 9704
      syntax:
        content:
          CSharp: public void SendEventMessage(IChannelSession channel, string eventMessage, string header, string body)
          VB: Public Sub SendEventMessage(channel As IChannelSession, eventMessage As String, header As String, body As String)
        parameters:
        - id: channel
          type: IChannelSession
        - id: eventMessage
          type: System.String
        - id: header
          type: System.String
        - id: body
          type: System.String
      overload: EasyCodeForVivox.EasyMessages.SendEventMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession,System.String,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession,System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendDirectMessage(ILoginSession, String, String, String, String)
        VB: SendDirectMessage(ILoginSession, String, String, String, String)
      nameWithType:
        CSharp: EasyMessages.SendDirectMessage(ILoginSession, String, String, String, String)
        VB: EasyMessages.SendDirectMessage(ILoginSession, String, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession, System.String, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession, System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendDirectMessage
        path: ''
        startLine: 9725
      syntax:
        content:
          CSharp: public void SendDirectMessage(ILoginSession loginSession, string targetID, string message, string header = null, string body = null)
          VB: Public Sub SendDirectMessage(loginSession As ILoginSession, targetID As String, message As String, header As String = Nothing, body As String = Nothing)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: targetID
          type: System.String
        - id: message
          type: System.String
        - id: header
          type: System.String
        - id: body
          type: System.String
      overload: EasyCodeForVivox.EasyMessages.SendDirectMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendDirectMessage``1(ILoginSession,System.String,System.String,``0,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendDirectMessage``1(ILoginSession,System.String,System.String,``0,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendDirectMessage<T>(ILoginSession, String, String, T, String, String)
        VB: SendDirectMessage(Of T)(ILoginSession, String, String, T, String, String)
      nameWithType:
        CSharp: EasyMessages.SendDirectMessage<T>(ILoginSession, String, String, T, String, String)
        VB: EasyMessages.SendDirectMessage(Of T)(ILoginSession, String, String, T, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendDirectMessage<T>(ILoginSession, System.String, System.String, T, System.String, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendDirectMessage(Of T)(ILoginSession, System.String, System.String, T, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendDirectMessage
        path: ''
        startLine: 9747
      syntax:
        content:
          CSharp: public void SendDirectMessage<T>(ILoginSession loginSession, string targetID, string message, T value, string header = null, string body = null)
          VB: Public Sub SendDirectMessage(Of T)(loginSession As ILoginSession, targetID As String, message As String, value As T, header As String = Nothing, body As String = Nothing)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: targetID
          type: System.String
        - id: message
          type: System.String
        - id: value
          type: '{T}'
        - id: header
          type: System.String
        - id: body
          type: System.String
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyMessages.SendDirectMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession,Dictionary{System.String,System.String},System.String,System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession,Dictionary{System.String,System.String},System.String,System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendDirectMessage(ILoginSession, Dictionary<String, String>, String, String, String, String)
        VB: SendDirectMessage(ILoginSession, Dictionary(Of String, String), String, String, String, String)
      nameWithType:
        CSharp: EasyMessages.SendDirectMessage(ILoginSession, Dictionary<String, String>, String, String, String, String)
        VB: EasyMessages.SendDirectMessage(ILoginSession, Dictionary(Of String, String), String, String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession, Dictionary<System.String, System.String>, System.String, System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendDirectMessage(ILoginSession, Dictionary(Of System.String, System.String), System.String, System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendDirectMessage
        path: ''
        startLine: 9769
      syntax:
        content:
          CSharp: public void SendDirectMessage(ILoginSession login, Dictionary<string, string> attemptedDirectMessages, string targetID, string message, string header = null, string body = null)
          VB: Public Sub SendDirectMessage(login As ILoginSession, attemptedDirectMessages As Dictionary(Of String, String), targetID As String, message As String, header As String = Nothing, body As String = Nothing)
        parameters:
        - id: login
          type: ILoginSession
        - id: attemptedDirectMessages
          type: Dictionary{System.String,System.String}
        - id: targetID
          type: System.String
        - id: message
          type: System.String
        - id: header
          type: System.String
        - id: body
          type: System.String
      overload: EasyCodeForVivox.EasyMessages.SendDirectMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.SendDirectMessage``1(ILoginSession,Dictionary{System.String,System.String},System.String,System.String,``0,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasyMessages.SendDirectMessage``1(ILoginSession,Dictionary{System.String,System.String},System.String,System.String,``0,System.String,System.String)
      language: CSharp
      name:
        CSharp: SendDirectMessage<T>(ILoginSession, Dictionary<String, String>, String, String, T, String, String)
        VB: SendDirectMessage(Of T)(ILoginSession, Dictionary(Of String, String), String, String, T, String, String)
      nameWithType:
        CSharp: EasyMessages.SendDirectMessage<T>(ILoginSession, Dictionary<String, String>, String, String, T, String, String)
        VB: EasyMessages.SendDirectMessage(Of T)(ILoginSession, Dictionary(Of String, String), String, String, T, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.SendDirectMessage<T>(ILoginSession, Dictionary<System.String, System.String>, System.String, System.String, T, System.String, System.String)
        VB: EasyCodeForVivox.EasyMessages.SendDirectMessage(Of T)(ILoginSession, Dictionary(Of System.String, System.String), System.String, System.String, T, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SendDirectMessage
        path: ''
        startLine: 9794
      syntax:
        content:
          CSharp: public void SendDirectMessage<T>(ILoginSession login, Dictionary<string, string> attemptedDirectMessages, string targetID, string message, T value, string header = null, string body = null)
          VB: Public Sub SendDirectMessage(Of T)(login As ILoginSession, attemptedDirectMessages As Dictionary(Of String, String), targetID As String, message As String, value As T, header As String = Nothing, body As String = Nothing)
        parameters:
        - id: login
          type: ILoginSession
        - id: attemptedDirectMessages
          type: Dictionary{System.String,System.String}
        - id: targetID
          type: System.String
        - id: message
          type: System.String
        - id: value
          type: '{T}'
        - id: header
          type: System.String
        - id: body
          type: System.String
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyMessages.SendDirectMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved(System.Object,QueueItemAddedEventArgs{IDirectedTextMessage})
      commentId: M:EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved(System.Object,QueueItemAddedEventArgs{IDirectedTextMessage})
      language: CSharp
      name:
        CSharp: OnDirectMessageRecieved(Object, QueueItemAddedEventArgs<IDirectedTextMessage>)
        VB: OnDirectMessageRecieved(Object, QueueItemAddedEventArgs(Of IDirectedTextMessage))
      nameWithType:
        CSharp: EasyMessages.OnDirectMessageRecieved(Object, QueueItemAddedEventArgs<IDirectedTextMessage>)
        VB: EasyMessages.OnDirectMessageRecieved(Object, QueueItemAddedEventArgs(Of IDirectedTextMessage))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved(System.Object, QueueItemAddedEventArgs<IDirectedTextMessage>)
        VB: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved(System.Object, QueueItemAddedEventArgs(Of IDirectedTextMessage))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnDirectMessageRecieved
        path: ''
        startLine: 9825
      syntax:
        content:
          CSharp: public void OnDirectMessageRecieved(object sender, QueueItemAddedEventArgs<IDirectedTextMessage> directMessage)
          VB: Public Sub OnDirectMessageRecieved(sender As Object, directMessage As QueueItemAddedEventArgs(Of IDirectedTextMessage))
        parameters:
        - id: sender
          type: System.Object
        - id: directMessage
          type: QueueItemAddedEventArgs{IDirectedTextMessage}
      overload: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback(System.Object,QueueItemAddedEventArgs{IFailedDirectedTextMessage})
      commentId: M:EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback(System.Object,QueueItemAddedEventArgs{IFailedDirectedTextMessage})
      language: CSharp
      name:
        CSharp: OnDirectMessageFailedCallback(Object, QueueItemAddedEventArgs<IFailedDirectedTextMessage>)
        VB: OnDirectMessageFailedCallback(Object, QueueItemAddedEventArgs(Of IFailedDirectedTextMessage))
      nameWithType:
        CSharp: EasyMessages.OnDirectMessageFailedCallback(Object, QueueItemAddedEventArgs<IFailedDirectedTextMessage>)
        VB: EasyMessages.OnDirectMessageFailedCallback(Object, QueueItemAddedEventArgs(Of IFailedDirectedTextMessage))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback(System.Object, QueueItemAddedEventArgs<IFailedDirectedTextMessage>)
        VB: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback(System.Object, QueueItemAddedEventArgs(Of IFailedDirectedTextMessage))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnDirectMessageFailedCallback
        path: ''
        startLine: 9841
      syntax:
        content:
          CSharp: public void OnDirectMessageFailedCallback(object sender, QueueItemAddedEventArgs<IFailedDirectedTextMessage> failedMessage)
          VB: Public Sub OnDirectMessageFailedCallback(sender As Object, failedMessage As QueueItemAddedEventArgs(Of IFailedDirectedTextMessage))
        parameters:
        - id: sender
          type: System.Object
        - id: failedMessage
          type: QueueItemAddedEventArgs{IFailedDirectedTextMessage}
      overload: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved(System.Object,QueueItemAddedEventArgs{IChannelTextMessage})
      commentId: M:EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved(System.Object,QueueItemAddedEventArgs{IChannelTextMessage})
      language: CSharp
      name:
        CSharp: OnChannelMessageRecieved(Object, QueueItemAddedEventArgs<IChannelTextMessage>)
        VB: OnChannelMessageRecieved(Object, QueueItemAddedEventArgs(Of IChannelTextMessage))
      nameWithType:
        CSharp: EasyMessages.OnChannelMessageRecieved(Object, QueueItemAddedEventArgs<IChannelTextMessage>)
        VB: EasyMessages.OnChannelMessageRecieved(Object, QueueItemAddedEventArgs(Of IChannelTextMessage))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved(System.Object, QueueItemAddedEventArgs<IChannelTextMessage>)
        VB: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved(System.Object, QueueItemAddedEventArgs(Of IChannelTextMessage))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelMessageRecieved
        path: ''
        startLine: 9855
      syntax:
        content:
          CSharp: public void OnChannelMessageRecieved(object sender, QueueItemAddedEventArgs<IChannelTextMessage> channelMessage)
          VB: Public Sub OnChannelMessageRecieved(sender As Object, channelMessage As QueueItemAddedEventArgs(Of IChannelTextMessage))
        parameters:
        - id: sender
          type: System.Object
        - id: channelMessage
          type: QueueItemAddedEventArgs{IChannelTextMessage}
      overload: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyMute
    commentId: T:EasyCodeForVivox.EasyMute
    language: CSharp
    name:
      CSharp: EasyMute
      VB: EasyMute
    nameWithType:
      CSharp: EasyMute
      VB: EasyMute
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyMute
      VB: EasyCodeForVivox.EasyMute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyMute
      path: ''
      startLine: 9897
    syntax:
      content:
        CSharp: public class EasyMute
        VB: Public Class EasyMute
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyMute.#ctor(EasyEvents,EasyEventsAsync,EasySettingsSO)
      commentId: M:EasyCodeForVivox.EasyMute.#ctor(EasyEvents,EasyEventsAsync,EasySettingsSO)
      language: CSharp
      name:
        CSharp: EasyMute(EasyEvents, EasyEventsAsync, EasySettingsSO)
        VB: EasyMute(EasyEvents, EasyEventsAsync, EasySettingsSO)
      nameWithType:
        CSharp: EasyMute.EasyMute(EasyEvents, EasyEventsAsync, EasySettingsSO)
        VB: EasyMute.EasyMute(EasyEvents, EasyEventsAsync, EasySettingsSO)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.EasyMute(EasyEvents, EasyEventsAsync, EasySettingsSO)
        VB: EasyCodeForVivox.EasyMute.EasyMute(EasyEvents, EasyEventsAsync, EasySettingsSO)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 9904
      syntax:
        content:
          CSharp: public EasyMute(EasyEvents events, EasyEventsAsync eventsAync, EasySettingsSO settings)
          VB: Public Sub New(events As EasyEvents, eventsAync As EasyEventsAsync, settings As EasySettingsSO)
        parameters:
        - id: events
          type: EasyEvents
        - id: eventsAync
          type: EasyEventsAsync
        - id: settings
          type: EasySettingsSO
      overload: EasyCodeForVivox.EasyMute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.Subscribe(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyMute.Subscribe(ILoginSession)
      language: CSharp
      name:
        CSharp: Subscribe(ILoginSession)
        VB: Subscribe(ILoginSession)
      nameWithType:
        CSharp: EasyMute.Subscribe(ILoginSession)
        VB: EasyMute.Subscribe(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.Subscribe(ILoginSession)
        VB: EasyCodeForVivox.EasyMute.Subscribe(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Subscribe
        path: ''
        startLine: 9912
      syntax:
        content:
          CSharp: public void Subscribe(ILoginSession loginSession)
          VB: Public Sub Subscribe(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyMute.Subscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.Unsubscribe(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyMute.Unsubscribe(ILoginSession)
      language: CSharp
      name:
        CSharp: Unsubscribe(ILoginSession)
        VB: Unsubscribe(ILoginSession)
      nameWithType:
        CSharp: EasyMute.Unsubscribe(ILoginSession)
        VB: EasyMute.Unsubscribe(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.Unsubscribe(ILoginSession)
        VB: EasyCodeForVivox.EasyMute.Unsubscribe(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Unsubscribe
        path: ''
        startLine: 9918
      syntax:
        content:
          CSharp: public void Unsubscribe(ILoginSession loginSession)
          VB: Public Sub Unsubscribe(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyMute.Unsubscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser(System.String,IChannelSession,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyMute.LocalMuteRemoteUser(System.String,IChannelSession,System.Boolean)
      language: CSharp
      name:
        CSharp: LocalMuteRemoteUser(String, IChannelSession, Boolean)
        VB: LocalMuteRemoteUser(String, IChannelSession, Boolean)
      nameWithType:
        CSharp: EasyMute.LocalMuteRemoteUser(String, IChannelSession, Boolean)
        VB: EasyMute.LocalMuteRemoteUser(String, IChannelSession, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser(System.String, IChannelSession, System.Boolean)
        VB: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser(System.String, IChannelSession, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalMuteRemoteUser
        path: ''
        startLine: 9924
      syntax:
        content:
          CSharp: public void LocalMuteRemoteUser(string userName, IChannelSession channelSession, bool mute)
          VB: Public Sub LocalMuteRemoteUser(userName As String, channelSession As IChannelSession, mute As Boolean)
        parameters:
        - id: userName
          type: System.String
        - id: channelSession
          type: IChannelSession
        - id: mute
          type: System.Boolean
      overload: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.LocalMuteAllUsers(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyMute.LocalMuteAllUsers(IChannelSession)
      language: CSharp
      name:
        CSharp: LocalMuteAllUsers(IChannelSession)
        VB: LocalMuteAllUsers(IChannelSession)
      nameWithType:
        CSharp: EasyMute.LocalMuteAllUsers(IChannelSession)
        VB: EasyMute.LocalMuteAllUsers(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.LocalMuteAllUsers(IChannelSession)
        VB: EasyCodeForVivox.EasyMute.LocalMuteAllUsers(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalMuteAllUsers
        path: ''
        startLine: 9940
      syntax:
        content:
          CSharp: public void LocalMuteAllUsers(IChannelSession channelSession)
          VB: Public Sub LocalMuteAllUsers(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyMute.LocalMuteAllUsers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers(IChannelSession)
      language: CSharp
      name:
        CSharp: LocalUnmuteAllUsers(IChannelSession)
        VB: LocalUnmuteAllUsers(IChannelSession)
      nameWithType:
        CSharp: EasyMute.LocalUnmuteAllUsers(IChannelSession)
        VB: EasyMute.LocalUnmuteAllUsers(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers(IChannelSession)
        VB: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalUnmuteAllUsers
        path: ''
        startLine: 9959
      syntax:
        content:
          CSharp: public void LocalUnmuteAllUsers(IChannelSession channelSession)
          VB: Public Sub LocalUnmuteAllUsers(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.LocalMuteSelf(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyMute.LocalMuteSelf(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: LocalMuteSelf(VivoxUnity.Client)
        VB: LocalMuteSelf(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyMute.LocalMuteSelf(VivoxUnity.Client)
        VB: EasyMute.LocalMuteSelf(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.LocalMuteSelf(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyMute.LocalMuteSelf(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalMuteSelf
        path: ''
        startLine: 9979
      syntax:
        content:
          CSharp: public void LocalMuteSelf(VivoxUnity.Client client)
          VB: Public Sub LocalMuteSelf(client As VivoxUnity.Client)
        parameters:
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyMute.LocalMuteSelf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.LocalMuteSelf``1(VivoxUnity.Client,``0)
      commentId: M:EasyCodeForVivox.EasyMute.LocalMuteSelf``1(VivoxUnity.Client,``0)
      language: CSharp
      name:
        CSharp: LocalMuteSelf<T>(VivoxUnity.Client, T)
        VB: LocalMuteSelf(Of T)(VivoxUnity.Client, T)
      nameWithType:
        CSharp: EasyMute.LocalMuteSelf<T>(VivoxUnity.Client, T)
        VB: EasyMute.LocalMuteSelf(Of T)(VivoxUnity.Client, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.LocalMuteSelf<T>(VivoxUnity.Client, T)
        VB: EasyCodeForVivox.EasyMute.LocalMuteSelf(Of T)(VivoxUnity.Client, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalMuteSelf
        path: ''
        startLine: 9986
      syntax:
        content:
          CSharp: public void LocalMuteSelf<T>(VivoxUnity.Client client, T value)
          VB: Public Sub LocalMuteSelf(Of T)(client As VivoxUnity.Client, value As T)
        parameters:
        - id: client
          type: VivoxUnity.Client
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyMute.LocalMuteSelf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.LocalUnmuteSelf(VivoxUnity.Client)
      commentId: M:EasyCodeForVivox.EasyMute.LocalUnmuteSelf(VivoxUnity.Client)
      language: CSharp
      name:
        CSharp: LocalUnmuteSelf(VivoxUnity.Client)
        VB: LocalUnmuteSelf(VivoxUnity.Client)
      nameWithType:
        CSharp: EasyMute.LocalUnmuteSelf(VivoxUnity.Client)
        VB: EasyMute.LocalUnmuteSelf(VivoxUnity.Client)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.LocalUnmuteSelf(VivoxUnity.Client)
        VB: EasyCodeForVivox.EasyMute.LocalUnmuteSelf(VivoxUnity.Client)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalUnmuteSelf
        path: ''
        startLine: 9993
      syntax:
        content:
          CSharp: public void LocalUnmuteSelf(VivoxUnity.Client client)
          VB: Public Sub LocalUnmuteSelf(client As VivoxUnity.Client)
        parameters:
        - id: client
          type: VivoxUnity.Client
      overload: EasyCodeForVivox.EasyMute.LocalUnmuteSelf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.LocalUnmuteSelf``1(VivoxUnity.Client,``0)
      commentId: M:EasyCodeForVivox.EasyMute.LocalUnmuteSelf``1(VivoxUnity.Client,``0)
      language: CSharp
      name:
        CSharp: LocalUnmuteSelf<T>(VivoxUnity.Client, T)
        VB: LocalUnmuteSelf(Of T)(VivoxUnity.Client, T)
      nameWithType:
        CSharp: EasyMute.LocalUnmuteSelf<T>(VivoxUnity.Client, T)
        VB: EasyMute.LocalUnmuteSelf(Of T)(VivoxUnity.Client, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.LocalUnmuteSelf<T>(VivoxUnity.Client, T)
        VB: EasyCodeForVivox.EasyMute.LocalUnmuteSelf(Of T)(VivoxUnity.Client, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: LocalUnmuteSelf
        path: ''
        startLine: 10000
      syntax:
        content:
          CSharp: public void LocalUnmuteSelf<T>(VivoxUnity.Client client, T value)
          VB: Public Sub LocalUnmuteSelf(Of T)(client As VivoxUnity.Client, value As T)
        parameters:
        - id: client
          type: VivoxUnity.Client
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyMute.LocalUnmuteSelf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.CrossMuteUser(System.String,System.String,System.String,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyMute.CrossMuteUser(System.String,System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: CrossMuteUser(String, String, String, Boolean)
        VB: CrossMuteUser(String, String, String, Boolean)
      nameWithType:
        CSharp: EasyMute.CrossMuteUser(String, String, String, Boolean)
        VB: EasyMute.CrossMuteUser(String, String, String, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.CrossMuteUser(System.String, System.String, System.String, System.Boolean)
        VB: EasyCodeForVivox.EasyMute.CrossMuteUser(System.String, System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CrossMuteUser
        path: ''
        startLine: 10008
      syntax:
        content:
          CSharp: public void CrossMuteUser(string userName, string channelName, string userToMute, bool mute)
          VB: Public Sub CrossMuteUser(userName As String, channelName As String, userToMute As String, mute As Boolean)
        parameters:
        - id: userName
          type: System.String
        - id: channelName
          type: System.String
        - id: userToMute
          type: System.String
        - id: mute
          type: System.Boolean
      overload: EasyCodeForVivox.EasyMute.CrossMuteUser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.CrossMuteUsers(System.String,System.String,List{System.String},System.Boolean)
      commentId: M:EasyCodeForVivox.EasyMute.CrossMuteUsers(System.String,System.String,List{System.String},System.Boolean)
      language: CSharp
      name:
        CSharp: CrossMuteUsers(String, String, List<String>, Boolean)
        VB: CrossMuteUsers(String, String, List(Of String), Boolean)
      nameWithType:
        CSharp: EasyMute.CrossMuteUsers(String, String, List<String>, Boolean)
        VB: EasyMute.CrossMuteUsers(String, String, List(Of String), Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.CrossMuteUsers(System.String, System.String, List<System.String>, System.Boolean)
        VB: EasyCodeForVivox.EasyMute.CrossMuteUsers(System.String, System.String, List(Of System.String), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: CrossMuteUsers
        path: ''
        startLine: 10035
      syntax:
        content:
          CSharp: public void CrossMuteUsers(string loggedInUserName, string channelName, List<string> usersToMute, bool mute)
          VB: Public Sub CrossMuteUsers(loggedInUserName As String, channelName As String, usersToMute As List(Of String), mute As Boolean)
        parameters:
        - id: loggedInUserName
          type: System.String
        - id: channelName
          type: System.String
        - id: usersToMute
          type: List{System.String}
        - id: mute
          type: System.Boolean
      overload: EasyCodeForVivox.EasyMute.CrossMuteUsers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts(System.String)
      commentId: M:EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts(System.String)
      language: CSharp
      name:
        CSharp: ClearAllCurrentCrossMutedAccounts(String)
        VB: ClearAllCurrentCrossMutedAccounts(String)
      nameWithType:
        CSharp: EasyMute.ClearAllCurrentCrossMutedAccounts(String)
        VB: EasyMute.ClearAllCurrentCrossMutedAccounts(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts(System.String)
        VB: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ClearAllCurrentCrossMutedAccounts
        path: ''
        startLine: 10064
      syntax:
        content:
          CSharp: public void ClearAllCurrentCrossMutedAccounts(string loggedInUserName)
          VB: Public Sub ClearAllCurrentCrossMutedAccounts(loggedInUserName As String)
        parameters:
        - id: loggedInUserName
          type: System.String
      overload: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasySIP
    commentId: T:EasyCodeForVivox.EasySIP
    language: CSharp
    name:
      CSharp: EasySIP
      VB: EasySIP
    nameWithType:
      CSharp: EasySIP
      VB: EasySIP
    qualifiedName:
      CSharp: EasyCodeForVivox.EasySIP
      VB: EasyCodeForVivox.EasySIP
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasySIP
      path: ''
      startLine: 10108
    syntax:
      content:
        CSharp: 'public class EasySIP : MonoBehaviour'
        VB: >-
          Public Class EasySIP

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasySIP.GetUserSIP(ILoginSession)
      commentId: M:EasyCodeForVivox.EasySIP.GetUserSIP(ILoginSession)
      language: CSharp
      name:
        CSharp: GetUserSIP(ILoginSession)
        VB: GetUserSIP(ILoginSession)
      nameWithType:
        CSharp: EasySIP.GetUserSIP(ILoginSession)
        VB: EasySIP.GetUserSIP(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySIP.GetUserSIP(ILoginSession)
        VB: EasyCodeForVivox.EasySIP.GetUserSIP(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetUserSIP
        path: ''
        startLine: 10114
      summary: "\nGets valid Vivox SIP address\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetUserSIP(ILoginSession loginSession)
          VB: Public Shared Function GetUserSIP(loginSession As ILoginSession) As String
        parameters:
        - id: loginSession
          type: ILoginSession
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.EasySIP.GetUserSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySIP.GetUserSIP(IParticipant)
      commentId: M:EasyCodeForVivox.EasySIP.GetUserSIP(IParticipant)
      language: CSharp
      name:
        CSharp: GetUserSIP(IParticipant)
        VB: GetUserSIP(IParticipant)
      nameWithType:
        CSharp: EasySIP.GetUserSIP(IParticipant)
        VB: EasySIP.GetUserSIP(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySIP.GetUserSIP(IParticipant)
        VB: EasyCodeForVivox.EasySIP.GetUserSIP(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetUserSIP
        path: ''
        startLine: 10124
      summary: "\nGets valid Vivox SIP address\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetUserSIP(IParticipant participant)
          VB: Public Shared Function GetUserSIP(participant As IParticipant) As String
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.EasySIP.GetUserSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySIP.GetUserSIP(System.String,System.String,System.String)
      commentId: M:EasyCodeForVivox.EasySIP.GetUserSIP(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: GetUserSIP(String, String, String)
        VB: GetUserSIP(String, String, String)
      nameWithType:
        CSharp: EasySIP.GetUserSIP(String, String, String)
        VB: EasySIP.GetUserSIP(String, String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySIP.GetUserSIP(System.String, System.String, System.String)
        VB: EasyCodeForVivox.EasySIP.GetUserSIP(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetUserSIP
        path: ''
        startLine: 10134
      summary: "\nGets valid Vivox SIP address\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetUserSIP(string issuer, string userName, string domain)
          VB: Public Shared Function GetUserSIP(issuer As String, userName As String, domain As String) As String
        parameters:
        - id: issuer
          type: System.String
        - id: userName
          type: System.String
        - id: domain
          type: System.String
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.EasySIP.GetUserSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySIP.GetChannelSip(IChannelSession,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasySIP.GetChannelSip(IChannelSession,Channel3DProperties)
      language: CSharp
      name:
        CSharp: GetChannelSip(IChannelSession, Channel3DProperties)
        VB: GetChannelSip(IChannelSession, Channel3DProperties)
      nameWithType:
        CSharp: EasySIP.GetChannelSip(IChannelSession, Channel3DProperties)
        VB: EasySIP.GetChannelSip(IChannelSession, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySIP.GetChannelSip(IChannelSession, Channel3DProperties)
        VB: EasyCodeForVivox.EasySIP.GetChannelSip(IChannelSession, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelSip
        path: ''
        startLine: 10144
      summary: "\nGets valid Vivox Channel SIP address\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetChannelSip(IChannelSession channelSession, Channel3DProperties channel3DProperties = null)
          VB: Public Shared Function GetChannelSip(channelSession As IChannelSession, channel3DProperties As Channel3DProperties = Nothing) As String
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: channel3DProperties
          type: Channel3DProperties
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.EasySIP.GetChannelSip*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType,System.String,System.String,System.String,System.String,System.String,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType,System.String,System.String,System.String,System.String,System.String,Channel3DProperties)
      language: CSharp
      name:
        CSharp: GetChannelSIP(ChannelType, String, String, String, String, String, Channel3DProperties)
        VB: GetChannelSIP(ChannelType, String, String, String, String, String, Channel3DProperties)
      nameWithType:
        CSharp: EasySIP.GetChannelSIP(ChannelType, String, String, String, String, String, Channel3DProperties)
        VB: EasySIP.GetChannelSIP(ChannelType, String, String, String, String, String, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType, System.String, System.String, System.String, System.String, System.String, Channel3DProperties)
        VB: EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType, System.String, System.String, System.String, System.String, System.String, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelSIP
        path: ''
        startLine: 10175
      summary: "\nGets valid Vivox Channel SIP address\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetChannelSIP(ChannelType channelType, string issuer, string channelName, string domain, string region, string hash, Channel3DProperties channel3DProperties = null)
          VB: Public Shared Function GetChannelSIP(channelType As ChannelType, issuer As String, channelName As String, domain As String, region As String, hash As String, channel3DProperties As Channel3DProperties = Nothing) As String
        parameters:
        - id: channelType
          type: ChannelType
        - id: issuer
          type: System.String
        - id: channelName
          type: System.String
        - id: domain
          type: System.String
        - id: region
          type: System.String
        - id: hash
          type: System.String
        - id: channel3DProperties
          type: Channel3DProperties
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.EasySIP.GetChannelSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType,System.String,System.String,System.String,Channel3DProperties)
      commentId: M:EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType,System.String,System.String,System.String,Channel3DProperties)
      language: CSharp
      name:
        CSharp: GetChannelSIP(ChannelType, String, String, String, Channel3DProperties)
        VB: GetChannelSIP(ChannelType, String, String, String, Channel3DProperties)
      nameWithType:
        CSharp: EasySIP.GetChannelSIP(ChannelType, String, String, String, Channel3DProperties)
        VB: EasySIP.GetChannelSIP(ChannelType, String, String, String, Channel3DProperties)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType, System.String, System.String, System.String, Channel3DProperties)
        VB: EasyCodeForVivox.EasySIP.GetChannelSIP(ChannelType, System.String, System.String, System.String, Channel3DProperties)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: GetChannelSIP
        path: ''
        startLine: 10202
      summary: "\nGets valid Vivox Channel SIP address\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetChannelSIP(ChannelType channelType, string issuer, string channelName, string domain, Channel3DProperties channel3DProperties = null)
          VB: Public Shared Function GetChannelSIP(channelType As ChannelType, issuer As String, channelName As String, domain As String, channel3DProperties As Channel3DProperties = Nothing) As String
        parameters:
        - id: channelType
          type: ChannelType
        - id: issuer
          type: System.String
        - id: channelName
          type: System.String
        - id: domain
          type: System.String
        - id: channel3DProperties
          type: Channel3DProperties
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.EasySIP.GetChannelSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: EasyCodeForVivox.EasyTextChannel
    commentId: T:EasyCodeForVivox.EasyTextChannel
    language: CSharp
    name:
      CSharp: EasyTextChannel
      VB: EasyTextChannel
    nameWithType:
      CSharp: EasyTextChannel
      VB: EasyTextChannel
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyTextChannel
      VB: EasyCodeForVivox.EasyTextChannel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyTextChannel
      path: ''
      startLine: 10236
    syntax:
      content:
        CSharp: public class EasyTextChannel
        VB: Public Class EasyTextChannel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyTextChannel.#ctor(EasyEventsAsync,EasyEvents)
      commentId: M:EasyCodeForVivox.EasyTextChannel.#ctor(EasyEventsAsync,EasyEvents)
      language: CSharp
      name:
        CSharp: EasyTextChannel(EasyEventsAsync, EasyEvents)
        VB: EasyTextChannel(EasyEventsAsync, EasyEvents)
      nameWithType:
        CSharp: EasyTextChannel.EasyTextChannel(EasyEventsAsync, EasyEvents)
        VB: EasyTextChannel.EasyTextChannel(EasyEventsAsync, EasyEvents)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextChannel.EasyTextChannel(EasyEventsAsync, EasyEvents)
        VB: EasyCodeForVivox.EasyTextChannel.EasyTextChannel(EasyEventsAsync, EasyEvents)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 10241
      syntax:
        content:
          CSharp: public EasyTextChannel(EasyEventsAsync eventsAsync, EasyEvents events)
          VB: Public Sub New(eventsAsync As EasyEventsAsync, events As EasyEvents)
        parameters:
        - id: eventsAsync
          type: EasyEventsAsync
        - id: events
          type: EasyEvents
      overload: EasyCodeForVivox.EasyTextChannel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextChannel.Subscribe(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyTextChannel.Subscribe(IChannelSession)
      language: CSharp
      name:
        CSharp: Subscribe(IChannelSession)
        VB: Subscribe(IChannelSession)
      nameWithType:
        CSharp: EasyTextChannel.Subscribe(IChannelSession)
        VB: EasyTextChannel.Subscribe(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextChannel.Subscribe(IChannelSession)
        VB: EasyCodeForVivox.EasyTextChannel.Subscribe(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Subscribe
        path: ''
        startLine: 10247
      syntax:
        content:
          CSharp: public void Subscribe(IChannelSession channelSession)
          VB: Public Sub Subscribe(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyTextChannel.Subscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextChannel.Unsubscribe(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyTextChannel.Unsubscribe(IChannelSession)
      language: CSharp
      name:
        CSharp: Unsubscribe(IChannelSession)
        VB: Unsubscribe(IChannelSession)
      nameWithType:
        CSharp: EasyTextChannel.Unsubscribe(IChannelSession)
        VB: EasyTextChannel.Unsubscribe(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextChannel.Unsubscribe(IChannelSession)
        VB: EasyCodeForVivox.EasyTextChannel.Unsubscribe(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Unsubscribe
        path: ''
        startLine: 10252
      syntax:
        content:
          CSharp: public void Unsubscribe(IChannelSession channelSession)
          VB: Public Sub Unsubscribe(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyTextChannel.Unsubscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel(IChannelSession,System.Boolean)
      commentId: M:EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel(IChannelSession,System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleTextInChannel(IChannelSession, Boolean)
        VB: ToggleTextInChannel(IChannelSession, Boolean)
      nameWithType:
        CSharp: EasyTextChannel.ToggleTextInChannel(IChannelSession, Boolean)
        VB: EasyTextChannel.ToggleTextInChannel(IChannelSession, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel(IChannelSession, System.Boolean)
        VB: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel(IChannelSession, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ToggleTextInChannel
        path: ''
        startLine: 10262
      syntax:
        content:
          CSharp: public void ToggleTextInChannel(IChannelSession channelSession, bool join)
          VB: Public Sub ToggleTextInChannel(channelSession As IChannelSession, join As Boolean)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: join
          type: System.Boolean
      overload: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive``1(IChannelSession,System.Boolean,``0)
      commentId: M:EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive``1(IChannelSession,System.Boolean,``0)
      language: CSharp
      name:
        CSharp: ToggleTextChannelActive<T>(IChannelSession, Boolean, T)
        VB: ToggleTextChannelActive(Of T)(IChannelSession, Boolean, T)
      nameWithType:
        CSharp: EasyTextChannel.ToggleTextChannelActive<T>(IChannelSession, Boolean, T)
        VB: EasyTextChannel.ToggleTextChannelActive(Of T)(IChannelSession, Boolean, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive<T>(IChannelSession, System.Boolean, T)
        VB: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive(Of T)(IChannelSession, System.Boolean, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ToggleTextChannelActive
        path: ''
        startLine: 10287
      syntax:
        content:
          CSharp: public void ToggleTextChannelActive<T>(IChannelSession channelSession, bool join, T eventParameter)
          VB: Public Sub ToggleTextChannelActive(Of T)(channelSession As IChannelSession, join As Boolean, eventParameter As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: join
          type: System.Boolean
        - id: eventParameter
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged(System.Object,PropertyChangedEventArgs)
      commentId: M:EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged(System.Object,PropertyChangedEventArgs)
      language: CSharp
      name:
        CSharp: OnChannelTextPropertyChanged(Object, PropertyChangedEventArgs)
        VB: OnChannelTextPropertyChanged(Object, PropertyChangedEventArgs)
      nameWithType:
        CSharp: EasyTextChannel.OnChannelTextPropertyChanged(Object, PropertyChangedEventArgs)
        VB: EasyTextChannel.OnChannelTextPropertyChanged(Object, PropertyChangedEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged(System.Object, PropertyChangedEventArgs)
        VB: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged(System.Object, PropertyChangedEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnChannelTextPropertyChanged
        path: ''
        startLine: 10324
      syntax:
        content:
          CSharp: public void OnChannelTextPropertyChanged(object sender, PropertyChangedEventArgs propArgs)
          VB: Public Sub OnChannelTextPropertyChanged(sender As Object, propArgs As PropertyChangedEventArgs)
        parameters:
        - id: sender
          type: System.Object
        - id: propArgs
          type: PropertyChangedEventArgs
      overload: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyTextToSpeech
    commentId: T:EasyCodeForVivox.EasyTextToSpeech
    language: CSharp
    name:
      CSharp: EasyTextToSpeech
      VB: EasyTextToSpeech
    nameWithType:
      CSharp: EasyTextToSpeech
      VB: EasyTextToSpeech
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyTextToSpeech
      VB: EasyCodeForVivox.EasyTextToSpeech
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyTextToSpeech
      path: ''
      startLine: 10416
    syntax:
      content:
        CSharp: public class EasyTextToSpeech
        VB: Public Class EasyTextToSpeech
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyTextToSpeech.#ctor(EasyEvents,EasyEventsAsync)
      commentId: M:EasyCodeForVivox.EasyTextToSpeech.#ctor(EasyEvents,EasyEventsAsync)
      language: CSharp
      name:
        CSharp: EasyTextToSpeech(EasyEvents, EasyEventsAsync)
        VB: EasyTextToSpeech(EasyEvents, EasyEventsAsync)
      nameWithType:
        CSharp: EasyTextToSpeech.EasyTextToSpeech(EasyEvents, EasyEventsAsync)
        VB: EasyTextToSpeech.EasyTextToSpeech(EasyEvents, EasyEventsAsync)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextToSpeech.EasyTextToSpeech(EasyEvents, EasyEventsAsync)
        VB: EasyCodeForVivox.EasyTextToSpeech.EasyTextToSpeech(EasyEvents, EasyEventsAsync)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 10421
      syntax:
        content:
          CSharp: public EasyTextToSpeech(EasyEvents events, EasyEventsAsync eventsAsync)
          VB: Public Sub New(events As EasyEvents, eventsAsync As EasyEventsAsync)
        parameters:
        - id: events
          type: EasyEvents
        - id: eventsAsync
          type: EasyEventsAsync
      overload: EasyCodeForVivox.EasyTextToSpeech.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextToSpeech.MaleVoice
      commentId: P:EasyCodeForVivox.EasyTextToSpeech.MaleVoice
      language: CSharp
      name:
        CSharp: MaleVoice
        VB: MaleVoice
      nameWithType:
        CSharp: EasyTextToSpeech.MaleVoice
        VB: EasyTextToSpeech.MaleVoice
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextToSpeech.MaleVoice
        VB: EasyCodeForVivox.EasyTextToSpeech.MaleVoice
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: MaleVoice
        path: ''
        startLine: 10427
      syntax:
        content:
          CSharp: public string MaleVoice { get; }
          VB: Public ReadOnly Property MaleVoice As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.EasyTextToSpeech.MaleVoice*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice
      commentId: P:EasyCodeForVivox.EasyTextToSpeech.FemaleVoice
      language: CSharp
      name:
        CSharp: FemaleVoice
        VB: FemaleVoice
      nameWithType:
        CSharp: EasyTextToSpeech.FemaleVoice
        VB: EasyTextToSpeech.FemaleVoice
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice
        VB: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: FemaleVoice
        path: ''
        startLine: 10428
      syntax:
        content:
          CSharp: public string FemaleVoice { get; }
          VB: Public ReadOnly Property FemaleVoice As String
        parameters: []
        return:
          type: System.String
      overload: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: EasyCodeForVivox.EasyTextToSpeech.Subscribe(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyTextToSpeech.Subscribe(ILoginSession)
      language: CSharp
      name:
        CSharp: Subscribe(ILoginSession)
        VB: Subscribe(ILoginSession)
      nameWithType:
        CSharp: EasyTextToSpeech.Subscribe(ILoginSession)
        VB: EasyTextToSpeech.Subscribe(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextToSpeech.Subscribe(ILoginSession)
        VB: EasyCodeForVivox.EasyTextToSpeech.Subscribe(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Subscribe
        path: ''
        startLine: 10430
      syntax:
        content:
          CSharp: public void Subscribe(ILoginSession loginSession)
          VB: Public Sub Subscribe(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyTextToSpeech.Subscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe(ILoginSession)
      commentId: M:EasyCodeForVivox.EasyTextToSpeech.Unsubscribe(ILoginSession)
      language: CSharp
      name:
        CSharp: Unsubscribe(ILoginSession)
        VB: Unsubscribe(ILoginSession)
      nameWithType:
        CSharp: EasyTextToSpeech.Unsubscribe(ILoginSession)
        VB: EasyTextToSpeech.Unsubscribe(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe(ILoginSession)
        VB: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: Unsubscribe
        path: ''
        startLine: 10437
      syntax:
        content:
          CSharp: public void Unsubscribe(ILoginSession loginSession)
          VB: Public Sub Unsubscribe(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender(EasyCodeForVivox.VoiceGender,System.String)
      commentId: M:EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender(EasyCodeForVivox.VoiceGender,System.String)
      language: CSharp
      name:
        CSharp: ChooseVoiceGender(VoiceGender, String)
        VB: ChooseVoiceGender(VoiceGender, String)
      nameWithType:
        CSharp: EasyTextToSpeech.ChooseVoiceGender(VoiceGender, String)
        VB: EasyTextToSpeech.ChooseVoiceGender(VoiceGender, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender(EasyCodeForVivox.VoiceGender, System.String)
        VB: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender(EasyCodeForVivox.VoiceGender, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: ChooseVoiceGender
        path: ''
        startLine: 10448
      syntax:
        content:
          CSharp: public void ChooseVoiceGender(VoiceGender voiceGender, string userName)
          VB: Public Sub ChooseVoiceGender(voiceGender As VoiceGender, userName As String)
        parameters:
        - id: voiceGender
          type: EasyCodeForVivox.VoiceGender
        - id: userName
          type: System.String
      overload: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage(System.String,TTSDestination,ILoginSession)
      commentId: M:EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage(System.String,TTSDestination,ILoginSession)
      language: CSharp
      name:
        CSharp: PlayTTSMessage(String, TTSDestination, ILoginSession)
        VB: PlayTTSMessage(String, TTSDestination, ILoginSession)
      nameWithType:
        CSharp: EasyTextToSpeech.PlayTTSMessage(String, TTSDestination, ILoginSession)
        VB: EasyTextToSpeech.PlayTTSMessage(String, TTSDestination, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage(System.String, TTSDestination, ILoginSession)
        VB: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage(System.String, TTSDestination, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: PlayTTSMessage
        path: ''
        startLine: 10472
      syntax:
        content:
          CSharp: public void PlayTTSMessage(string message, TTSDestination destination, ILoginSession loginSession)
          VB: Public Sub PlayTTSMessage(message As String, destination As TTSDestination, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
        - id: destination
          type: TTSDestination
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.EasyUsers
    commentId: T:EasyCodeForVivox.EasyUsers
    language: CSharp
    name:
      CSharp: EasyUsers
      VB: EasyUsers
    nameWithType:
      CSharp: EasyUsers
      VB: EasyUsers
    qualifiedName:
      CSharp: EasyCodeForVivox.EasyUsers
      VB: EasyCodeForVivox.EasyUsers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox
    source:
      id: EasyUsers
      path: ''
      startLine: 10562
    syntax:
      content:
        CSharp: public class EasyUsers
        VB: Public Class EasyUsers
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.EasyUsers.#ctor(EasyEvents,EasyEventsAsync)
      commentId: M:EasyCodeForVivox.EasyUsers.#ctor(EasyEvents,EasyEventsAsync)
      language: CSharp
      name:
        CSharp: EasyUsers(EasyEvents, EasyEventsAsync)
        VB: EasyUsers(EasyEvents, EasyEventsAsync)
      nameWithType:
        CSharp: EasyUsers.EasyUsers(EasyEvents, EasyEventsAsync)
        VB: EasyUsers.EasyUsers(EasyEvents, EasyEventsAsync)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyUsers.EasyUsers(EasyEvents, EasyEventsAsync)
        VB: EasyCodeForVivox.EasyUsers.EasyUsers(EasyEvents, EasyEventsAsync)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: .ctor
        path: ''
        startLine: 10567
      syntax:
        content:
          CSharp: public EasyUsers(EasyEvents events, EasyEventsAsync eventsAsync)
          VB: Public Sub New(events As EasyEvents, eventsAsync As EasyEventsAsync)
        parameters:
        - id: events
          type: EasyEvents
        - id: eventsAsync
          type: EasyEventsAsync
      overload: EasyCodeForVivox.EasyUsers.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents(IChannelSession)
      language: CSharp
      name:
        CSharp: SubscribeToParticipantEvents(IChannelSession)
        VB: SubscribeToParticipantEvents(IChannelSession)
      nameWithType:
        CSharp: EasyUsers.SubscribeToParticipantEvents(IChannelSession)
        VB: EasyUsers.SubscribeToParticipantEvents(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents(IChannelSession)
        VB: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: SubscribeToParticipantEvents
        path: ''
        startLine: 10573
      syntax:
        content:
          CSharp: public void SubscribeToParticipantEvents(IChannelSession channelSession)
          VB: Public Sub SubscribeToParticipantEvents(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents(IChannelSession)
      commentId: M:EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents(IChannelSession)
      language: CSharp
      name:
        CSharp: UnsubscribeFromParticipantEvents(IChannelSession)
        VB: UnsubscribeFromParticipantEvents(IChannelSession)
      nameWithType:
        CSharp: EasyUsers.UnsubscribeFromParticipantEvents(IChannelSession)
        VB: EasyUsers.UnsubscribeFromParticipantEvents(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents(IChannelSession)
        VB: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: UnsubscribeFromParticipantEvents
        path: ''
        startLine: 10580
      syntax:
        content:
          CSharp: public void UnsubscribeFromParticipantEvents(IChannelSession channelSession)
          VB: Public Sub UnsubscribeFromParticipantEvents(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel(System.Object,KeyEventArg{System.String})
      commentId: M:EasyCodeForVivox.EasyUsers.OnUserJoinedChannel(System.Object,KeyEventArg{System.String})
      language: CSharp
      name:
        CSharp: OnUserJoinedChannel(Object, KeyEventArg<String>)
        VB: OnUserJoinedChannel(Object, KeyEventArg(Of String))
      nameWithType:
        CSharp: EasyUsers.OnUserJoinedChannel(Object, KeyEventArg<String>)
        VB: EasyUsers.OnUserJoinedChannel(Object, KeyEventArg(Of String))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel(System.Object, KeyEventArg<System.String>)
        VB: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel(System.Object, KeyEventArg(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserJoinedChannel
        path: ''
        startLine: 10588
      syntax:
        content:
          CSharp: public void OnUserJoinedChannel(object sender, KeyEventArg<string> keyArg)
          VB: Public Sub OnUserJoinedChannel(sender As Object, keyArg As KeyEventArg(Of String))
        parameters:
        - id: sender
          type: System.Object
        - id: keyArg
          type: KeyEventArg{System.String}
      overload: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyUsers.OnUserLeftChannel(System.Object,KeyEventArg{System.String})
      commentId: M:EasyCodeForVivox.EasyUsers.OnUserLeftChannel(System.Object,KeyEventArg{System.String})
      language: CSharp
      name:
        CSharp: OnUserLeftChannel(Object, KeyEventArg<String>)
        VB: OnUserLeftChannel(Object, KeyEventArg(Of String))
      nameWithType:
        CSharp: EasyUsers.OnUserLeftChannel(Object, KeyEventArg<String>)
        VB: EasyUsers.OnUserLeftChannel(Object, KeyEventArg(Of String))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyUsers.OnUserLeftChannel(System.Object, KeyEventArg<System.String>)
        VB: EasyCodeForVivox.EasyUsers.OnUserLeftChannel(System.Object, KeyEventArg(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserLeftChannel
        path: ''
        startLine: 10597
      syntax:
        content:
          CSharp: public void OnUserLeftChannel(object sender, KeyEventArg<string> keyArg)
          VB: Public Sub OnUserLeftChannel(sender As Object, keyArg As KeyEventArg(Of String))
        parameters:
        - id: sender
          type: System.Object
        - id: keyArg
          type: KeyEventArg{System.String}
      overload: EasyCodeForVivox.EasyUsers.OnUserLeftChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated(System.Object,ValueEventArg{System.String,IParticipant})
      commentId: M:EasyCodeForVivox.EasyUsers.OnUserValuesUpdated(System.Object,ValueEventArg{System.String,IParticipant})
      language: CSharp
      name:
        CSharp: OnUserValuesUpdated(Object, ValueEventArg<String, IParticipant>)
        VB: OnUserValuesUpdated(Object, ValueEventArg(Of String, IParticipant))
      nameWithType:
        CSharp: EasyUsers.OnUserValuesUpdated(Object, ValueEventArg<String, IParticipant>)
        VB: EasyUsers.OnUserValuesUpdated(Object, ValueEventArg(Of String, IParticipant))
      qualifiedName:
        CSharp: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated(System.Object, ValueEventArg<System.String, IParticipant>)
        VB: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated(System.Object, ValueEventArg(Of System.String, IParticipant))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox
      source:
        id: OnUserValuesUpdated
        path: ''
        startLine: 10607
      syntax:
        content:
          CSharp: public void OnUserValuesUpdated(object sender, ValueEventArg<string, IParticipant> valueArg)
          VB: Public Sub OnUserValuesUpdated(sender As Object, valueArg As ValueEventArg(Of String, IParticipant))
        parameters:
        - id: sender
          type: System.Object
        - id: valueArg
          type: ValueEventArg{System.String,IParticipant}
      overload: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: EasyCodeForVivox.DemoScene
  commentId: N:EasyCodeForVivox.DemoScene
  language: CSharp
  name:
    CSharp: EasyCodeForVivox.DemoScene
    VB: EasyCodeForVivox.DemoScene
  nameWithType:
    CSharp: EasyCodeForVivox.DemoScene
    VB: EasyCodeForVivox.DemoScene
  qualifiedName:
    CSharp: EasyCodeForVivox.DemoScene
    VB: EasyCodeForVivox.DemoScene
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: EasyCodeForVivox.DemoScene.PlayerInfo
    commentId: T:EasyCodeForVivox.DemoScene.PlayerInfo
    language: CSharp
    name:
      CSharp: PlayerInfo
      VB: PlayerInfo
    nameWithType:
      CSharp: PlayerInfo
      VB: PlayerInfo
    qualifiedName:
      CSharp: EasyCodeForVivox.DemoScene.PlayerInfo
      VB: EasyCodeForVivox.DemoScene.PlayerInfo
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.DemoScene
    source:
      id: PlayerInfo
      path: ''
      startLine: 491
    syntax:
      content:
        CSharp: 'public struct PlayerInfo : INetworkSerializable, IEquatable<PlayerInfo>'
        VB: >-
          Public Structure PlayerInfo

              Implements INetworkSerializable, IEquatable(Of PlayerInfo)
    implements:
    - INetworkSerializable
    - IEquatable{EasyCodeForVivox.DemoScene.PlayerInfo}
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: EasyCodeForVivox.DemoScene.PlayerInfo.playerName
      commentId: F:EasyCodeForVivox.DemoScene.PlayerInfo.playerName
      language: CSharp
      name:
        CSharp: playerName
        VB: playerName
      nameWithType:
        CSharp: PlayerInfo.playerName
        VB: PlayerInfo.playerName
      qualifiedName:
        CSharp: EasyCodeForVivox.DemoScene.PlayerInfo.playerName
        VB: EasyCodeForVivox.DemoScene.PlayerInfo.playerName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.DemoScene
      source:
        id: playerName
        path: ''
        startLine: 493
      syntax:
        content:
          CSharp: public FixedString32Bytes playerName
          VB: Public playerName As FixedString32Bytes
        return:
          type: FixedString32Bytes
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.DemoScene.PlayerInfo.playerId
      commentId: F:EasyCodeForVivox.DemoScene.PlayerInfo.playerId
      language: CSharp
      name:
        CSharp: playerId
        VB: playerId
      nameWithType:
        CSharp: PlayerInfo.playerId
        VB: PlayerInfo.playerId
      qualifiedName:
        CSharp: EasyCodeForVivox.DemoScene.PlayerInfo.playerId
        VB: EasyCodeForVivox.DemoScene.PlayerInfo.playerId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.DemoScene
      source:
        id: playerId
        path: ''
        startLine: 494
      syntax:
        content:
          CSharp: public ulong playerId
          VB: Public playerId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize``1(BufferSerializer{``0})
      commentId: M:EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize``1(BufferSerializer{``0})
      language: CSharp
      name:
        CSharp: NetworkSerialize<T>(BufferSerializer<T>)
        VB: NetworkSerialize(Of T)(BufferSerializer(Of T))
      nameWithType:
        CSharp: PlayerInfo.NetworkSerialize<T>(BufferSerializer<T>)
        VB: PlayerInfo.NetworkSerialize(Of T)(BufferSerializer(Of T))
      qualifiedName:
        CSharp: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize<T>(BufferSerializer<T>)
        VB: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize(Of T)(BufferSerializer(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.DemoScene
      source:
        id: NetworkSerialize
        path: ''
        startLine: 497
      syntax:
        content:
          CSharp: >-
            public void NetworkSerialize<T>(BufferSerializer<T> serializer)

                where T : IReaderWriter
          VB: Public Sub NetworkSerialize(Of T As IReaderWriter)(serializer As BufferSerializer(Of T))
        parameters:
        - id: serializer
          type: BufferSerializer{{T}}
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.DemoScene.PlayerInfo.Equals(EasyCodeForVivox.DemoScene.PlayerInfo)
      commentId: M:EasyCodeForVivox.DemoScene.PlayerInfo.Equals(EasyCodeForVivox.DemoScene.PlayerInfo)
      language: CSharp
      name:
        CSharp: Equals(PlayerInfo)
        VB: Equals(PlayerInfo)
      nameWithType:
        CSharp: PlayerInfo.Equals(PlayerInfo)
        VB: PlayerInfo.Equals(PlayerInfo)
      qualifiedName:
        CSharp: EasyCodeForVivox.DemoScene.PlayerInfo.Equals(EasyCodeForVivox.DemoScene.PlayerInfo)
        VB: EasyCodeForVivox.DemoScene.PlayerInfo.Equals(EasyCodeForVivox.DemoScene.PlayerInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.DemoScene
      source:
        id: Equals
        path: ''
        startLine: 502
      syntax:
        content:
          CSharp: public bool Equals(PlayerInfo other)
          VB: Public Function Equals(other As PlayerInfo) As Boolean
        parameters:
        - id: other
          type: EasyCodeForVivox.DemoScene.PlayerInfo
        return:
          type: System.Boolean
      overload: EasyCodeForVivox.DemoScene.PlayerInfo.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: EasyCodeForVivox.Events
  commentId: N:EasyCodeForVivox.Events
  language: CSharp
  name:
    CSharp: EasyCodeForVivox.Events
    VB: EasyCodeForVivox.Events
  nameWithType:
    CSharp: EasyCodeForVivox.Events
    VB: EasyCodeForVivox.Events
  qualifiedName:
    CSharp: EasyCodeForVivox.Events
    VB: EasyCodeForVivox.Events
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: EasyCodeForVivox.Events.EasyEvents
    commentId: T:EasyCodeForVivox.Events.EasyEvents
    language: CSharp
    name:
      CSharp: EasyEvents
      VB: EasyEvents
    nameWithType:
      CSharp: EasyEvents
      VB: EasyEvents
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.EasyEvents
      VB: EasyCodeForVivox.Events.EasyEvents
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: EasyEvents
      path: ''
      startLine: 2859
    syntax:
      content:
        CSharp: public class EasyEvents
        VB: Public Class EasyEvents
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.EasyEvents.#ctor(EasySettingsSO)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.#ctor(EasySettingsSO)
      language: CSharp
      name:
        CSharp: EasyEvents(EasySettingsSO)
        VB: EasyEvents(EasySettingsSO)
      nameWithType:
        CSharp: EasyEvents.EasyEvents(EasySettingsSO)
        VB: EasyEvents.EasyEvents(EasySettingsSO)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.EasyEvents(EasySettingsSO)
        VB: EasyCodeForVivox.Events.EasyEvents.EasyEvents(EasySettingsSO)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 2863
      syntax:
        content:
          CSharp: public EasyEvents(EasySettingsSO settings)
          VB: Public Sub New(settings As EasySettingsSO)
        parameters:
        - id: settings
          type: EasySettingsSO
      overload: EasyCodeForVivox.Events.EasyEvents.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LoggingIn
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LoggingIn
      language: CSharp
      name:
        CSharp: LoggingIn
        VB: LoggingIn
      nameWithType:
        CSharp: EasyEvents.LoggingIn
        VB: EasyEvents.LoggingIn
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LoggingIn
        VB: EasyCodeForVivox.Events.EasyEvents.LoggingIn
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggingIn
        path: ''
        startLine: 2871
      syntax:
        content:
          CSharp: public event Action<ILoginSession> LoggingIn
          VB: Public Event LoggingIn As Action(Of ILoginSession)
        return:
          type: Action{ILoginSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LoggedIn
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LoggedIn
      language: CSharp
      name:
        CSharp: LoggedIn
        VB: LoggedIn
      nameWithType:
        CSharp: EasyEvents.LoggedIn
        VB: EasyEvents.LoggedIn
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LoggedIn
        VB: EasyCodeForVivox.Events.EasyEvents.LoggedIn
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggedIn
        path: ''
        startLine: 2872
      syntax:
        content:
          CSharp: public event Action<ILoginSession> LoggedIn
          VB: Public Event LoggedIn As Action(Of ILoginSession)
        return:
          type: Action{ILoginSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LoggedOut
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LoggedOut
      language: CSharp
      name:
        CSharp: LoggedOut
        VB: LoggedOut
      nameWithType:
        CSharp: EasyEvents.LoggedOut
        VB: EasyEvents.LoggedOut
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LoggedOut
        VB: EasyCodeForVivox.Events.EasyEvents.LoggedOut
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggedOut
        path: ''
        startLine: 2873
      syntax:
        content:
          CSharp: public event Action<ILoginSession> LoggedOut
          VB: Public Event LoggedOut As Action(Of ILoginSession)
        return:
          type: Action{ILoginSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LoggingOut
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LoggingOut
      language: CSharp
      name:
        CSharp: LoggingOut
        VB: LoggingOut
      nameWithType:
        CSharp: EasyEvents.LoggingOut
        VB: EasyEvents.LoggingOut
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LoggingOut
        VB: EasyCodeForVivox.Events.EasyEvents.LoggingOut
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggingOut
        path: ''
        startLine: 2874
      syntax:
        content:
          CSharp: public event Action<ILoginSession> LoggingOut
          VB: Public Event LoggingOut As Action(Of ILoginSession)
        return:
          type: Action{ILoginSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LoginAdded
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LoginAdded
      language: CSharp
      name:
        CSharp: LoginAdded
        VB: LoginAdded
      nameWithType:
        CSharp: EasyEvents.LoginAdded
        VB: EasyEvents.LoginAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LoginAdded
        VB: EasyCodeForVivox.Events.EasyEvents.LoginAdded
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoginAdded
        path: ''
        startLine: 2876
      syntax:
        content:
          CSharp: public event Action<AccountId> LoginAdded
          VB: Public Event LoginAdded As Action(Of AccountId)
        return:
          type: Action{AccountId}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LoginRemoved
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LoginRemoved
      language: CSharp
      name:
        CSharp: LoginRemoved
        VB: LoginRemoved
      nameWithType:
        CSharp: EasyEvents.LoginRemoved
        VB: EasyEvents.LoginRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LoginRemoved
        VB: EasyCodeForVivox.Events.EasyEvents.LoginRemoved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoginRemoved
        path: ''
        startLine: 2877
      syntax:
        content:
          CSharp: public event Action<AccountId> LoginRemoved
          VB: Public Event LoginRemoved As Action(Of AccountId)
        return:
          type: Action{AccountId}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LoginUpdated
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LoginUpdated
      language: CSharp
      name:
        CSharp: LoginUpdated
        VB: LoginUpdated
      nameWithType:
        CSharp: EasyEvents.LoginUpdated
        VB: EasyEvents.LoginUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LoginUpdated
        VB: EasyCodeForVivox.Events.EasyEvents.LoginUpdated
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoginUpdated
        path: ''
        startLine: 2878
      syntax:
        content:
          CSharp: public event Action<ILoginSession> LoginUpdated
          VB: Public Event LoginUpdated As Action(Of ILoginSession)
        return:
          type: Action{ILoginSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.ChannelConnecting
      commentId: E:EasyCodeForVivox.Events.EasyEvents.ChannelConnecting
      language: CSharp
      name:
        CSharp: ChannelConnecting
        VB: ChannelConnecting
      nameWithType:
        CSharp: EasyEvents.ChannelConnecting
        VB: EasyEvents.ChannelConnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.ChannelConnecting
        VB: EasyCodeForVivox.Events.EasyEvents.ChannelConnecting
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelConnecting
        path: ''
        startLine: 2885
      syntax:
        content:
          CSharp: public event Action<IChannelSession> ChannelConnecting
          VB: Public Event ChannelConnecting As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.ChannelConnected
      commentId: E:EasyCodeForVivox.Events.EasyEvents.ChannelConnected
      language: CSharp
      name:
        CSharp: ChannelConnected
        VB: ChannelConnected
      nameWithType:
        CSharp: EasyEvents.ChannelConnected
        VB: EasyEvents.ChannelConnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.ChannelConnected
        VB: EasyCodeForVivox.Events.EasyEvents.ChannelConnected
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelConnected
        path: ''
        startLine: 2886
      syntax:
        content:
          CSharp: public event Action<IChannelSession> ChannelConnected
          VB: Public Event ChannelConnected As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.ChannelDisconnecting
      commentId: E:EasyCodeForVivox.Events.EasyEvents.ChannelDisconnecting
      language: CSharp
      name:
        CSharp: ChannelDisconnecting
        VB: ChannelDisconnecting
      nameWithType:
        CSharp: EasyEvents.ChannelDisconnecting
        VB: EasyEvents.ChannelDisconnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.ChannelDisconnecting
        VB: EasyCodeForVivox.Events.EasyEvents.ChannelDisconnecting
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelDisconnecting
        path: ''
        startLine: 2887
      syntax:
        content:
          CSharp: public event Action<IChannelSession> ChannelDisconnecting
          VB: Public Event ChannelDisconnecting As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.ChannelDisconnected
      commentId: E:EasyCodeForVivox.Events.EasyEvents.ChannelDisconnected
      language: CSharp
      name:
        CSharp: ChannelDisconnected
        VB: ChannelDisconnected
      nameWithType:
        CSharp: EasyEvents.ChannelDisconnected
        VB: EasyEvents.ChannelDisconnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.ChannelDisconnected
        VB: EasyCodeForVivox.Events.EasyEvents.ChannelDisconnected
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelDisconnected
        path: ''
        startLine: 2888
      syntax:
        content:
          CSharp: public event Action<IChannelSession> ChannelDisconnected
          VB: Public Event ChannelDisconnected As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.TextChannelConnecting
      commentId: E:EasyCodeForVivox.Events.EasyEvents.TextChannelConnecting
      language: CSharp
      name:
        CSharp: TextChannelConnecting
        VB: TextChannelConnecting
      nameWithType:
        CSharp: EasyEvents.TextChannelConnecting
        VB: EasyEvents.TextChannelConnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.TextChannelConnecting
        VB: EasyCodeForVivox.Events.EasyEvents.TextChannelConnecting
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelConnecting
        path: ''
        startLine: 2890
      syntax:
        content:
          CSharp: public event Action<IChannelSession> TextChannelConnecting
          VB: Public Event TextChannelConnecting As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.TextChannelConnected
      commentId: E:EasyCodeForVivox.Events.EasyEvents.TextChannelConnected
      language: CSharp
      name:
        CSharp: TextChannelConnected
        VB: TextChannelConnected
      nameWithType:
        CSharp: EasyEvents.TextChannelConnected
        VB: EasyEvents.TextChannelConnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.TextChannelConnected
        VB: EasyCodeForVivox.Events.EasyEvents.TextChannelConnected
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelConnected
        path: ''
        startLine: 2891
      syntax:
        content:
          CSharp: public event Action<IChannelSession> TextChannelConnected
          VB: Public Event TextChannelConnected As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnecting
      commentId: E:EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnecting
      language: CSharp
      name:
        CSharp: TextChannelDisconnecting
        VB: TextChannelDisconnecting
      nameWithType:
        CSharp: EasyEvents.TextChannelDisconnecting
        VB: EasyEvents.TextChannelDisconnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnecting
        VB: EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnecting
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelDisconnecting
        path: ''
        startLine: 2892
      syntax:
        content:
          CSharp: public event Action<IChannelSession> TextChannelDisconnecting
          VB: Public Event TextChannelDisconnecting As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnected
      commentId: E:EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnected
      language: CSharp
      name:
        CSharp: TextChannelDisconnected
        VB: TextChannelDisconnected
      nameWithType:
        CSharp: EasyEvents.TextChannelDisconnected
        VB: EasyEvents.TextChannelDisconnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnected
        VB: EasyCodeForVivox.Events.EasyEvents.TextChannelDisconnected
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelDisconnected
        path: ''
        startLine: 2893
      syntax:
        content:
          CSharp: public event Action<IChannelSession> TextChannelDisconnected
          VB: Public Event TextChannelDisconnected As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioChannelConnecting
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioChannelConnecting
      language: CSharp
      name:
        CSharp: AudioChannelConnecting
        VB: AudioChannelConnecting
      nameWithType:
        CSharp: EasyEvents.AudioChannelConnecting
        VB: EasyEvents.AudioChannelConnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioChannelConnecting
        VB: EasyCodeForVivox.Events.EasyEvents.AudioChannelConnecting
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelConnecting
        path: ''
        startLine: 2895
      syntax:
        content:
          CSharp: public event Action<IChannelSession> AudioChannelConnecting
          VB: Public Event AudioChannelConnecting As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioChannelConnected
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioChannelConnected
      language: CSharp
      name:
        CSharp: AudioChannelConnected
        VB: AudioChannelConnected
      nameWithType:
        CSharp: EasyEvents.AudioChannelConnected
        VB: EasyEvents.AudioChannelConnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioChannelConnected
        VB: EasyCodeForVivox.Events.EasyEvents.AudioChannelConnected
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelConnected
        path: ''
        startLine: 2896
      syntax:
        content:
          CSharp: public event Action<IChannelSession> AudioChannelConnected
          VB: Public Event AudioChannelConnected As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnecting
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnecting
      language: CSharp
      name:
        CSharp: AudioChannelDisconnecting
        VB: AudioChannelDisconnecting
      nameWithType:
        CSharp: EasyEvents.AudioChannelDisconnecting
        VB: EasyEvents.AudioChannelDisconnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnecting
        VB: EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnecting
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelDisconnecting
        path: ''
        startLine: 2897
      syntax:
        content:
          CSharp: public event Action<IChannelSession> AudioChannelDisconnecting
          VB: Public Event AudioChannelDisconnecting As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnected
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnected
      language: CSharp
      name:
        CSharp: AudioChannelDisconnected
        VB: AudioChannelDisconnected
      nameWithType:
        CSharp: EasyEvents.AudioChannelDisconnected
        VB: EasyEvents.AudioChannelDisconnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnected
        VB: EasyCodeForVivox.Events.EasyEvents.AudioChannelDisconnected
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelDisconnected
        path: ''
        startLine: 2898
      syntax:
        content:
          CSharp: public event Action<IChannelSession> AudioChannelDisconnected
          VB: Public Event AudioChannelDisconnected As Action(Of IChannelSession)
        return:
          type: Action{IChannelSession}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.ChannelMesssageSent
      commentId: E:EasyCodeForVivox.Events.EasyEvents.ChannelMesssageSent
      language: CSharp
      name:
        CSharp: ChannelMesssageSent
        VB: ChannelMesssageSent
      nameWithType:
        CSharp: EasyEvents.ChannelMesssageSent
        VB: EasyEvents.ChannelMesssageSent
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.ChannelMesssageSent
        VB: EasyCodeForVivox.Events.EasyEvents.ChannelMesssageSent
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelMesssageSent
        path: ''
        startLine: 2905
      syntax:
        content:
          CSharp: public event Action ChannelMesssageSent
          VB: Public Event ChannelMesssageSent As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.ChannelMessageRecieved
      commentId: E:EasyCodeForVivox.Events.EasyEvents.ChannelMessageRecieved
      language: CSharp
      name:
        CSharp: ChannelMessageRecieved
        VB: ChannelMessageRecieved
      nameWithType:
        CSharp: EasyEvents.ChannelMessageRecieved
        VB: EasyEvents.ChannelMessageRecieved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.ChannelMessageRecieved
        VB: EasyCodeForVivox.Events.EasyEvents.ChannelMessageRecieved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelMessageRecieved
        path: ''
        startLine: 2906
      syntax:
        content:
          CSharp: public event Action<IChannelTextMessage> ChannelMessageRecieved
          VB: Public Event ChannelMessageRecieved As Action(Of IChannelTextMessage)
        return:
          type: Action{IChannelTextMessage}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.EventMessageRecieved
      commentId: E:EasyCodeForVivox.Events.EasyEvents.EventMessageRecieved
      language: CSharp
      name:
        CSharp: EventMessageRecieved
        VB: EventMessageRecieved
      nameWithType:
        CSharp: EasyEvents.EventMessageRecieved
        VB: EasyEvents.EventMessageRecieved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.EventMessageRecieved
        VB: EasyCodeForVivox.Events.EasyEvents.EventMessageRecieved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: EventMessageRecieved
        path: ''
        startLine: 2907
      syntax:
        content:
          CSharp: public event Action<IChannelTextMessage> EventMessageRecieved
          VB: Public Event EventMessageRecieved As Action(Of IChannelTextMessage)
        return:
          type: Action{IChannelTextMessage}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.DirectMesssageSent
      commentId: E:EasyCodeForVivox.Events.EasyEvents.DirectMesssageSent
      language: CSharp
      name:
        CSharp: DirectMesssageSent
        VB: DirectMesssageSent
      nameWithType:
        CSharp: EasyEvents.DirectMesssageSent
        VB: EasyEvents.DirectMesssageSent
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.DirectMesssageSent
        VB: EasyCodeForVivox.Events.EasyEvents.DirectMesssageSent
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: DirectMesssageSent
        path: ''
        startLine: 2909
      syntax:
        content:
          CSharp: public event Action DirectMesssageSent
          VB: Public Event DirectMesssageSent As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.DirectMessageRecieved
      commentId: E:EasyCodeForVivox.Events.EasyEvents.DirectMessageRecieved
      language: CSharp
      name:
        CSharp: DirectMessageRecieved
        VB: DirectMessageRecieved
      nameWithType:
        CSharp: EasyEvents.DirectMessageRecieved
        VB: EasyEvents.DirectMessageRecieved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.DirectMessageRecieved
        VB: EasyCodeForVivox.Events.EasyEvents.DirectMessageRecieved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: DirectMessageRecieved
        path: ''
        startLine: 2910
      syntax:
        content:
          CSharp: public event Action<IDirectedTextMessage> DirectMessageRecieved
          VB: Public Event DirectMessageRecieved As Action(Of IDirectedTextMessage)
        return:
          type: Action{IDirectedTextMessage}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.DirectMessageFailed
      commentId: E:EasyCodeForVivox.Events.EasyEvents.DirectMessageFailed
      language: CSharp
      name:
        CSharp: DirectMessageFailed
        VB: DirectMessageFailed
      nameWithType:
        CSharp: EasyEvents.DirectMessageFailed
        VB: EasyEvents.DirectMessageFailed
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.DirectMessageFailed
        VB: EasyCodeForVivox.Events.EasyEvents.DirectMessageFailed
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: DirectMessageFailed
        path: ''
        startLine: 2911
      syntax:
        content:
          CSharp: public event Action<IFailedDirectedTextMessage> DirectMessageFailed
          VB: Public Event DirectMessageFailed As Action(Of IFailedDirectedTextMessage)
        return:
          type: Action{IFailedDirectedTextMessage}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserJoinedChannel
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserJoinedChannel
      language: CSharp
      name:
        CSharp: UserJoinedChannel
        VB: UserJoinedChannel
      nameWithType:
        CSharp: EasyEvents.UserJoinedChannel
        VB: EasyEvents.UserJoinedChannel
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserJoinedChannel
        VB: EasyCodeForVivox.Events.EasyEvents.UserJoinedChannel
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserJoinedChannel
        path: ''
        startLine: 2918
      syntax:
        content:
          CSharp: public event Action<IParticipant> UserJoinedChannel
          VB: Public Event UserJoinedChannel As Action(Of IParticipant)
        return:
          type: Action{IParticipant}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserLeftChannel
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserLeftChannel
      language: CSharp
      name:
        CSharp: UserLeftChannel
        VB: UserLeftChannel
      nameWithType:
        CSharp: EasyEvents.UserLeftChannel
        VB: EasyEvents.UserLeftChannel
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserLeftChannel
        VB: EasyCodeForVivox.Events.EasyEvents.UserLeftChannel
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserLeftChannel
        path: ''
        startLine: 2919
      syntax:
        content:
          CSharp: public event Action<IParticipant> UserLeftChannel
          VB: Public Event UserLeftChannel As Action(Of IParticipant)
        return:
          type: Action{IParticipant}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserValuesUpdated
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserValuesUpdated
      language: CSharp
      name:
        CSharp: UserValuesUpdated
        VB: UserValuesUpdated
      nameWithType:
        CSharp: EasyEvents.UserValuesUpdated
        VB: EasyEvents.UserValuesUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserValuesUpdated
        VB: EasyCodeForVivox.Events.EasyEvents.UserValuesUpdated
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserValuesUpdated
        path: ''
        startLine: 2920
      syntax:
        content:
          CSharp: public event Action<IParticipant> UserValuesUpdated
          VB: Public Event UserValuesUpdated As Action(Of IParticipant)
        return:
          type: Action{IParticipant}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LocalUserMuted
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LocalUserMuted
      language: CSharp
      name:
        CSharp: LocalUserMuted
        VB: LocalUserMuted
      nameWithType:
        CSharp: EasyEvents.LocalUserMuted
        VB: EasyEvents.LocalUserMuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LocalUserMuted
        VB: EasyCodeForVivox.Events.EasyEvents.LocalUserMuted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LocalUserMuted
        path: ''
        startLine: 2927
      syntax:
        content:
          CSharp: public event Action LocalUserMuted
          VB: Public Event LocalUserMuted As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.LocalUserUnmuted
      commentId: E:EasyCodeForVivox.Events.EasyEvents.LocalUserUnmuted
      language: CSharp
      name:
        CSharp: LocalUserUnmuted
        VB: LocalUserUnmuted
      nameWithType:
        CSharp: EasyEvents.LocalUserUnmuted
        VB: EasyEvents.LocalUserUnmuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.LocalUserUnmuted
        VB: EasyCodeForVivox.Events.EasyEvents.LocalUserUnmuted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LocalUserUnmuted
        path: ''
        startLine: 2928
      syntax:
        content:
          CSharp: public event Action LocalUserUnmuted
          VB: Public Event LocalUserUnmuted As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserMuted
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserMuted
      language: CSharp
      name:
        CSharp: UserMuted
        VB: UserMuted
      nameWithType:
        CSharp: EasyEvents.UserMuted
        VB: EasyEvents.UserMuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserMuted
        VB: EasyCodeForVivox.Events.EasyEvents.UserMuted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserMuted
        path: ''
        startLine: 2929
      syntax:
        content:
          CSharp: public event Action<IParticipant> UserMuted
          VB: Public Event UserMuted As Action(Of IParticipant)
        return:
          type: Action{IParticipant}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserUnmuted
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserUnmuted
      language: CSharp
      name:
        CSharp: UserUnmuted
        VB: UserUnmuted
      nameWithType:
        CSharp: EasyEvents.UserUnmuted
        VB: EasyEvents.UserUnmuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserUnmuted
        VB: EasyCodeForVivox.Events.EasyEvents.UserUnmuted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserUnmuted
        path: ''
        startLine: 2930
      syntax:
        content:
          CSharp: public event Action<IParticipant> UserUnmuted
          VB: Public Event UserUnmuted As Action(Of IParticipant)
        return:
          type: Action{IParticipant}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserCrossMuted
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserCrossMuted
      language: CSharp
      name:
        CSharp: UserCrossMuted
        VB: UserCrossMuted
      nameWithType:
        CSharp: EasyEvents.UserCrossMuted
        VB: EasyEvents.UserCrossMuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserCrossMuted
        VB: EasyCodeForVivox.Events.EasyEvents.UserCrossMuted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserCrossMuted
        path: ''
        startLine: 2932
      syntax:
        content:
          CSharp: public event Action<AccountId> UserCrossMuted
          VB: Public Event UserCrossMuted As Action(Of AccountId)
        return:
          type: Action{AccountId}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserCrossUnmuted
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserCrossUnmuted
      language: CSharp
      name:
        CSharp: UserCrossUnmuted
        VB: UserCrossUnmuted
      nameWithType:
        CSharp: EasyEvents.UserCrossUnmuted
        VB: EasyEvents.UserCrossUnmuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserCrossUnmuted
        VB: EasyCodeForVivox.Events.EasyEvents.UserCrossUnmuted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserCrossUnmuted
        path: ''
        startLine: 2933
      syntax:
        content:
          CSharp: public event Action<AccountId> UserCrossUnmuted
          VB: Public Event UserCrossUnmuted As Action(Of AccountId)
        return:
          type: Action{AccountId}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserSpeaking
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserSpeaking
      language: CSharp
      name:
        CSharp: UserSpeaking
        VB: UserSpeaking
      nameWithType:
        CSharp: EasyEvents.UserSpeaking
        VB: EasyEvents.UserSpeaking
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserSpeaking
        VB: EasyCodeForVivox.Events.EasyEvents.UserSpeaking
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserSpeaking
        path: ''
        startLine: 2935
      syntax:
        content:
          CSharp: public event Action<IParticipant> UserSpeaking
          VB: Public Event UserSpeaking As Action(Of IParticipant)
        return:
          type: Action{IParticipant}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.UserNotSpeaking
      commentId: E:EasyCodeForVivox.Events.EasyEvents.UserNotSpeaking
      language: CSharp
      name:
        CSharp: UserNotSpeaking
        VB: UserNotSpeaking
      nameWithType:
        CSharp: EasyEvents.UserNotSpeaking
        VB: EasyEvents.UserNotSpeaking
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.UserNotSpeaking
        VB: EasyCodeForVivox.Events.EasyEvents.UserNotSpeaking
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserNotSpeaking
        path: ''
        startLine: 2936
      syntax:
        content:
          CSharp: public event Action<IParticipant> UserNotSpeaking
          VB: Public Event UserNotSpeaking As Action(Of IParticipant)
        return:
          type: Action{IParticipant}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceAdded
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceAdded
      language: CSharp
      name:
        CSharp: AudioInputDeviceAdded
        VB: AudioInputDeviceAdded
      nameWithType:
        CSharp: EasyEvents.AudioInputDeviceAdded
        VB: EasyEvents.AudioInputDeviceAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceAdded
        VB: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceAdded
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioInputDeviceAdded
        path: ''
        startLine: 2943
      syntax:
        content:
          CSharp: public event Action<IAudioDevice> AudioInputDeviceAdded
          VB: Public Event AudioInputDeviceAdded As Action(Of IAudioDevice)
        return:
          type: Action{IAudioDevice}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceRemoved
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceRemoved
      language: CSharp
      name:
        CSharp: AudioInputDeviceRemoved
        VB: AudioInputDeviceRemoved
      nameWithType:
        CSharp: EasyEvents.AudioInputDeviceRemoved
        VB: EasyEvents.AudioInputDeviceRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceRemoved
        VB: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceRemoved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioInputDeviceRemoved
        path: ''
        startLine: 2944
      syntax:
        content:
          CSharp: public event Action<IAudioDevice> AudioInputDeviceRemoved
          VB: Public Event AudioInputDeviceRemoved As Action(Of IAudioDevice)
        return:
          type: Action{IAudioDevice}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceUpdated
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceUpdated
      language: CSharp
      name:
        CSharp: AudioInputDeviceUpdated
        VB: AudioInputDeviceUpdated
      nameWithType:
        CSharp: EasyEvents.AudioInputDeviceUpdated
        VB: EasyEvents.AudioInputDeviceUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceUpdated
        VB: EasyCodeForVivox.Events.EasyEvents.AudioInputDeviceUpdated
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioInputDeviceUpdated
        path: ''
        startLine: 2945
      syntax:
        content:
          CSharp: public event Action<IAudioDevice> AudioInputDeviceUpdated
          VB: Public Event AudioInputDeviceUpdated As Action(Of IAudioDevice)
        return:
          type: Action{IAudioDevice}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceAdded
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceAdded
      language: CSharp
      name:
        CSharp: AudioOutputDeviceAdded
        VB: AudioOutputDeviceAdded
      nameWithType:
        CSharp: EasyEvents.AudioOutputDeviceAdded
        VB: EasyEvents.AudioOutputDeviceAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceAdded
        VB: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceAdded
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioOutputDeviceAdded
        path: ''
        startLine: 2947
      syntax:
        content:
          CSharp: public event Action<IAudioDevice> AudioOutputDeviceAdded
          VB: Public Event AudioOutputDeviceAdded As Action(Of IAudioDevice)
        return:
          type: Action{IAudioDevice}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceRemoved
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceRemoved
      language: CSharp
      name:
        CSharp: AudioOutputDeviceRemoved
        VB: AudioOutputDeviceRemoved
      nameWithType:
        CSharp: EasyEvents.AudioOutputDeviceRemoved
        VB: EasyEvents.AudioOutputDeviceRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceRemoved
        VB: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceRemoved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioOutputDeviceRemoved
        path: ''
        startLine: 2948
      syntax:
        content:
          CSharp: public event Action<IAudioDevice> AudioOutputDeviceRemoved
          VB: Public Event AudioOutputDeviceRemoved As Action(Of IAudioDevice)
        return:
          type: Action{IAudioDevice}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceUpdated
      commentId: E:EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceUpdated
      language: CSharp
      name:
        CSharp: AudioOutputDeviceUpdated
        VB: AudioOutputDeviceUpdated
      nameWithType:
        CSharp: EasyEvents.AudioOutputDeviceUpdated
        VB: EasyEvents.AudioOutputDeviceUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceUpdated
        VB: EasyCodeForVivox.Events.EasyEvents.AudioOutputDeviceUpdated
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioOutputDeviceUpdated
        path: ''
        startLine: 2949
      syntax:
        content:
          CSharp: public event Action<IAudioDevice> AudioOutputDeviceUpdated
          VB: Public Event AudioOutputDeviceUpdated As Action(Of IAudioDevice)
        return:
          type: Action{IAudioDevice}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.TTSMessageAdded
      commentId: E:EasyCodeForVivox.Events.EasyEvents.TTSMessageAdded
      language: CSharp
      name:
        CSharp: TTSMessageAdded
        VB: TTSMessageAdded
      nameWithType:
        CSharp: EasyEvents.TTSMessageAdded
        VB: EasyEvents.TTSMessageAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.TTSMessageAdded
        VB: EasyCodeForVivox.Events.EasyEvents.TTSMessageAdded
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TTSMessageAdded
        path: ''
        startLine: 2955
      syntax:
        content:
          CSharp: public event Action<ITTSMessageQueueEventArgs> TTSMessageAdded
          VB: Public Event TTSMessageAdded As Action(Of ITTSMessageQueueEventArgs)
        return:
          type: Action{ITTSMessageQueueEventArgs}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.TTSMessageRemoved
      commentId: E:EasyCodeForVivox.Events.EasyEvents.TTSMessageRemoved
      language: CSharp
      name:
        CSharp: TTSMessageRemoved
        VB: TTSMessageRemoved
      nameWithType:
        CSharp: EasyEvents.TTSMessageRemoved
        VB: EasyEvents.TTSMessageRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.TTSMessageRemoved
        VB: EasyCodeForVivox.Events.EasyEvents.TTSMessageRemoved
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TTSMessageRemoved
        path: ''
        startLine: 2956
      syntax:
        content:
          CSharp: public event Action<ITTSMessageQueueEventArgs> TTSMessageRemoved
          VB: Public Event TTSMessageRemoved As Action(Of ITTSMessageQueueEventArgs)
        return:
          type: Action{ITTSMessageQueueEventArgs}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.TTSMessageUpdated
      commentId: E:EasyCodeForVivox.Events.EasyEvents.TTSMessageUpdated
      language: CSharp
      name:
        CSharp: TTSMessageUpdated
        VB: TTSMessageUpdated
      nameWithType:
        CSharp: EasyEvents.TTSMessageUpdated
        VB: EasyEvents.TTSMessageUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.TTSMessageUpdated
        VB: EasyCodeForVivox.Events.EasyEvents.TTSMessageUpdated
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TTSMessageUpdated
        path: ''
        startLine: 2957
      syntax:
        content:
          CSharp: public event Action<ITTSMessageQueueEventArgs> TTSMessageUpdated
          VB: Public Event TTSMessageUpdated As Action(Of ITTSMessageQueueEventArgs)
        return:
          type: Action{ITTSMessageQueueEventArgs}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke``2(Enum,``0,``1)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke``2(Enum,``0,``1)
      language: CSharp
      name:
        CSharp: CreateDelegateAndInvoke<T1, T2>(Enum, T1, T2)
        VB: CreateDelegateAndInvoke(Of T1, T2)(Enum, T1, T2)
      nameWithType:
        CSharp: EasyEvents.CreateDelegateAndInvoke<T1, T2>(Enum, T1, T2)
        VB: EasyEvents.CreateDelegateAndInvoke(Of T1, T2)(Enum, T1, T2)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke<T1, T2>(Enum, T1, T2)
        VB: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke(Of T1, T2)(Enum, T1, T2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: CreateDelegateAndInvoke
        path: ''
        startLine: 2963
      syntax:
        content:
          CSharp: public void CreateDelegateAndInvoke<T1, T2>(Enum eventKey, T1 value1, T2 value2)
          VB: Public Sub CreateDelegateAndInvoke(Of T1, T2)(eventKey As  Enum, value1 As T1, value2 As T2)
        parameters:
        - id: eventKey
          type: Enum
        - id: value1
          type: '{T1}'
        - id: value2
          type: '{T2}'
        typeParameters:
        - id: T1
        - id: T2
      overload: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.InvokeMethods(Enum)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.InvokeMethods(Enum)
      language: CSharp
      name:
        CSharp: InvokeMethods(Enum)
        VB: InvokeMethods(Enum)
      nameWithType:
        CSharp: EasyEvents.InvokeMethods(Enum)
        VB: EasyEvents.InvokeMethods(Enum)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.InvokeMethods(Enum)
        VB: EasyCodeForVivox.Events.EasyEvents.InvokeMethods(Enum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: InvokeMethods
        path: ''
        startLine: 2987
      syntax:
        content:
          CSharp: public void InvokeMethods(Enum eventKey)
          VB: Public Sub InvokeMethods(eventKey As  Enum)
        parameters:
        - id: eventKey
          type: Enum
      overload: EasyCodeForVivox.Events.EasyEvents.InvokeMethods*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.InvokeMethods``1(Enum,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.InvokeMethods``1(Enum,``0)
      language: CSharp
      name:
        CSharp: InvokeMethods<T>(Enum, T)
        VB: InvokeMethods(Of T)(Enum, T)
      nameWithType:
        CSharp: EasyEvents.InvokeMethods<T>(Enum, T)
        VB: EasyEvents.InvokeMethods(Of T)(Enum, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.InvokeMethods<T>(Enum, T)
        VB: EasyCodeForVivox.Events.EasyEvents.InvokeMethods(Of T)(Enum, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: InvokeMethods
        path: ''
        startLine: 3008
      syntax:
        content:
          CSharp: public void InvokeMethods<T>(Enum eventKey, T value)
          VB: Public Sub InvokeMethods(Of T)(eventKey As  Enum, value As T)
        parameters:
        - id: eventKey
          type: Enum
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.InvokeMethods*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.InvokeMethods``2(Enum,``0,``1)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.InvokeMethods``2(Enum,``0,``1)
      language: CSharp
      name:
        CSharp: InvokeMethods<T1, T2>(Enum, T1, T2)
        VB: InvokeMethods(Of T1, T2)(Enum, T1, T2)
      nameWithType:
        CSharp: EasyEvents.InvokeMethods<T1, T2>(Enum, T1, T2)
        VB: EasyEvents.InvokeMethods(Of T1, T2)(Enum, T1, T2)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.InvokeMethods<T1, T2>(Enum, T1, T2)
        VB: EasyCodeForVivox.Events.EasyEvents.InvokeMethods(Of T1, T2)(Enum, T1, T2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: InvokeMethods
        path: ''
        startLine: 3029
      syntax:
        content:
          CSharp: public void InvokeMethods<T1, T2>(Enum eventKey, T1 value1, T2 value2)
          VB: Public Sub InvokeMethods(Of T1, T2)(eventKey As  Enum, value1 As T1, value2 As T2)
        parameters:
        - id: eventKey
          type: Enum
        - id: value1
          type: '{T1}'
        - id: value2
          type: '{T2}'
        typeParameters:
        - id: T1
        - id: T2
      overload: EasyCodeForVivox.Events.EasyEvents.InvokeMethods*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggingIn(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggingIn(ILoginSession)
        VB: OnLoggingIn(ILoginSession)
      nameWithType:
        CSharp: EasyEvents.OnLoggingIn(ILoginSession)
        VB: EasyEvents.OnLoggingIn(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn(ILoginSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggingIn
        path: ''
        startLine: 3054
      syntax:
        content:
          CSharp: public void OnLoggingIn(ILoginSession loginSession)
          VB: Public Sub OnLoggingIn(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggingIn``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggingIn<T>(ILoginSession, T)
        VB: OnLoggingIn(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEvents.OnLoggingIn<T>(ILoginSession, T)
        VB: EasyEvents.OnLoggingIn(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggingIn
        path: ''
        startLine: 3072
      syntax:
        content:
          CSharp: public void OnLoggingIn<T>(ILoginSession loginSession, T value)
          VB: Public Sub OnLoggingIn(Of T)(loginSession As ILoginSession, value As T)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggedIn(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggedIn(ILoginSession)
        VB: OnLoggedIn(ILoginSession)
      nameWithType:
        CSharp: EasyEvents.OnLoggedIn(ILoginSession)
        VB: EasyEvents.OnLoggedIn(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn(ILoginSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggedIn
        path: ''
        startLine: 3089
      syntax:
        content:
          CSharp: public void OnLoggedIn(ILoginSession loginSession)
          VB: Public Sub OnLoggedIn(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggedIn``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggedIn<T>(ILoginSession, T)
        VB: OnLoggedIn(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEvents.OnLoggedIn<T>(ILoginSession, T)
        VB: EasyEvents.OnLoggedIn(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggedIn
        path: ''
        startLine: 3107
      syntax:
        content:
          CSharp: public void OnLoggedIn<T>(ILoginSession loginSession, T value)
          VB: Public Sub OnLoggedIn(Of T)(loginSession As ILoginSession, value As T)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggingOut(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggingOut(ILoginSession)
        VB: OnLoggingOut(ILoginSession)
      nameWithType:
        CSharp: EasyEvents.OnLoggingOut(ILoginSession)
        VB: EasyEvents.OnLoggingOut(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut(ILoginSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggingOut
        path: ''
        startLine: 3126
      syntax:
        content:
          CSharp: public void OnLoggingOut(ILoginSession loginSession)
          VB: Public Sub OnLoggingOut(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggingOut``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggingOut<T>(ILoginSession, T)
        VB: OnLoggingOut(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEvents.OnLoggingOut<T>(ILoginSession, T)
        VB: EasyEvents.OnLoggingOut(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggingOut
        path: ''
        startLine: 3144
      syntax:
        content:
          CSharp: public void OnLoggingOut<T>(ILoginSession loginSession, T value)
          VB: Public Sub OnLoggingOut(Of T)(loginSession As ILoginSession, value As T)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggedOut(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggedOut(ILoginSession)
        VB: OnLoggedOut(ILoginSession)
      nameWithType:
        CSharp: EasyEvents.OnLoggedOut(ILoginSession)
        VB: EasyEvents.OnLoggedOut(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut(ILoginSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggedOut
        path: ''
        startLine: 3161
      syntax:
        content:
          CSharp: public void OnLoggedOut(ILoginSession loginSession)
          VB: Public Sub OnLoggedOut(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoggedOut``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggedOut<T>(ILoginSession, T)
        VB: OnLoggedOut(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEvents.OnLoggedOut<T>(ILoginSession, T)
        VB: EasyEvents.OnLoggedOut(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoggedOut
        path: ''
        startLine: 3179
      syntax:
        content:
          CSharp: public void OnLoggedOut<T>(ILoginSession loginSession, T value)
          VB: Public Sub OnLoggedOut(Of T)(loginSession As ILoginSession, value As T)
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded(AccountId)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoginAdded(AccountId)
      language: CSharp
      name:
        CSharp: OnLoginAdded(AccountId)
        VB: OnLoginAdded(AccountId)
      nameWithType:
        CSharp: EasyEvents.OnLoginAdded(AccountId)
        VB: EasyEvents.OnLoginAdded(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded(AccountId)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoginAdded
        path: ''
        startLine: 3197
      syntax:
        content:
          CSharp: public void OnLoginAdded(AccountId accountId)
          VB: Public Sub OnLoginAdded(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved(AccountId)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved(AccountId)
      language: CSharp
      name:
        CSharp: OnLoginRemoved(AccountId)
        VB: OnLoginRemoved(AccountId)
      nameWithType:
        CSharp: EasyEvents.OnLoginRemoved(AccountId)
        VB: EasyEvents.OnLoginRemoved(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved(AccountId)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoginRemoved
        path: ''
        startLine: 3212
      syntax:
        content:
          CSharp: public void OnLoginRemoved(AccountId accountId)
          VB: Public Sub OnLoginRemoved(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoginUpdated(ILoginSession)
        VB: OnLoginUpdated(ILoginSession)
      nameWithType:
        CSharp: EasyEvents.OnLoginUpdated(ILoginSession)
        VB: EasyEvents.OnLoginUpdated(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated(ILoginSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLoginUpdated
        path: ''
        startLine: 3226
      syntax:
        content:
          CSharp: public void OnLoginUpdated(ILoginSession loginSession)
          VB: Public Sub OnLoginUpdated(loginSession As ILoginSession)
        parameters:
        - id: loginSession
          type: ILoginSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelConnecting(IChannelSession)
        VB: OnChannelConnecting(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnChannelConnecting(IChannelSession)
        VB: EasyEvents.OnChannelConnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelConnecting
        path: ''
        startLine: 3248
      syntax:
        content:
          CSharp: public void OnChannelConnecting(IChannelSession channelSession)
          VB: Public Sub OnChannelConnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelConnecting<T>(IChannelSession, T)
        VB: OnChannelConnecting(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnChannelConnecting<T>(IChannelSession, T)
        VB: EasyEvents.OnChannelConnecting(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelConnecting
        path: ''
        startLine: 3266
      syntax:
        content:
          CSharp: public void OnChannelConnecting<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnChannelConnecting(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelConnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelConnected(IChannelSession)
        VB: OnChannelConnected(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnChannelConnected(IChannelSession)
        VB: EasyEvents.OnChannelConnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelConnected
        path: ''
        startLine: 3283
      syntax:
        content:
          CSharp: public void OnChannelConnected(IChannelSession channelSession)
          VB: Public Sub OnChannelConnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelConnected``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelConnected<T>(IChannelSession, T)
        VB: OnChannelConnected(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnChannelConnected<T>(IChannelSession, T)
        VB: EasyEvents.OnChannelConnected(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelConnected
        path: ''
        startLine: 3301
      syntax:
        content:
          CSharp: public void OnChannelConnected<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnChannelConnected(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelDisconnecting(IChannelSession)
        VB: OnChannelDisconnecting(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnChannelDisconnecting(IChannelSession)
        VB: EasyEvents.OnChannelDisconnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelDisconnecting
        path: ''
        startLine: 3318
      syntax:
        content:
          CSharp: public void OnChannelDisconnecting(IChannelSession channelSession)
          VB: Public Sub OnChannelDisconnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelDisconnecting<T>(IChannelSession, T)
        VB: OnChannelDisconnecting(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnChannelDisconnecting<T>(IChannelSession, T)
        VB: EasyEvents.OnChannelDisconnecting(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelDisconnecting
        path: ''
        startLine: 3336
      syntax:
        content:
          CSharp: public void OnChannelDisconnecting<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnChannelDisconnecting(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelDisconnected(IChannelSession)
        VB: OnChannelDisconnected(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnChannelDisconnected(IChannelSession)
        VB: EasyEvents.OnChannelDisconnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelDisconnected
        path: ''
        startLine: 3353
      syntax:
        content:
          CSharp: public void OnChannelDisconnected(IChannelSession channelSession)
          VB: Public Sub OnChannelDisconnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelDisconnected<T>(IChannelSession, T)
        VB: OnChannelDisconnected(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnChannelDisconnected<T>(IChannelSession, T)
        VB: EasyEvents.OnChannelDisconnected(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelDisconnected
        path: ''
        startLine: 3371
      syntax:
        content:
          CSharp: public void OnChannelDisconnected<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnChannelDisconnected(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelConnecting(IChannelSession)
        VB: OnTextChannelConnecting(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelConnecting(IChannelSession)
        VB: EasyEvents.OnTextChannelConnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelConnecting
        path: ''
        startLine: 3395
      syntax:
        content:
          CSharp: public void OnTextChannelConnecting(IChannelSession channelSession)
          VB: Public Sub OnTextChannelConnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelConnecting<T>(IChannelSession, T)
        VB: OnTextChannelConnecting(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelConnecting<T>(IChannelSession, T)
        VB: EasyEvents.OnTextChannelConnecting(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelConnecting
        path: ''
        startLine: 3413
      syntax:
        content:
          CSharp: public void OnTextChannelConnecting<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnTextChannelConnecting(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelConnected(IChannelSession)
        VB: OnTextChannelConnected(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelConnected(IChannelSession)
        VB: EasyEvents.OnTextChannelConnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelConnected
        path: ''
        startLine: 3431
      syntax:
        content:
          CSharp: public void OnTextChannelConnected(IChannelSession channelSession)
          VB: Public Sub OnTextChannelConnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelConnected<T>(IChannelSession, T)
        VB: OnTextChannelConnected(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelConnected<T>(IChannelSession, T)
        VB: EasyEvents.OnTextChannelConnected(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelConnected
        path: ''
        startLine: 3449
      syntax:
        content:
          CSharp: public void OnTextChannelConnected<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnTextChannelConnected(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnecting(IChannelSession)
        VB: OnTextChannelDisconnecting(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelDisconnecting(IChannelSession)
        VB: EasyEvents.OnTextChannelDisconnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelDisconnecting
        path: ''
        startLine: 3466
      syntax:
        content:
          CSharp: public void OnTextChannelDisconnecting(IChannelSession channelSession)
          VB: Public Sub OnTextChannelDisconnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnecting<T>(IChannelSession, T)
        VB: OnTextChannelDisconnecting(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelDisconnecting<T>(IChannelSession, T)
        VB: EasyEvents.OnTextChannelDisconnecting(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelDisconnecting
        path: ''
        startLine: 3484
      syntax:
        content:
          CSharp: public void OnTextChannelDisconnecting<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnTextChannelDisconnecting(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnected(IChannelSession)
        VB: OnTextChannelDisconnected(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelDisconnected(IChannelSession)
        VB: EasyEvents.OnTextChannelDisconnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelDisconnected
        path: ''
        startLine: 3501
      syntax:
        content:
          CSharp: public void OnTextChannelDisconnected(IChannelSession channelSession)
          VB: Public Sub OnTextChannelDisconnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnected<T>(IChannelSession, T)
        VB: OnTextChannelDisconnected(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnTextChannelDisconnected<T>(IChannelSession, T)
        VB: EasyEvents.OnTextChannelDisconnected(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTextChannelDisconnected
        path: ''
        startLine: 3519
      syntax:
        content:
          CSharp: public void OnTextChannelDisconnected<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnTextChannelDisconnected(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnecting(IChannelSession)
        VB: OnAudioChannelConnecting(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelConnecting(IChannelSession)
        VB: EasyEvents.OnAudioChannelConnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelConnecting
        path: ''
        startLine: 3543
      syntax:
        content:
          CSharp: public void OnAudioChannelConnecting(IChannelSession channelSession)
          VB: Public Sub OnAudioChannelConnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnecting<T>(IChannelSession, T)
        VB: OnAudioChannelConnecting(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelConnecting<T>(IChannelSession, T)
        VB: EasyEvents.OnAudioChannelConnecting(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelConnecting
        path: ''
        startLine: 3561
      syntax:
        content:
          CSharp: public void OnAudioChannelConnecting<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnAudioChannelConnecting(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnected(IChannelSession)
        VB: OnAudioChannelConnected(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelConnected(IChannelSession)
        VB: EasyEvents.OnAudioChannelConnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelConnected
        path: ''
        startLine: 3578
      syntax:
        content:
          CSharp: public void OnAudioChannelConnected(IChannelSession channelSession)
          VB: Public Sub OnAudioChannelConnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnected<T>(IChannelSession, T)
        VB: OnAudioChannelConnected(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelConnected<T>(IChannelSession, T)
        VB: EasyEvents.OnAudioChannelConnected(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelConnected
        path: ''
        startLine: 3596
      syntax:
        content:
          CSharp: public void OnAudioChannelConnected<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnAudioChannelConnected(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnecting(IChannelSession)
        VB: OnAudioChannelDisconnecting(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelDisconnecting(IChannelSession)
        VB: EasyEvents.OnAudioChannelDisconnecting(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelDisconnecting
        path: ''
        startLine: 3613
      syntax:
        content:
          CSharp: public void OnAudioChannelDisconnecting(IChannelSession channelSession)
          VB: Public Sub OnAudioChannelDisconnecting(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnecting<T>(IChannelSession, T)
        VB: OnAudioChannelDisconnecting(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelDisconnecting<T>(IChannelSession, T)
        VB: EasyEvents.OnAudioChannelDisconnecting(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelDisconnecting
        path: ''
        startLine: 3631
      syntax:
        content:
          CSharp: public void OnAudioChannelDisconnecting<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnAudioChannelDisconnecting(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnected(IChannelSession)
        VB: OnAudioChannelDisconnected(IChannelSession)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelDisconnected(IChannelSession)
        VB: EasyEvents.OnAudioChannelDisconnected(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected(IChannelSession)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelDisconnected
        path: ''
        startLine: 3648
      syntax:
        content:
          CSharp: public void OnAudioChannelDisconnected(IChannelSession channelSession)
          VB: Public Sub OnAudioChannelDisconnected(channelSession As IChannelSession)
        parameters:
        - id: channelSession
          type: IChannelSession
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnected<T>(IChannelSession, T)
        VB: OnAudioChannelDisconnected(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEvents.OnAudioChannelDisconnected<T>(IChannelSession, T)
        VB: EasyEvents.OnAudioChannelDisconnected(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioChannelDisconnected
        path: ''
        startLine: 3666
      syntax:
        content:
          CSharp: public void OnAudioChannelDisconnected<T>(IChannelSession channelSession, T value)
          VB: Public Sub OnAudioChannelDisconnected(Of T)(channelSession As IChannelSession, value As T)
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved(IChannelTextMessage)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved(IChannelTextMessage)
      language: CSharp
      name:
        CSharp: OnChannelMessageRecieved(IChannelTextMessage)
        VB: OnChannelMessageRecieved(IChannelTextMessage)
      nameWithType:
        CSharp: EasyEvents.OnChannelMessageRecieved(IChannelTextMessage)
        VB: EasyEvents.OnChannelMessageRecieved(IChannelTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved(IChannelTextMessage)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved(IChannelTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelMessageRecieved
        path: ''
        startLine: 3690
      syntax:
        content:
          CSharp: public void OnChannelMessageRecieved(IChannelTextMessage channelTextMessage)
          VB: Public Sub OnChannelMessageRecieved(channelTextMessage As IChannelTextMessage)
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved``1(IChannelTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved``1(IChannelTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnChannelMessageRecieved<T>(IChannelTextMessage, T)
        VB: OnChannelMessageRecieved(Of T)(IChannelTextMessage, T)
      nameWithType:
        CSharp: EasyEvents.OnChannelMessageRecieved<T>(IChannelTextMessage, T)
        VB: EasyEvents.OnChannelMessageRecieved(Of T)(IChannelTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved<T>(IChannelTextMessage, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved(Of T)(IChannelTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelMessageRecieved
        path: ''
        startLine: 3708
      syntax:
        content:
          CSharp: public void OnChannelMessageRecieved<T>(IChannelTextMessage channelTextMessage, T value)
          VB: Public Sub OnChannelMessageRecieved(Of T)(channelTextMessage As IChannelTextMessage, value As T)
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved(IChannelTextMessage)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved(IChannelTextMessage)
      language: CSharp
      name:
        CSharp: OnEventMessageRecieved(IChannelTextMessage)
        VB: OnEventMessageRecieved(IChannelTextMessage)
      nameWithType:
        CSharp: EasyEvents.OnEventMessageRecieved(IChannelTextMessage)
        VB: EasyEvents.OnEventMessageRecieved(IChannelTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved(IChannelTextMessage)
        VB: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved(IChannelTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnEventMessageRecieved
        path: ''
        startLine: 3725
      syntax:
        content:
          CSharp: public void OnEventMessageRecieved(IChannelTextMessage channelTextMessage)
          VB: Public Sub OnEventMessageRecieved(channelTextMessage As IChannelTextMessage)
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
      overload: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved``1(IChannelTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved``1(IChannelTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnEventMessageRecieved<T>(IChannelTextMessage, T)
        VB: OnEventMessageRecieved(Of T)(IChannelTextMessage, T)
      nameWithType:
        CSharp: EasyEvents.OnEventMessageRecieved<T>(IChannelTextMessage, T)
        VB: EasyEvents.OnEventMessageRecieved(Of T)(IChannelTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved<T>(IChannelTextMessage, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved(Of T)(IChannelTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnEventMessageRecieved
        path: ''
        startLine: 3743
      syntax:
        content:
          CSharp: public void OnEventMessageRecieved<T>(IChannelTextMessage channelTextMessage, T value)
          VB: Public Sub OnEventMessageRecieved(Of T)(channelTextMessage As IChannelTextMessage, value As T)
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent
      language: CSharp
      name:
        CSharp: OnChannelMessageSent()
        VB: OnChannelMessageSent()
      nameWithType:
        CSharp: EasyEvents.OnChannelMessageSent()
        VB: EasyEvents.OnChannelMessageSent()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent()
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelMessageSent
        path: ''
        startLine: 3760
      syntax:
        content:
          CSharp: public void OnChannelMessageSent()
          VB: Public Sub OnChannelMessageSent
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent``1(``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent``1(``0)
      language: CSharp
      name:
        CSharp: OnChannelMessageSent<T>(T)
        VB: OnChannelMessageSent(Of T)(T)
      nameWithType:
        CSharp: EasyEvents.OnChannelMessageSent<T>(T)
        VB: EasyEvents.OnChannelMessageSent(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent<T>(T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnChannelMessageSent
        path: ''
        startLine: 3774
      syntax:
        content:
          CSharp: public void OnChannelMessageSent<T>(T value)
          VB: Public Sub OnChannelMessageSent(Of T)(value As T)
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent
      language: CSharp
      name:
        CSharp: OnDirectMessageSent()
        VB: OnDirectMessageSent()
      nameWithType:
        CSharp: EasyEvents.OnDirectMessageSent()
        VB: EasyEvents.OnDirectMessageSent()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent()
        VB: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnDirectMessageSent
        path: ''
        startLine: 3791
      syntax:
        content:
          CSharp: public void OnDirectMessageSent()
          VB: Public Sub OnDirectMessageSent
      overload: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent``1(``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent``1(``0)
      language: CSharp
      name:
        CSharp: OnDirectMessageSent<T>(T)
        VB: OnDirectMessageSent(Of T)(T)
      nameWithType:
        CSharp: EasyEvents.OnDirectMessageSent<T>(T)
        VB: EasyEvents.OnDirectMessageSent(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent<T>(T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnDirectMessageSent
        path: ''
        startLine: 3805
      syntax:
        content:
          CSharp: public void OnDirectMessageSent<T>(T value)
          VB: Public Sub OnDirectMessageSent(Of T)(value As T)
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved(IDirectedTextMessage)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved(IDirectedTextMessage)
      language: CSharp
      name:
        CSharp: OnDirectMessageRecieved(IDirectedTextMessage)
        VB: OnDirectMessageRecieved(IDirectedTextMessage)
      nameWithType:
        CSharp: EasyEvents.OnDirectMessageRecieved(IDirectedTextMessage)
        VB: EasyEvents.OnDirectMessageRecieved(IDirectedTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved(IDirectedTextMessage)
        VB: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved(IDirectedTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnDirectMessageRecieved
        path: ''
        startLine: 3822
      syntax:
        content:
          CSharp: public void OnDirectMessageRecieved(IDirectedTextMessage message)
          VB: Public Sub OnDirectMessageRecieved(message As IDirectedTextMessage)
        parameters:
        - id: message
          type: IDirectedTextMessage
      overload: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved``1(IDirectedTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved``1(IDirectedTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnDirectMessageRecieved<T>(IDirectedTextMessage, T)
        VB: OnDirectMessageRecieved(Of T)(IDirectedTextMessage, T)
      nameWithType:
        CSharp: EasyEvents.OnDirectMessageRecieved<T>(IDirectedTextMessage, T)
        VB: EasyEvents.OnDirectMessageRecieved(Of T)(IDirectedTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved<T>(IDirectedTextMessage, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved(Of T)(IDirectedTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnDirectMessageRecieved
        path: ''
        startLine: 3840
      syntax:
        content:
          CSharp: public void OnDirectMessageRecieved<T>(IDirectedTextMessage message, T value)
          VB: Public Sub OnDirectMessageRecieved(Of T)(message As IDirectedTextMessage, value As T)
        parameters:
        - id: message
          type: IDirectedTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed(IFailedDirectedTextMessage)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed(IFailedDirectedTextMessage)
      language: CSharp
      name:
        CSharp: OnDirectMessageFailed(IFailedDirectedTextMessage)
        VB: OnDirectMessageFailed(IFailedDirectedTextMessage)
      nameWithType:
        CSharp: EasyEvents.OnDirectMessageFailed(IFailedDirectedTextMessage)
        VB: EasyEvents.OnDirectMessageFailed(IFailedDirectedTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed(IFailedDirectedTextMessage)
        VB: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed(IFailedDirectedTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnDirectMessageFailed
        path: ''
        startLine: 3857
      syntax:
        content:
          CSharp: public void OnDirectMessageFailed(IFailedDirectedTextMessage failedMessage)
          VB: Public Sub OnDirectMessageFailed(failedMessage As IFailedDirectedTextMessage)
        parameters:
        - id: failedMessage
          type: IFailedDirectedTextMessage
      overload: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed``1(IFailedDirectedTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed``1(IFailedDirectedTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnDirectMessageFailed<T>(IFailedDirectedTextMessage, T)
        VB: OnDirectMessageFailed(Of T)(IFailedDirectedTextMessage, T)
      nameWithType:
        CSharp: EasyEvents.OnDirectMessageFailed<T>(IFailedDirectedTextMessage, T)
        VB: EasyEvents.OnDirectMessageFailed(Of T)(IFailedDirectedTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed<T>(IFailedDirectedTextMessage, T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed(Of T)(IFailedDirectedTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnDirectMessageFailed
        path: ''
        startLine: 3875
      syntax:
        content:
          CSharp: public void OnDirectMessageFailed<T>(IFailedDirectedTextMessage failedMessage, T value)
          VB: Public Sub OnDirectMessageFailed(Of T)(failedMessage As IFailedDirectedTextMessage, value As T)
        parameters:
        - id: failedMessage
          type: IFailedDirectedTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel(IParticipant)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserJoinedChannel(IParticipant)
        VB: OnUserJoinedChannel(IParticipant)
      nameWithType:
        CSharp: EasyEvents.OnUserJoinedChannel(IParticipant)
        VB: EasyEvents.OnUserJoinedChannel(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel(IParticipant)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserJoinedChannel
        path: ''
        startLine: 3899
      syntax:
        content:
          CSharp: public void OnUserJoinedChannel(IParticipant participant)
          VB: Public Sub OnUserJoinedChannel(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel(IParticipant)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserLeftChannel(IParticipant)
        VB: OnUserLeftChannel(IParticipant)
      nameWithType:
        CSharp: EasyEvents.OnUserLeftChannel(IParticipant)
        VB: EasyEvents.OnUserLeftChannel(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel(IParticipant)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserLeftChannel
        path: ''
        startLine: 3917
      syntax:
        content:
          CSharp: public void OnUserLeftChannel(IParticipant participant)
          VB: Public Sub OnUserLeftChannel(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated(IParticipant)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserValuesUpdated(IParticipant)
        VB: OnUserValuesUpdated(IParticipant)
      nameWithType:
        CSharp: EasyEvents.OnUserValuesUpdated(IParticipant)
        VB: EasyEvents.OnUserValuesUpdated(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated(IParticipant)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserValuesUpdated
        path: ''
        startLine: 3935
      syntax:
        content:
          CSharp: public void OnUserValuesUpdated(IParticipant participant)
          VB: Public Sub OnUserValuesUpdated(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserMuted(IParticipant)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserMuted(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserMuted(IParticipant)
        VB: OnUserMuted(IParticipant)
      nameWithType:
        CSharp: EasyEvents.OnUserMuted(IParticipant)
        VB: EasyEvents.OnUserMuted(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserMuted(IParticipant)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserMuted(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserMuted
        path: ''
        startLine: 3955
      syntax:
        content:
          CSharp: public void OnUserMuted(IParticipant participant)
          VB: Public Sub OnUserMuted(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserMuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted(IParticipant)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserUnmuted(IParticipant)
        VB: OnUserUnmuted(IParticipant)
      nameWithType:
        CSharp: EasyEvents.OnUserUnmuted(IParticipant)
        VB: EasyEvents.OnUserUnmuted(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted(IParticipant)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserUnmuted
        path: ''
        startLine: 3973
      syntax:
        content:
          CSharp: public void OnUserUnmuted(IParticipant participant)
          VB: Public Sub OnUserUnmuted(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted(AccountId)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted(AccountId)
      language: CSharp
      name:
        CSharp: OnUserCrossMuted(AccountId)
        VB: OnUserCrossMuted(AccountId)
      nameWithType:
        CSharp: EasyEvents.OnUserCrossMuted(AccountId)
        VB: EasyEvents.OnUserCrossMuted(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted(AccountId)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserCrossMuted
        path: ''
        startLine: 3993
      syntax:
        content:
          CSharp: public void OnUserCrossMuted(AccountId accountId)
          VB: Public Sub OnUserCrossMuted(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted(AccountId)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted(AccountId)
      language: CSharp
      name:
        CSharp: OnUserCrossUnmuted(AccountId)
        VB: OnUserCrossUnmuted(AccountId)
      nameWithType:
        CSharp: EasyEvents.OnUserCrossUnmuted(AccountId)
        VB: EasyEvents.OnUserCrossUnmuted(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted(AccountId)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserCrossUnmuted
        path: ''
        startLine: 4011
      syntax:
        content:
          CSharp: public void OnUserCrossUnmuted(AccountId accountId)
          VB: Public Sub OnUserCrossUnmuted(accountId As AccountId)
        parameters:
        - id: accountId
          type: AccountId
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking(IParticipant)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserSpeaking(IParticipant)
        VB: OnUserSpeaking(IParticipant)
      nameWithType:
        CSharp: EasyEvents.OnUserSpeaking(IParticipant)
        VB: EasyEvents.OnUserSpeaking(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking(IParticipant)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserSpeaking
        path: ''
        startLine: 4029
      syntax:
        content:
          CSharp: public void OnUserSpeaking(IParticipant participant)
          VB: Public Sub OnUserSpeaking(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking(IParticipant)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserNotSpeaking(IParticipant)
        VB: OnUserNotSpeaking(IParticipant)
      nameWithType:
        CSharp: EasyEvents.OnUserNotSpeaking(IParticipant)
        VB: EasyEvents.OnUserNotSpeaking(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking(IParticipant)
        VB: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnUserNotSpeaking
        path: ''
        startLine: 4047
      syntax:
        content:
          CSharp: public void OnUserNotSpeaking(IParticipant participant)
          VB: Public Sub OnUserNotSpeaking(participant As IParticipant)
        parameters:
        - id: participant
          type: IParticipant
      overload: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted
      language: CSharp
      name:
        CSharp: OnLocalUserMuted()
        VB: OnLocalUserMuted()
      nameWithType:
        CSharp: EasyEvents.OnLocalUserMuted()
        VB: EasyEvents.OnLocalUserMuted()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted()
        VB: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLocalUserMuted
        path: ''
        startLine: 4071
      syntax:
        content:
          CSharp: public void OnLocalUserMuted()
          VB: Public Sub OnLocalUserMuted
      overload: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted``1(``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted``1(``0)
      language: CSharp
      name:
        CSharp: OnLocalUserMuted<T>(T)
        VB: OnLocalUserMuted(Of T)(T)
      nameWithType:
        CSharp: EasyEvents.OnLocalUserMuted<T>(T)
        VB: EasyEvents.OnLocalUserMuted(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted<T>(T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLocalUserMuted
        path: ''
        startLine: 4089
      syntax:
        content:
          CSharp: public void OnLocalUserMuted<T>(T value)
          VB: Public Sub OnLocalUserMuted(Of T)(value As T)
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted
      language: CSharp
      name:
        CSharp: OnLocalUserUnmuted()
        VB: OnLocalUserUnmuted()
      nameWithType:
        CSharp: EasyEvents.OnLocalUserUnmuted()
        VB: EasyEvents.OnLocalUserUnmuted()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted()
        VB: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLocalUserUnmuted
        path: ''
        startLine: 4106
      syntax:
        content:
          CSharp: public void OnLocalUserUnmuted()
          VB: Public Sub OnLocalUserUnmuted
      overload: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted``1(``0)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted``1(``0)
      language: CSharp
      name:
        CSharp: OnLocalUserUnmuted<T>(T)
        VB: OnLocalUserUnmuted(Of T)(T)
      nameWithType:
        CSharp: EasyEvents.OnLocalUserUnmuted<T>(T)
        VB: EasyEvents.OnLocalUserUnmuted(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted<T>(T)
        VB: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnLocalUserUnmuted
        path: ''
        startLine: 4124
      syntax:
        content:
          CSharp: public void OnLocalUserUnmuted<T>(T value)
          VB: Public Sub OnLocalUserUnmuted(Of T)(value As T)
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
      overload: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceAdded(IAudioDevice)
        VB: OnAudioInputDeviceAdded(IAudioDevice)
      nameWithType:
        CSharp: EasyEvents.OnAudioInputDeviceAdded(IAudioDevice)
        VB: EasyEvents.OnAudioInputDeviceAdded(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded(IAudioDevice)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioInputDeviceAdded
        path: ''
        startLine: 4148
      syntax:
        content:
          CSharp: public void OnAudioInputDeviceAdded(IAudioDevice audioDevice)
          VB: Public Sub OnAudioInputDeviceAdded(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceRemoved(IAudioDevice)
        VB: OnAudioInputDeviceRemoved(IAudioDevice)
      nameWithType:
        CSharp: EasyEvents.OnAudioInputDeviceRemoved(IAudioDevice)
        VB: EasyEvents.OnAudioInputDeviceRemoved(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved(IAudioDevice)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioInputDeviceRemoved
        path: ''
        startLine: 4166
      syntax:
        content:
          CSharp: public void OnAudioInputDeviceRemoved(IAudioDevice audioDevice)
          VB: Public Sub OnAudioInputDeviceRemoved(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceUpdated(IAudioDevice)
        VB: OnAudioInputDeviceUpdated(IAudioDevice)
      nameWithType:
        CSharp: EasyEvents.OnAudioInputDeviceUpdated(IAudioDevice)
        VB: EasyEvents.OnAudioInputDeviceUpdated(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated(IAudioDevice)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioInputDeviceUpdated
        path: ''
        startLine: 4184
      syntax:
        content:
          CSharp: public void OnAudioInputDeviceUpdated(IAudioDevice audioDevice)
          VB: Public Sub OnAudioInputDeviceUpdated(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceAdded(IAudioDevice)
        VB: OnAudioOutputDeviceAdded(IAudioDevice)
      nameWithType:
        CSharp: EasyEvents.OnAudioOutputDeviceAdded(IAudioDevice)
        VB: EasyEvents.OnAudioOutputDeviceAdded(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded(IAudioDevice)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioOutputDeviceAdded
        path: ''
        startLine: 4202
      syntax:
        content:
          CSharp: public void OnAudioOutputDeviceAdded(IAudioDevice audioDevice)
          VB: Public Sub OnAudioOutputDeviceAdded(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: OnAudioOutputDeviceRemoved(IAudioDevice)
      nameWithType:
        CSharp: EasyEvents.OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: EasyEvents.OnAudioOutputDeviceRemoved(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioOutputDeviceRemoved
        path: ''
        startLine: 4220
      syntax:
        content:
          CSharp: public void OnAudioOutputDeviceRemoved(IAudioDevice audioDevice)
          VB: Public Sub OnAudioOutputDeviceRemoved(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: OnAudioOutputDeviceUpdated(IAudioDevice)
      nameWithType:
        CSharp: EasyEvents.OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: EasyEvents.OnAudioOutputDeviceUpdated(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnAudioOutputDeviceUpdated
        path: ''
        startLine: 4238
      syntax:
        content:
          CSharp: public void OnAudioOutputDeviceUpdated(IAudioDevice audioDevice)
          VB: Public Sub OnAudioOutputDeviceUpdated(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageAdded(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyEvents.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
        VB: EasyEvents.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTTSMessageAdded
        path: ''
        startLine: 4265
      syntax:
        content:
          CSharp: public void OnTTSMessageAdded(ITTSMessageQueueEventArgs ttsArgs)
          VB: Public Sub OnTTSMessageAdded(ttsArgs As ITTSMessageQueueEventArgs)
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
      overload: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyEvents.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
        VB: EasyEvents.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTTSMessageRemoved
        path: ''
        startLine: 4283
      syntax:
        content:
          CSharp: public void OnTTSMessageRemoved(ITTSMessageQueueEventArgs ttsArgs)
          VB: Public Sub OnTTSMessageRemoved(ttsArgs As ITTSMessageQueueEventArgs)
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
      overload: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyEvents.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
        VB: EasyEvents.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: OnTTSMessageUpdated
        path: ''
        startLine: 4301
      syntax:
        content:
          CSharp: public void OnTTSMessageUpdated(ITTSMessageQueueEventArgs ttsArgs)
          VB: Public Sub OnTTSMessageUpdated(ttsArgs As ITTSMessageQueueEventArgs)
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
      overload: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.LoginEventAsyncAttribute
    language: CSharp
    name:
      CSharp: LoginEventAsyncAttribute
      VB: LoginEventAsyncAttribute
    nameWithType:
      CSharp: LoginEventAsyncAttribute
      VB: LoginEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.LoginEventAsyncAttribute
      VB: EasyCodeForVivox.Events.LoginEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: LoginEventAsyncAttribute
      path: ''
      startLine: 5647
    summary: "\nPlace this on an async void or async Task method to subscribe to Vivox Login Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.LoginStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[LoginEventAsync(LoginStatus.LoggingIn)]\nprivate async void OnPlayerLoggingInAsync(ILoginSession loginSession)\n{\n    Debug.Log($&quot;Logging In : {loginSession.LoginSessionId.DisplayName}&quot;);\n    await GetJoinedLobbies();\n}</code></pre>\n</example>   \n<p>\nCheck out the Docs <a href=\"/docs/events_async/login_events_async.html\"> Dynamic Async Events - Login Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LoginEventAsyncAttribute : Attribute'
        VB: >-
          Public Class LoginEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: LoginEventAsyncAttribute.Options
        VB: LoginEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5653
      summary: "\nGets or sets the status for the Login event.\n"
      example: []
      syntax:
        content:
          CSharp: public LoginStatus Options { get; set; }
          VB: Public Property Options As LoginStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      overload: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.LoginStatus)
      commentId: M:EasyCodeForVivox.Events.LoginEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.LoginStatus)
      language: CSharp
      name:
        CSharp: LoginEventAsyncAttribute(LoginStatus)
        VB: LoginEventAsyncAttribute(LoginStatus)
      nameWithType:
        CSharp: LoginEventAsyncAttribute.LoginEventAsyncAttribute(LoginStatus)
        VB: LoginEventAsyncAttribute.LoginEventAsyncAttribute(LoginStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginEventAsyncAttribute.LoginEventAsyncAttribute(EasyCodeForVivox.Events.LoginStatus)
        VB: EasyCodeForVivox.Events.LoginEventAsyncAttribute.LoginEventAsyncAttribute(EasyCodeForVivox.Events.LoginStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5659
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.LoginEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and subscribes these methods to Login event. EasyCode then invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public LoginEventAsyncAttribute(LoginStatus options)
          VB: Public Sub New(options As LoginStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.LoginStatus
          description: The Login event status you want to subscribe to.
      overload: EasyCodeForVivox.Events.LoginEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.LoginEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.LoginStatus: 
  - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.ChannelEventAsyncAttribute
    language: CSharp
    name:
      CSharp: ChannelEventAsyncAttribute
      VB: ChannelEventAsyncAttribute
    nameWithType:
      CSharp: ChannelEventAsyncAttribute
      VB: ChannelEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.ChannelEventAsyncAttribute
      VB: EasyCodeForVivox.Events.ChannelEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: ChannelEventAsyncAttribute
      path: ''
      startLine: 5688
    summary: "\nPlace this on an async void or async Task method to subscribe to Vivox Channel Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.ChannelStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[ChannelEventAsync(ChannelStatus.Connected)]\nprivate async void OnChannelConnectedAsync(IChannelSession channelSession)\n{\n    Debug.Log($&quot;{channelSession.Channel.Name} Is Connecting&quot;);\n    await LoadPlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/channel_events_async.html\"> Dynamic Async Events - Channel Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ChannelEventAsyncAttribute : Attribute'
        VB: >-
          Public Class ChannelEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: ChannelEventAsyncAttribute.Options
        VB: ChannelEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5694
      summary: "\nGets or sets the status for the Channel event.\n"
      example: []
      syntax:
        content:
          CSharp: public ChannelStatus Options { get; set; }
          VB: Public Property Options As ChannelStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.ChannelStatus
      overload: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.ChannelStatus)
      commentId: M:EasyCodeForVivox.Events.ChannelEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.ChannelStatus)
      language: CSharp
      name:
        CSharp: ChannelEventAsyncAttribute(ChannelStatus)
        VB: ChannelEventAsyncAttribute(ChannelStatus)
      nameWithType:
        CSharp: ChannelEventAsyncAttribute.ChannelEventAsyncAttribute(ChannelStatus)
        VB: ChannelEventAsyncAttribute.ChannelEventAsyncAttribute(ChannelStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.ChannelEventAsyncAttribute(EasyCodeForVivox.Events.ChannelStatus)
        VB: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.ChannelEventAsyncAttribute(EasyCodeForVivox.Events.ChannelStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5700
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.ChannelEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and subscribes these methods to Channel event. EasyCode then invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public ChannelEventAsyncAttribute(ChannelStatus options)
          VB: Public Sub New(options As ChannelStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.ChannelStatus
          description: The Channel event status you want to subscribe to.
      overload: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.ChannelEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.ChannelStatus: 
  - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
    language: CSharp
    name:
      CSharp: AudioChannelEventAsyncAttribute
      VB: AudioChannelEventAsyncAttribute
    nameWithType:
      CSharp: AudioChannelEventAsyncAttribute
      VB: AudioChannelEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
      VB: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: AudioChannelEventAsyncAttribute
      path: ''
      startLine: 5729
    summary: "\nPlace this on a async void or async Task  method to subscribe to Vivox Audio Channel Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.AudioChannelStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[AudioChannelEventAsync(AudioChannelStatus.AudioChannelConnecting)]\nprivate async void OnAudioChannelConnectingAsync(IChannelSession channelSession)\n{\nDebug.Log($&quot;{channelSession.Channel.Name} Is Connecting&quot;);\nawait LoadPlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/audio_channel_events_async.html\"> Dynamic Async Events - Audio Channel Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioChannelEventAsyncAttribute : Attribute'
        VB: >-
          Public Class AudioChannelEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: AudioChannelEventAsyncAttribute.Options
        VB: AudioChannelEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5735
      summary: "\nGets or sets the status for the Audio Channel event.\n"
      example: []
      syntax:
        content:
          CSharp: public AudioChannelStatus Options { get; set; }
          VB: Public Property Options As AudioChannelStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.AudioChannelStatus
      overload: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.AudioChannelStatus)
      commentId: M:EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.AudioChannelStatus)
      language: CSharp
      name:
        CSharp: AudioChannelEventAsyncAttribute(AudioChannelStatus)
        VB: AudioChannelEventAsyncAttribute(AudioChannelStatus)
      nameWithType:
        CSharp: AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute(AudioChannelStatus)
        VB: AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute(AudioChannelStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute(EasyCodeForVivox.Events.AudioChannelStatus)
        VB: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute(EasyCodeForVivox.Events.AudioChannelStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5741
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public AudioChannelEventAsyncAttribute(AudioChannelStatus options)
          VB: Public Sub New(options As AudioChannelStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.AudioChannelStatus
          description: The status for the Audio Channel event.
      overload: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.AudioChannelStatus: 
  - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
    language: CSharp
    name:
      CSharp: TextChannelEventAsyncAttribute
      VB: TextChannelEventAsyncAttribute
    nameWithType:
      CSharp: TextChannelEventAsyncAttribute
      VB: TextChannelEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
      VB: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: TextChannelEventAsyncAttribute
      path: ''
      startLine: 5770
    summary: "\nPlace this on a async void or async Task  method to subscribe to Vivox Text Channel Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.TextChannelStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[TextChannelEventAsync(TextChannelStatus.TextChannelConnecting)]\nprivate async void OnTextChannelConnectingAsync(IChannelSession channelSession)\n{\nDebug.Log($&quot;{channelSession.Channel.Name} Is Connecting&quot;);\nawait LoadPlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/text_channel_events_async.html\"> Dynamic Async Events - Text Channel Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextChannelEventAsyncAttribute : Attribute'
        VB: >-
          Public Class TextChannelEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: TextChannelEventAsyncAttribute.Options
        VB: TextChannelEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5776
      summary: "\nGets or sets the status for the Text Channel event.\n"
      example: []
      syntax:
        content:
          CSharp: public TextChannelStatus Options { get; set; }
          VB: Public Property Options As TextChannelStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.TextChannelStatus
      overload: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.TextChannelStatus)
      commentId: M:EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.TextChannelStatus)
      language: CSharp
      name:
        CSharp: TextChannelEventAsyncAttribute(TextChannelStatus)
        VB: TextChannelEventAsyncAttribute(TextChannelStatus)
      nameWithType:
        CSharp: TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute(TextChannelStatus)
        VB: TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute(TextChannelStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute(EasyCodeForVivox.Events.TextChannelStatus)
        VB: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute(EasyCodeForVivox.Events.TextChannelStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5782
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.TextChannelEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public TextChannelEventAsyncAttribute(TextChannelStatus options)
          VB: Public Sub New(options As TextChannelStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.TextChannelStatus
          description: The status for the Text Channel event.
      overload: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.TextChannelEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.TextChannelStatus: 
  - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
    language: CSharp
    name:
      CSharp: ChannelMessageEventAsyncAttribute
      VB: ChannelMessageEventAsyncAttribute
    nameWithType:
      CSharp: ChannelMessageEventAsyncAttribute
      VB: ChannelMessageEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
      VB: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: ChannelMessageEventAsyncAttribute
      path: ''
      startLine: 5811
    summary: "\nPlace this on a async void or async Task  method to subscribe to Vivox Channel Message Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.ChannelMessageStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[ChannelMessageEventAsync(ChannelMessageStatus.ChannelMessageRecieved)]\nprivate async void OnChannelMessageRecievedAsync(IChannelTextMessage textMessage)\n{\nDebug.Log($&quot;From {textMessage.Sender.DisplayName} : {textMessage.ReceivedTime} : {textMessage.Message}&quot;);\nawait SavePlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/channel_message_events_async.html\"> Dynamic Async Events - Channel Message Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ChannelMessageEventAsyncAttribute : Attribute'
        VB: >-
          Public Class ChannelMessageEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: ChannelMessageEventAsyncAttribute.Options
        VB: ChannelMessageEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5817
      summary: "\nGets or sets the status for the Channel Message event.\n"
      example: []
      syntax:
        content:
          CSharp: public ChannelMessageStatus Options { get; set; }
          VB: Public Property Options As ChannelMessageStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.ChannelMessageStatus
      overload: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.ChannelMessageStatus)
      commentId: M:EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.ChannelMessageStatus)
      language: CSharp
      name:
        CSharp: ChannelMessageEventAsyncAttribute(ChannelMessageStatus)
        VB: ChannelMessageEventAsyncAttribute(ChannelMessageStatus)
      nameWithType:
        CSharp: ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute(ChannelMessageStatus)
        VB: ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute(ChannelMessageStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute(EasyCodeForVivox.Events.ChannelMessageStatus)
        VB: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute(EasyCodeForVivox.Events.ChannelMessageStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5823
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public ChannelMessageEventAsyncAttribute(ChannelMessageStatus options)
          VB: Public Sub New(options As ChannelMessageStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.ChannelMessageStatus
          description: The status for the Channel Message event.
      overload: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.ChannelMessageStatus: 
  - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
    language: CSharp
    name:
      CSharp: DirectMessageEventAsyncAttribute
      VB: DirectMessageEventAsyncAttribute
    nameWithType:
      CSharp: DirectMessageEventAsyncAttribute
      VB: DirectMessageEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
      VB: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: DirectMessageEventAsyncAttribute
      path: ''
      startLine: 5851
    summary: "\nPlace this on a async void or async Task  method to subscribe to Vivox Direct Message Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.DirectMessageStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[DirectMessageEventAsync(DirectMessageStatus.DirectMessageRecieved)]\nprivate async void OnDirectMessageRecievedAsync(IDirectedTextMessage directedTextMessage)\n{\nDebug.Log($&quot;Recived Message From : {directedTextMessage.Sender.DisplayName} : {directedTextMessage.ReceivedTime} : {directedTextMessage.Message}&quot;);\nawait SavePlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/direct_message_events_async.html\"> Dynamic Async Events - Direct Message Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DirectMessageEventAsyncAttribute : Attribute'
        VB: >-
          Public Class DirectMessageEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: DirectMessageEventAsyncAttribute.Options
        VB: DirectMessageEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5857
      summary: "\nGets or sets the status for the Direct Message event.\n"
      example: []
      syntax:
        content:
          CSharp: public DirectMessageStatus Options { get; set; }
          VB: Public Property Options As DirectMessageStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.DirectMessageStatus
      overload: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.DirectMessageStatus)
      commentId: M:EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.DirectMessageStatus)
      language: CSharp
      name:
        CSharp: DirectMessageEventAsyncAttribute(DirectMessageStatus)
        VB: DirectMessageEventAsyncAttribute(DirectMessageStatus)
      nameWithType:
        CSharp: DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute(DirectMessageStatus)
        VB: DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute(DirectMessageStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute(EasyCodeForVivox.Events.DirectMessageStatus)
        VB: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute(EasyCodeForVivox.Events.DirectMessageStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5863
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public DirectMessageEventAsyncAttribute(DirectMessageStatus options)
          VB: Public Sub New(options As DirectMessageStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.DirectMessageStatus
          description: The status for the Direct Message event.
      overload: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.DirectMessageStatus: 
  - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.UserEventsAsyncAttribute
    language: CSharp
    name:
      CSharp: UserEventsAsyncAttribute
      VB: UserEventsAsyncAttribute
    nameWithType:
      CSharp: UserEventsAsyncAttribute
      VB: UserEventsAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.UserEventsAsyncAttribute
      VB: EasyCodeForVivox.Events.UserEventsAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: UserEventsAsyncAttribute
      path: ''
      startLine: 5891
    summary: "\nPlace this on a async void or async Task  method to subscribe to Vivox User Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.UserStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[UserEventsAsync(UserStatus.LocalUserMuted)]\nprivate async void OnLocalUserMutedAsync()\n{\nDebug.Log(&quot;Local User is Muted&quot;);\nawait SavePlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/user_events_async.html\"> Dynamic Async Events - User Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class UserEventsAsyncAttribute : Attribute'
        VB: >-
          Public Class UserEventsAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: UserEventsAsyncAttribute.Options
        VB: UserEventsAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5897
      summary: "\nGets or sets the status for the User event.\n"
      example: []
      syntax:
        content:
          CSharp: public UserStatus Options { get; set; }
          VB: Public Property Options As UserStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.UserStatus
      overload: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute.#ctor(EasyCodeForVivox.Events.UserStatus)
      commentId: M:EasyCodeForVivox.Events.UserEventsAsyncAttribute.#ctor(EasyCodeForVivox.Events.UserStatus)
      language: CSharp
      name:
        CSharp: UserEventsAsyncAttribute(UserStatus)
        VB: UserEventsAsyncAttribute(UserStatus)
      nameWithType:
        CSharp: UserEventsAsyncAttribute.UserEventsAsyncAttribute(UserStatus)
        VB: UserEventsAsyncAttribute.UserEventsAsyncAttribute(UserStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserEventsAsyncAttribute.UserEventsAsyncAttribute(EasyCodeForVivox.Events.UserStatus)
        VB: EasyCodeForVivox.Events.UserEventsAsyncAttribute.UserEventsAsyncAttribute(EasyCodeForVivox.Events.UserStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5903
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.UserEventsAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public UserEventsAsyncAttribute(UserStatus options)
          VB: Public Sub New(options As UserStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.UserStatus
          description: The status for the User event.
      overload: EasyCodeForVivox.Events.UserEventsAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.UserEventsAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.UserStatus: 
  - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
    language: CSharp
    name:
      CSharp: AudioDeviceEventAsyncAttribute
      VB: AudioDeviceEventAsyncAttribute
    nameWithType:
      CSharp: AudioDeviceEventAsyncAttribute
      VB: AudioDeviceEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
      VB: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: AudioDeviceEventAsyncAttribute
      path: ''
      startLine: 5931
    summary: "\nPlace this on a async void or async Task  method to subscribe to Vivox Audio Device Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.AudioDeviceStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[AudioDeviceEventAsync(AudioDeviceStatus.AudioInputDeviceAdded)]\nprivate async void OnAudioInputDeviceAddedAsync(IAudioDevice audioDevice)\n{\nDebug.Log($&quot;Audio Input device has been added {audioDevice?.Name}&quot;);\nawait SavePlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/audio_device_events_async.html\"> Dynamic Async Events - Audio Device Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioDeviceEventAsyncAttribute : Attribute'
        VB: >-
          Public Class AudioDeviceEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: AudioDeviceEventAsyncAttribute.Options
        VB: AudioDeviceEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5937
      summary: "\nGets or sets the status for the Audio Device event.\n"
      example: []
      syntax:
        content:
          CSharp: public AudioDeviceStatus Options { get; set; }
          VB: Public Property Options As AudioDeviceStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      overload: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.AudioDeviceStatus)
      commentId: M:EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.AudioDeviceStatus)
      language: CSharp
      name:
        CSharp: AudioDeviceEventAsyncAttribute(AudioDeviceStatus)
        VB: AudioDeviceEventAsyncAttribute(AudioDeviceStatus)
      nameWithType:
        CSharp: AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute(AudioDeviceStatus)
        VB: AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute(AudioDeviceStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute(EasyCodeForVivox.Events.AudioDeviceStatus)
        VB: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute(EasyCodeForVivox.Events.AudioDeviceStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5943
      summary: "\nEasyCode uses Reflection to find methods that contain <xref href=\"EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public AudioDeviceEventAsyncAttribute(AudioDeviceStatus options)
          VB: Public Sub New(options As AudioDeviceStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.AudioDeviceStatus
          description: The status for the Audio Device event.
      overload: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.AudioDeviceStatus: 
  - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
    commentId: T:EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
    language: CSharp
    name:
      CSharp: TextToSpeechEventAsyncAttribute
      VB: TextToSpeechEventAsyncAttribute
    nameWithType:
      CSharp: TextToSpeechEventAsyncAttribute
      VB: TextToSpeechEventAsyncAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
      VB: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: TextToSpeechEventAsyncAttribute
      path: ''
      startLine: 5972
    summary: "\nPlace this on a async void or async Task  method to subscribe to Vivox Text-To-Speech Events asynchronously\n<p>\n<strong>Do not modify any GameObjects, UI, or anything that relies/runs on Unity&apos;s main thread</strong>\n</p>\n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.TextToSpeechStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[TextToSpeechEventAsync(TextToSpeechStatus.TTSMessageAdded)]\nprivate async void  OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs ttsArgs)\n{\nDebug.Log($&quot;TTS Message Has Been Added : {ttsArgs.Message.Text}&quot;);\nawait SavePlayerData();\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events_async/events_async/tts_events_async.html\"> Dynamic Async Events - Text To Speech Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextToSpeechEventAsyncAttribute : Attribute'
        VB: >-
          Public Class TextToSpeechEventAsyncAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options
      commentId: P:EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: TextToSpeechEventAsyncAttribute.Options
        VB: TextToSpeechEventAsyncAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options
        VB: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 5978
      summary: "\nGets or sets the status for the Text-to-Speech event.\n"
      example: []
      syntax:
        content:
          CSharp: public TextToSpeechStatus Options { get; set; }
          VB: Public Property Options As TextToSpeechStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.TextToSpeechStatus
      overload: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.TextToSpeechStatus)
      commentId: M:EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.#ctor(EasyCodeForVivox.Events.TextToSpeechStatus)
      language: CSharp
      name:
        CSharp: TextToSpeechEventAsyncAttribute(TextToSpeechStatus)
        VB: TextToSpeechEventAsyncAttribute(TextToSpeechStatus)
      nameWithType:
        CSharp: TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute(TextToSpeechStatus)
        VB: TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute(TextToSpeechStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute(EasyCodeForVivox.Events.TextToSpeechStatus)
        VB: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute(EasyCodeForVivox.Events.TextToSpeechStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 5984
      summary: "\nEasyCode uses Reflection to find methods with that contain <xref href=\"EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref> and invokes these methods dynamically with the specified options.\n"
      example: []
      syntax:
        content:
          CSharp: public TextToSpeechEventAsyncAttribute(TextToSpeechStatus options)
          VB: Public Sub New(options As TextToSpeechStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.TextToSpeechStatus
          description: The status for the Text-to-Speech event.
      overload: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute: 
    references:
      EasyCodeForVivox.Events.TextToSpeechStatus: 
  - id: EasyCodeForVivox.Events.LoginStatus
    commentId: T:EasyCodeForVivox.Events.LoginStatus
    language: CSharp
    name:
      CSharp: LoginStatus
      VB: LoginStatus
    nameWithType:
      CSharp: LoginStatus
      VB: LoginStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.LoginStatus
      VB: EasyCodeForVivox.Events.LoginStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: LoginStatus
      path: ''
      startLine: 5999
    summary: "\nThe type of <strong>Vivox Login Event</strong> you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.LoginEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.LoginEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n"
    example: []
    syntax:
      content:
        CSharp: public enum LoginStatus
        VB: Public Enum LoginStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.LoginStatus.LoggingIn
      commentId: F:EasyCodeForVivox.Events.LoginStatus.LoggingIn
      language: CSharp
      name:
        CSharp: LoggingIn
        VB: LoggingIn
      nameWithType:
        CSharp: LoginStatus.LoggingIn
        VB: LoginStatus.LoggingIn
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginStatus.LoggingIn
        VB: EasyCodeForVivox.Events.LoginStatus.LoggingIn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggingIn
        path: ''
        startLine: 6007
      summary: "\nEvent is invoked/fired when player begins logging into Vivox\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ILoginSession.html\">VivoxUnity.ILoginSession</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: LoggingIn = 0
          VB: LoggingIn = 0
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.LoginStatus.LoggedIn
      commentId: F:EasyCodeForVivox.Events.LoginStatus.LoggedIn
      language: CSharp
      name:
        CSharp: LoggedIn
        VB: LoggedIn
      nameWithType:
        CSharp: LoginStatus.LoggedIn
        VB: LoginStatus.LoggedIn
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginStatus.LoggedIn
        VB: EasyCodeForVivox.Events.LoginStatus.LoggedIn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggedIn
        path: ''
        startLine: 6014
      summary: "\nEvent is invoked/fired when player is successfully logged into Vivox\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ILoginSession.html\">VivoxUnity.ILoginSession</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: LoggedIn = 1
          VB: LoggedIn = 1
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.LoginStatus.LoggingOut
      commentId: F:EasyCodeForVivox.Events.LoginStatus.LoggingOut
      language: CSharp
      name:
        CSharp: LoggingOut
        VB: LoggingOut
      nameWithType:
        CSharp: LoginStatus.LoggingOut
        VB: LoginStatus.LoggingOut
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginStatus.LoggingOut
        VB: EasyCodeForVivox.Events.LoginStatus.LoggingOut
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggingOut
        path: ''
        startLine: 6021
      summary: "\nEvent is invoked/fired when player begins logging out of Vivox\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ILoginSession.html\">VivoxUnity.ILoginSession</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: LoggingOut = 2
          VB: LoggingOut = 2
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.LoginStatus.LoggedOut
      commentId: F:EasyCodeForVivox.Events.LoginStatus.LoggedOut
      language: CSharp
      name:
        CSharp: LoggedOut
        VB: LoggedOut
      nameWithType:
        CSharp: LoginStatus.LoggedOut
        VB: LoginStatus.LoggedOut
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginStatus.LoggedOut
        VB: EasyCodeForVivox.Events.LoginStatus.LoggedOut
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoggedOut
        path: ''
        startLine: 6028
      summary: "\nEvent is invoked/fired when player is successfully logged out of Vivox\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ILoginSession.html\">VivoxUnity.ILoginSession</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: LoggedOut = 3
          VB: LoggedOut = 3
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.LoginStatus.LoginAdded
      commentId: F:EasyCodeForVivox.Events.LoginStatus.LoginAdded
      language: CSharp
      name:
        CSharp: LoginAdded
        VB: LoginAdded
      nameWithType:
        CSharp: LoginStatus.LoginAdded
        VB: LoginStatus.LoginAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginStatus.LoginAdded
        VB: EasyCodeForVivox.Events.LoginStatus.LoginAdded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoginAdded
        path: ''
        startLine: 6043
      summary: "\nEvent is invoked/fired when player is successfully logged into Vivox\n<p>A player can log in multiple times under different usernames. Each time a new LoginSession is created EasyCode will keep track of the newly added LoginSessions</p>\n<br>\n	You can access all current LoginSessions with <xref href=\"EasyCodeForVivox.EasySession\" data-throw-if-not-resolved=\"false\"></xref>\n</br>\n<example>\n<pre><code>    EasySession.LoginSessions[&quot;userName&quot;]</code></pre>\n</example>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.AccountId.html\">VivoxUnity.AccountId</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: LoginAdded = 4
          VB: LoginAdded = 4
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        EasyCodeForVivox.EasySession: 
    - id: EasyCodeForVivox.Events.LoginStatus.LoginRemoved
      commentId: F:EasyCodeForVivox.Events.LoginStatus.LoginRemoved
      language: CSharp
      name:
        CSharp: LoginRemoved
        VB: LoginRemoved
      nameWithType:
        CSharp: LoginStatus.LoginRemoved
        VB: LoginStatus.LoginRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginStatus.LoginRemoved
        VB: EasyCodeForVivox.Events.LoginStatus.LoginRemoved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoginRemoved
        path: ''
        startLine: 6058
      summary: "\nEvent is invoked/fired when player is successfully logged out of Vivox\n<p>EasyCode will keep track of LoginSessions and automatically remove the LoginSession of the logged out player</p>\n<br>\n	You can attempt to access a current LoginSession with <xref href=\"EasyCodeForVivox.EasySession\" data-throw-if-not-resolved=\"false\"></xref> to see if it exists. If it does <strong>loginSession</strong> will not be null\n</br>\n<example>\n<pre><code>    EasySession.LoginSessions.TryGetValue(&quot;userName&quot;, out ILoginSession loginSession);</code></pre>\n</example>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.AccountId.html\">VivoxUnity.AccountId</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: LoginRemoved = 5
          VB: LoginRemoved = 5
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        EasyCodeForVivox.EasySession: 
    - id: EasyCodeForVivox.Events.LoginStatus.LoginValuesUpdated
      commentId: F:EasyCodeForVivox.Events.LoginStatus.LoginValuesUpdated
      language: CSharp
      name:
        CSharp: LoginValuesUpdated
        VB: LoginValuesUpdated
      nameWithType:
        CSharp: LoginStatus.LoginValuesUpdated
        VB: LoginStatus.LoginValuesUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginStatus.LoginValuesUpdated
        VB: EasyCodeForVivox.Events.LoginStatus.LoginValuesUpdated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LoginValuesUpdated
        path: ''
        startLine: 6073
      summary: "\nEvent is invoked/fired when player LoginSession has changed such as player has changed their name\n<p>EasyCode will keep track of LoginSessions automatically</p>\n<br>\n	You can attempt to access a current LoginSession with EasySession to see if it exists. If it does <strong>loginSession</strong> will not be null\n</br>\n<example>\n<pre><code>	EasySession.LoginSessions.TryGetValue(&quot;userName&quot;, out ILoginSession loginSession);</code></pre>\n</example>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ILoginSession.html\">VivoxUnity.ILoginSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: LoginValuesUpdated = 6
          VB: LoginValuesUpdated = 6
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.LoginEventAttribute: 
      EasyCodeForVivox.Events.LoginEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.ChannelStatus
    commentId: T:EasyCodeForVivox.Events.ChannelStatus
    language: CSharp
    name:
      CSharp: ChannelStatus
      VB: ChannelStatus
    nameWithType:
      CSharp: ChannelStatus
      VB: ChannelStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.ChannelStatus
      VB: EasyCodeForVivox.Events.ChannelStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: ChannelStatus
      path: ''
      startLine: 6080
    summary: "\nThe type of <strong>Vivox Channel Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.ChannelEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.ChannelEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ChannelStatus
        VB: Public Enum ChannelStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.ChannelStatus.ChannelConnecting
      commentId: F:EasyCodeForVivox.Events.ChannelStatus.ChannelConnecting
      language: CSharp
      name:
        CSharp: ChannelConnecting
        VB: ChannelConnecting
      nameWithType:
        CSharp: ChannelStatus.ChannelConnecting
        VB: ChannelStatus.ChannelConnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelStatus.ChannelConnecting
        VB: EasyCodeForVivox.Events.ChannelStatus.ChannelConnecting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelConnecting
        path: ''
        startLine: 6088
      summary: "\nEvent is invoked/fired when player begins joining a Vivox Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: ChannelConnecting = 0
          VB: ChannelConnecting = 0
        return:
          type: EasyCodeForVivox.Events.ChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.ChannelStatus.ChannelConnected
      commentId: F:EasyCodeForVivox.Events.ChannelStatus.ChannelConnected
      language: CSharp
      name:
        CSharp: ChannelConnected
        VB: ChannelConnected
      nameWithType:
        CSharp: ChannelStatus.ChannelConnected
        VB: ChannelStatus.ChannelConnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelStatus.ChannelConnected
        VB: EasyCodeForVivox.Events.ChannelStatus.ChannelConnected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelConnected
        path: ''
        startLine: 6095
      summary: "\nEvent is invoked/fired when player has successfully joined a Vivox Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: ChannelConnected = 1
          VB: ChannelConnected = 1
        return:
          type: EasyCodeForVivox.Events.ChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnecting
      commentId: F:EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnecting
      language: CSharp
      name:
        CSharp: ChannelDisconnecting
        VB: ChannelDisconnecting
      nameWithType:
        CSharp: ChannelStatus.ChannelDisconnecting
        VB: ChannelStatus.ChannelDisconnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnecting
        VB: EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnecting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelDisconnecting
        path: ''
        startLine: 6102
      summary: "\nEvent is invoked/fired when player begins disconnecting from a Vivox Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: ChannelDisconnecting = 2
          VB: ChannelDisconnecting = 2
        return:
          type: EasyCodeForVivox.Events.ChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnected
      commentId: F:EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnected
      language: CSharp
      name:
        CSharp: ChannelDisconnected
        VB: ChannelDisconnected
      nameWithType:
        CSharp: ChannelStatus.ChannelDisconnected
        VB: ChannelStatus.ChannelDisconnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnected
        VB: EasyCodeForVivox.Events.ChannelStatus.ChannelDisconnected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelDisconnected
        path: ''
        startLine: 6109
      summary: "\nEvent is invoked/fired when player has successfully disconnected from a Vivox Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: ChannelDisconnected = 3
          VB: ChannelDisconnected = 3
        return:
          type: EasyCodeForVivox.Events.ChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.ChannelEventAttribute: 
      EasyCodeForVivox.Events.ChannelEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.AudioChannelStatus
    commentId: T:EasyCodeForVivox.Events.AudioChannelStatus
    language: CSharp
    name:
      CSharp: AudioChannelStatus
      VB: AudioChannelStatus
    nameWithType:
      CSharp: AudioChannelStatus
      VB: AudioChannelStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.AudioChannelStatus
      VB: EasyCodeForVivox.Events.AudioChannelStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: AudioChannelStatus
      path: ''
      startLine: 6117
    summary: "\nThe type of <strong>Vivox Audio Channel Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.AudioChannelEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum AudioChannelStatus
        VB: Public Enum AudioChannelStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnecting
      commentId: F:EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnecting
      language: CSharp
      name:
        CSharp: AudioChannelConnecting
        VB: AudioChannelConnecting
      nameWithType:
        CSharp: AudioChannelStatus.AudioChannelConnecting
        VB: AudioChannelStatus.AudioChannelConnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnecting
        VB: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnecting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelConnecting
        path: ''
        startLine: 6125
      summary: "\nEvent is invoked/fired when player begins joining a Vivox Audio Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioChannelConnecting = 0
          VB: AudioChannelConnecting = 0
        return:
          type: EasyCodeForVivox.Events.AudioChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnected
      commentId: F:EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnected
      language: CSharp
      name:
        CSharp: AudioChannelConnected
        VB: AudioChannelConnected
      nameWithType:
        CSharp: AudioChannelStatus.AudioChannelConnected
        VB: AudioChannelStatus.AudioChannelConnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnected
        VB: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelConnected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelConnected
        path: ''
        startLine: 6132
      summary: "\nEvent is invoked/fired when player has successfully joined a Vivox Audio Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioChannelConnected = 1
          VB: AudioChannelConnected = 1
        return:
          type: EasyCodeForVivox.Events.AudioChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnecting
      commentId: F:EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnecting
      language: CSharp
      name:
        CSharp: AudioChannelDisconnecting
        VB: AudioChannelDisconnecting
      nameWithType:
        CSharp: AudioChannelStatus.AudioChannelDisconnecting
        VB: AudioChannelStatus.AudioChannelDisconnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnecting
        VB: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnecting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelDisconnecting
        path: ''
        startLine: 6139
      summary: "\nEvent is invoked/fired when player begins disconnecting from a Vivox Audio Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioChannelDisconnecting = 2
          VB: AudioChannelDisconnecting = 2
        return:
          type: EasyCodeForVivox.Events.AudioChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnected
      commentId: F:EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnected
      language: CSharp
      name:
        CSharp: AudioChannelDisconnected
        VB: AudioChannelDisconnected
      nameWithType:
        CSharp: AudioChannelStatus.AudioChannelDisconnected
        VB: AudioChannelStatus.AudioChannelDisconnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnected
        VB: EasyCodeForVivox.Events.AudioChannelStatus.AudioChannelDisconnected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioChannelDisconnected
        path: ''
        startLine: 6146
      summary: "\nEvent is invoked/fired when player has successfully disconnected from a Vivox Audio Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioChannelDisconnected = 3
          VB: AudioChannelDisconnected = 3
        return:
          type: EasyCodeForVivox.Events.AudioChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.AudioChannelEventAttribute: 
      EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.TextChannelStatus
    commentId: T:EasyCodeForVivox.Events.TextChannelStatus
    language: CSharp
    name:
      CSharp: TextChannelStatus
      VB: TextChannelStatus
    nameWithType:
      CSharp: TextChannelStatus
      VB: TextChannelStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.TextChannelStatus
      VB: EasyCodeForVivox.Events.TextChannelStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: TextChannelStatus
      path: ''
      startLine: 6153
    summary: "\nThe type of <strong>Vivox Text Channel Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.TextChannelEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.TextChannelEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum TextChannelStatus
        VB: Public Enum TextChannelStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnecting
      commentId: F:EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnecting
      language: CSharp
      name:
        CSharp: TextChannelConnecting
        VB: TextChannelConnecting
      nameWithType:
        CSharp: TextChannelStatus.TextChannelConnecting
        VB: TextChannelStatus.TextChannelConnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnecting
        VB: EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnecting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelConnecting
        path: ''
        startLine: 6161
      summary: "\nEvent is invoked/fired when player begins joining a Vivox Text Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: TextChannelConnecting = 0
          VB: TextChannelConnecting = 0
        return:
          type: EasyCodeForVivox.Events.TextChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnected
      commentId: F:EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnected
      language: CSharp
      name:
        CSharp: TextChannelConnected
        VB: TextChannelConnected
      nameWithType:
        CSharp: TextChannelStatus.TextChannelConnected
        VB: TextChannelStatus.TextChannelConnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnected
        VB: EasyCodeForVivox.Events.TextChannelStatus.TextChannelConnected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelConnected
        path: ''
        startLine: 6168
      summary: "\nEvent is invoked/fired when player has successfully joined a Vivox Text Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: TextChannelConnected = 1
          VB: TextChannelConnected = 1
        return:
          type: EasyCodeForVivox.Events.TextChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnecting
      commentId: F:EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnecting
      language: CSharp
      name:
        CSharp: TextChannelDisconnecting
        VB: TextChannelDisconnecting
      nameWithType:
        CSharp: TextChannelStatus.TextChannelDisconnecting
        VB: TextChannelStatus.TextChannelDisconnecting
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnecting
        VB: EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnecting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelDisconnecting
        path: ''
        startLine: 6175
      summary: "\nEvent is invoked/fired when player begins disconnecting from a Vivox Text Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: TextChannelDisconnecting = 2
          VB: TextChannelDisconnecting = 2
        return:
          type: EasyCodeForVivox.Events.TextChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnected
      commentId: F:EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnected
      language: CSharp
      name:
        CSharp: TextChannelDisconnected
        VB: TextChannelDisconnected
      nameWithType:
        CSharp: TextChannelStatus.TextChannelDisconnected
        VB: TextChannelStatus.TextChannelDisconnected
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnected
        VB: EasyCodeForVivox.Events.TextChannelStatus.TextChannelDisconnected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TextChannelDisconnected
        path: ''
        startLine: 6182
      summary: "\nEvent is invoked/fired when player has successfully disconnected from a Vivox Text Channel\n<p>Will be fired for Echo, Non-Positional, and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelSession.html\">VivoxUnity.IChannelSession</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: TextChannelDisconnected = 3
          VB: TextChannelDisconnected = 3
        return:
          type: EasyCodeForVivox.Events.TextChannelStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.TextChannelEventAttribute: 
      EasyCodeForVivox.Events.TextChannelEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.ChannelMessageStatus
    commentId: T:EasyCodeForVivox.Events.ChannelMessageStatus
    language: CSharp
    name:
      CSharp: ChannelMessageStatus
      VB: ChannelMessageStatus
    nameWithType:
      CSharp: ChannelMessageStatus
      VB: ChannelMessageStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.ChannelMessageStatus
      VB: EasyCodeForVivox.Events.ChannelMessageStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: ChannelMessageStatus
      path: ''
      startLine: 6190
    summary: "\nThe type of <strong>Vivox Channel Message Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.ChannelMessageEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum ChannelMessageStatus
        VB: Public Enum ChannelMessageStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageRecieved
      commentId: F:EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageRecieved
      language: CSharp
      name:
        CSharp: ChannelMessageRecieved
        VB: ChannelMessageRecieved
      nameWithType:
        CSharp: ChannelMessageStatus.ChannelMessageRecieved
        VB: ChannelMessageStatus.ChannelMessageRecieved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageRecieved
        VB: EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageRecieved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelMessageRecieved
        path: ''
        startLine: 6198
      summary: "\nEvent is invoked/fired when player recieves a message from a connected Vivox Text Channel\n<p>Will be fired for Non-Positional and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelTextMessage.html\">VivoxUnity.IChannelTextMessage</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: ChannelMessageRecieved = 0
          VB: ChannelMessageRecieved = 0
        return:
          type: EasyCodeForVivox.Events.ChannelMessageStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageSent
      commentId: F:EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageSent
      language: CSharp
      name:
        CSharp: ChannelMessageSent
        VB: ChannelMessageSent
      nameWithType:
        CSharp: ChannelMessageStatus.ChannelMessageSent
        VB: ChannelMessageStatus.ChannelMessageSent
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageSent
        VB: EasyCodeForVivox.Events.ChannelMessageStatus.ChannelMessageSent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: ChannelMessageSent
        path: ''
        startLine: 6206
      summary: "\nEvent is invoked/fired when player sends a message from a connected Vivox Text Channel\n<p>Will be fired for Non-Positional and 3D Positional channels</p>\n<p>\nMethod must have <strong>0</strong> parameters\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: ChannelMessageSent = 1
          VB: ChannelMessageSent = 1
        return:
          type: EasyCodeForVivox.Events.ChannelMessageStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.ChannelMessageStatus.EventMessageRecieved
      commentId: F:EasyCodeForVivox.Events.ChannelMessageStatus.EventMessageRecieved
      language: CSharp
      name:
        CSharp: EventMessageRecieved
        VB: EventMessageRecieved
      nameWithType:
        CSharp: ChannelMessageStatus.EventMessageRecieved
        VB: ChannelMessageStatus.EventMessageRecieved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelMessageStatus.EventMessageRecieved
        VB: EasyCodeForVivox.Events.ChannelMessageStatus.EventMessageRecieved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: EventMessageRecieved
        path: ''
        startLine: 6214
      summary: "\nEvent is invoked/fired when developer wants to send a secret message in a connected Vivox Text Channel that players wont see\n<p>If using a networking stack like NetCodeForGameObjects it is better to send a message with NetCode than with Vivox</p>\n<p>Will be fired for Non-Positional and 3D Positional channels</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IChannelTextMessage.html\">VivoxUnity.IChannelTextMessage</a></p>\n"
      example: []
      syntax:
        content:
          CSharp: EventMessageRecieved = 2
          VB: EventMessageRecieved = 2
        return:
          type: EasyCodeForVivox.Events.ChannelMessageStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.ChannelMessageEventAttribute: 
      EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.DirectMessageStatus
    commentId: T:EasyCodeForVivox.Events.DirectMessageStatus
    language: CSharp
    name:
      CSharp: DirectMessageStatus
      VB: DirectMessageStatus
    nameWithType:
      CSharp: DirectMessageStatus
      VB: DirectMessageStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.DirectMessageStatus
      VB: EasyCodeForVivox.Events.DirectMessageStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: DirectMessageStatus
      path: ''
      startLine: 6221
    summary: "\nThe type of <strong>Vivox Direct Message Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.DirectMessageEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum DirectMessageStatus
        VB: Public Enum DirectMessageStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageSent
      commentId: F:EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageSent
      language: CSharp
      name:
        CSharp: DirectMessageSent
        VB: DirectMessageSent
      nameWithType:
        CSharp: DirectMessageStatus.DirectMessageSent
        VB: DirectMessageStatus.DirectMessageSent
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageSent
        VB: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageSent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: DirectMessageSent
        path: ''
        startLine: 6229
      summary: "\nEvent is invoked/fired when player recieves a direct message (DM) from another Vivox user who is logged in\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IDirectedTextMessage.html\">VivoxUnity.IDirectedTextMessage</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: DirectMessageSent = 0
          VB: DirectMessageSent = 0
        return:
          type: EasyCodeForVivox.Events.DirectMessageStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageRecieved
      commentId: F:EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageRecieved
      language: CSharp
      name:
        CSharp: DirectMessageRecieved
        VB: DirectMessageRecieved
      nameWithType:
        CSharp: DirectMessageStatus.DirectMessageRecieved
        VB: DirectMessageStatus.DirectMessageRecieved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageRecieved
        VB: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageRecieved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: DirectMessageRecieved
        path: ''
        startLine: 6236
      summary: "\nEvent is invoked/fired when player sends a direct message (DM) to another Vivox user who is logged in\n<p>\nMethod must have <strong>0</strong> parameters\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: DirectMessageRecieved = 1
          VB: DirectMessageRecieved = 1
        return:
          type: EasyCodeForVivox.Events.DirectMessageStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageFailed
      commentId: F:EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageFailed
      language: CSharp
      name:
        CSharp: DirectMessageFailed
        VB: DirectMessageFailed
      nameWithType:
        CSharp: DirectMessageStatus.DirectMessageFailed
        VB: DirectMessageStatus.DirectMessageFailed
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageFailed
        VB: EasyCodeForVivox.Events.DirectMessageStatus.DirectMessageFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: DirectMessageFailed
        path: ''
        startLine: 6248
      summary: "\nEvent is invoked/fired when player sends a direct message (DM) to another Vivox user who is <strong>not logged in</strong>. \n<p>\nVivox treats the message as failed and it is up to the developer to implement retries (sending the message again) or \nstoring the failed message on the player&apos;s computer in a SQLite Database, PlayerPrefs, or in a txt/json file. \nYou can also upload to the cloud using Unity&apos;s Cloud Save, AWS S3, or Database of your choice.\n</p>\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IDirectedTextMessage.html\">VivoxUnity.IFailedDirectedTextMessage</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: DirectMessageFailed = 2
          VB: DirectMessageFailed = 2
        return:
          type: EasyCodeForVivox.Events.DirectMessageStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.DirectMessageEventAttribute: 
      EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.UserStatus
    commentId: T:EasyCodeForVivox.Events.UserStatus
    language: CSharp
    name:
      CSharp: UserStatus
      VB: UserStatus
    nameWithType:
      CSharp: UserStatus
      VB: UserStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.UserStatus
      VB: EasyCodeForVivox.Events.UserStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: UserStatus
      path: ''
      startLine: 6256
    summary: "\nThe type of <strong>Vivox User Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.UserEventsAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.UserEventsAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum UserStatus
        VB: Public Enum UserStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.UserStatus.UserJoinedChannel
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserJoinedChannel
      language: CSharp
      name:
        CSharp: UserJoinedChannel
        VB: UserJoinedChannel
      nameWithType:
        CSharp: UserStatus.UserJoinedChannel
        VB: UserStatus.UserJoinedChannel
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserJoinedChannel
        VB: EasyCodeForVivox.Events.UserStatus.UserJoinedChannel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserJoinedChannel
        path: ''
        startLine: 6264
      summary: "\nEvent is invoked/fired when a player joins a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IParticipant.html\">VivoxUnity.IParticipant</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserJoinedChannel = 0
          VB: UserJoinedChannel = 0
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserLeftChannel
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserLeftChannel
      language: CSharp
      name:
        CSharp: UserLeftChannel
        VB: UserLeftChannel
      nameWithType:
        CSharp: UserStatus.UserLeftChannel
        VB: UserStatus.UserLeftChannel
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserLeftChannel
        VB: EasyCodeForVivox.Events.UserStatus.UserLeftChannel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserLeftChannel
        path: ''
        startLine: 6271
      summary: "\nEvent is invoked/fired when a player leaves a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IParticipant.html\">VivoxUnity.IParticipant</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserLeftChannel = 1
          VB: UserLeftChannel = 1
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserValuesUpdated
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserValuesUpdated
      language: CSharp
      name:
        CSharp: UserValuesUpdated
        VB: UserValuesUpdated
      nameWithType:
        CSharp: UserStatus.UserValuesUpdated
        VB: UserStatus.UserValuesUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserValuesUpdated
        VB: EasyCodeForVivox.Events.UserStatus.UserValuesUpdated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserValuesUpdated
        path: ''
        startLine: 6278
      summary: "\nEvent is invoked/fired when a players values get updated in a Vivox Channel such as being muted/unmuted\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IParticipant.html\">VivoxUnity.IParticipant</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserValuesUpdated = 2
          VB: UserValuesUpdated = 2
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserMuted
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserMuted
      language: CSharp
      name:
        CSharp: UserMuted
        VB: UserMuted
      nameWithType:
        CSharp: UserStatus.UserMuted
        VB: UserStatus.UserMuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserMuted
        VB: EasyCodeForVivox.Events.UserStatus.UserMuted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserMuted
        path: ''
        startLine: 6285
      summary: "\nEvent is invoked/fired when a player gets muted in a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IParticipant.html\">VivoxUnity.IParticipant</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserMuted = 3
          VB: UserMuted = 3
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserUnmuted
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserUnmuted
      language: CSharp
      name:
        CSharp: UserUnmuted
        VB: UserUnmuted
      nameWithType:
        CSharp: UserStatus.UserUnmuted
        VB: UserStatus.UserUnmuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserUnmuted
        VB: EasyCodeForVivox.Events.UserStatus.UserUnmuted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserUnmuted
        path: ''
        startLine: 6292
      summary: "\nEvent is invoked/fired when a player gets unmuted in a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IParticipant.html\">VivoxUnity.IParticipant</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserUnmuted = 4
          VB: UserUnmuted = 4
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserCrossMuted
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserCrossMuted
      language: CSharp
      name:
        CSharp: UserCrossMuted
        VB: UserCrossMuted
      nameWithType:
        CSharp: UserStatus.UserCrossMuted
        VB: UserStatus.UserCrossMuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserCrossMuted
        VB: EasyCodeForVivox.Events.UserStatus.UserCrossMuted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserCrossMuted
        path: ''
        startLine: 6299
      summary: "\nEvent is invoked/fired when a player gets cross muted in a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.AccountId.html\">VivoxUnity.AccountId</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserCrossMuted = 5
          VB: UserCrossMuted = 5
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserCrossUnmuted
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserCrossUnmuted
      language: CSharp
      name:
        CSharp: UserCrossUnmuted
        VB: UserCrossUnmuted
      nameWithType:
        CSharp: UserStatus.UserCrossUnmuted
        VB: UserStatus.UserCrossUnmuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserCrossUnmuted
        VB: EasyCodeForVivox.Events.UserStatus.UserCrossUnmuted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserCrossUnmuted
        path: ''
        startLine: 6306
      summary: "\nEvent is invoked/fired when a player gets cross unmuted in a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.AccountId.html\">VivoxUnity.AccountId</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserCrossUnmuted = 6
          VB: UserCrossUnmuted = 6
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserSpeaking
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserSpeaking
      language: CSharp
      name:
        CSharp: UserSpeaking
        VB: UserSpeaking
      nameWithType:
        CSharp: UserStatus.UserSpeaking
        VB: UserStatus.UserSpeaking
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserSpeaking
        VB: EasyCodeForVivox.Events.UserStatus.UserSpeaking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserSpeaking
        path: ''
        startLine: 6313
      summary: "\nEvent is invoked/fired when a player is speaking in a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IParticipant.html\">VivoxUnity.IParticipant</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserSpeaking = 7
          VB: UserSpeaking = 7
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.UserNotSpeaking
      commentId: F:EasyCodeForVivox.Events.UserStatus.UserNotSpeaking
      language: CSharp
      name:
        CSharp: UserNotSpeaking
        VB: UserNotSpeaking
      nameWithType:
        CSharp: UserStatus.UserNotSpeaking
        VB: UserStatus.UserNotSpeaking
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.UserNotSpeaking
        VB: EasyCodeForVivox.Events.UserStatus.UserNotSpeaking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: UserNotSpeaking
        path: ''
        startLine: 6320
      summary: "\nEvent is invoked/fired when a player stops speaking in a Vivox Channel\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IParticipant.html\">VivoxUnity.IParticipant</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: UserNotSpeaking = 8
          VB: UserNotSpeaking = 8
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.LocalUserMuted
      commentId: F:EasyCodeForVivox.Events.UserStatus.LocalUserMuted
      language: CSharp
      name:
        CSharp: LocalUserMuted
        VB: LocalUserMuted
      nameWithType:
        CSharp: UserStatus.LocalUserMuted
        VB: UserStatus.LocalUserMuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.LocalUserMuted
        VB: EasyCodeForVivox.Events.UserStatus.LocalUserMuted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LocalUserMuted
        path: ''
        startLine: 6327
      summary: "\nEvent is invoked/fired when the local player mutes themselves in a Vivox Channel\n<p>\nMethod must have <strong>0</strong> parameters\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: LocalUserMuted = 9
          VB: LocalUserMuted = 9
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.UserStatus.LocalUserUnmuted
      commentId: F:EasyCodeForVivox.Events.UserStatus.LocalUserUnmuted
      language: CSharp
      name:
        CSharp: LocalUserUnmuted
        VB: LocalUserUnmuted
      nameWithType:
        CSharp: UserStatus.LocalUserUnmuted
        VB: UserStatus.LocalUserUnmuted
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserStatus.LocalUserUnmuted
        VB: EasyCodeForVivox.Events.UserStatus.LocalUserUnmuted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LocalUserUnmuted
        path: ''
        startLine: 6334
      summary: "\nEvent is invoked/fired when the local player unmutes themselves in a Vivox Channel\n<p>\nMethod must have <strong>0</strong> parameters\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: LocalUserUnmuted = 10
          VB: LocalUserUnmuted = 10
        return:
          type: EasyCodeForVivox.Events.UserStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.UserEventsAttribute: 
      EasyCodeForVivox.Events.UserEventsAsyncAttribute: 
  - id: EasyCodeForVivox.Events.AudioDeviceStatus
    commentId: T:EasyCodeForVivox.Events.AudioDeviceStatus
    language: CSharp
    name:
      CSharp: AudioDeviceStatus
      VB: AudioDeviceStatus
    nameWithType:
      CSharp: AudioDeviceStatus
      VB: AudioDeviceStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.AudioDeviceStatus
      VB: EasyCodeForVivox.Events.AudioDeviceStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: AudioDeviceStatus
      path: ''
      startLine: 6341
    summary: "\nThe type of <strong>Vivox Audio Device Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.AudioDeviceEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum AudioDeviceStatus
        VB: Public Enum AudioDeviceStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceAdded
      commentId: F:EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceAdded
      language: CSharp
      name:
        CSharp: AudioInputDeviceAdded
        VB: AudioInputDeviceAdded
      nameWithType:
        CSharp: AudioDeviceStatus.AudioInputDeviceAdded
        VB: AudioDeviceStatus.AudioInputDeviceAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceAdded
        VB: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceAdded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioInputDeviceAdded
        path: ''
        startLine: 6349
      summary: "\nEvent is invoked/fired when Vivox detects a new Audio Input Device (Microphone) is connected to your pc/console/device\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IAudioDevice.html\">VivoxUnity.IAudioDevice</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioInputDeviceAdded = 0
          VB: AudioInputDeviceAdded = 0
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceRemoved
      commentId: F:EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceRemoved
      language: CSharp
      name:
        CSharp: AudioInputDeviceRemoved
        VB: AudioInputDeviceRemoved
      nameWithType:
        CSharp: AudioDeviceStatus.AudioInputDeviceRemoved
        VB: AudioDeviceStatus.AudioInputDeviceRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceRemoved
        VB: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceRemoved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioInputDeviceRemoved
        path: ''
        startLine: 6356
      summary: "\nEvent is invoked/fired when Vivox detects a new Audio Input Device (Microphone) is disconnected from your pc/console/device\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IAudioDevice.html\">VivoxUnity.IAudioDevice</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioInputDeviceRemoved = 1
          VB: AudioInputDeviceRemoved = 1
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceUpdated
      commentId: F:EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceUpdated
      language: CSharp
      name:
        CSharp: AudioInputDeviceUpdated
        VB: AudioInputDeviceUpdated
      nameWithType:
        CSharp: AudioDeviceStatus.AudioInputDeviceUpdated
        VB: AudioDeviceStatus.AudioInputDeviceUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceUpdated
        VB: EasyCodeForVivox.Events.AudioDeviceStatus.AudioInputDeviceUpdated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioInputDeviceUpdated
        path: ''
        startLine: 6363
      summary: "\nEvent is invoked/fired when Vivox detects a new Audio Input Device (Microphone) is updated on your pc/console/device\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IAudioDevice.html\">VivoxUnity.IAudioDevice</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioInputDeviceUpdated = 2
          VB: AudioInputDeviceUpdated = 2
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceAdded
      commentId: F:EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceAdded
      language: CSharp
      name:
        CSharp: AudioOutputDeviceAdded
        VB: AudioOutputDeviceAdded
      nameWithType:
        CSharp: AudioDeviceStatus.AudioOutputDeviceAdded
        VB: AudioDeviceStatus.AudioOutputDeviceAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceAdded
        VB: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceAdded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioOutputDeviceAdded
        path: ''
        startLine: 6370
      summary: "\nEvent is invoked/fired when Vivox detects a new Audio Output Device (Speaker/Headphones) is connected to your pc/console/device\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IAudioDevice.html\">VivoxUnity.IAudioDevice</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioOutputDeviceAdded = 3
          VB: AudioOutputDeviceAdded = 3
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceRemoved
      commentId: F:EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceRemoved
      language: CSharp
      name:
        CSharp: AudioOutputDeviceRemoved
        VB: AudioOutputDeviceRemoved
      nameWithType:
        CSharp: AudioDeviceStatus.AudioOutputDeviceRemoved
        VB: AudioDeviceStatus.AudioOutputDeviceRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceRemoved
        VB: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceRemoved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioOutputDeviceRemoved
        path: ''
        startLine: 6377
      summary: "\nEvent is invoked/fired when Vivox detects a new Audio Output Device (Speaker/Headphones) is disconnected from your pc/console/device\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IAudioDevice.html\">VivoxUnity.IAudioDevice</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioOutputDeviceRemoved = 4
          VB: AudioOutputDeviceRemoved = 4
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceUpdated
      commentId: F:EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceUpdated
      language: CSharp
      name:
        CSharp: AudioOutputDeviceUpdated
        VB: AudioOutputDeviceUpdated
      nameWithType:
        CSharp: AudioDeviceStatus.AudioOutputDeviceUpdated
        VB: AudioDeviceStatus.AudioOutputDeviceUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceUpdated
        VB: EasyCodeForVivox.Events.AudioDeviceStatus.AudioOutputDeviceUpdated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AudioOutputDeviceUpdated
        path: ''
        startLine: 6384
      summary: "\nEvent is invoked/fired when Vivox detects a new Audio Output Device (Speaker/Headphones) is updated on your pc/console/device\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.IAudioDevice.html\">VivoxUnity.IAudioDevice</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: AudioOutputDeviceUpdated = 5
          VB: AudioOutputDeviceUpdated = 5
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.AudioDeviceEventAttribute: 
      EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.TextToSpeechStatus
    commentId: T:EasyCodeForVivox.Events.TextToSpeechStatus
    language: CSharp
    name:
      CSharp: TextToSpeechStatus
      VB: TextToSpeechStatus
    nameWithType:
      CSharp: TextToSpeechStatus
      VB: TextToSpeechStatus
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.TextToSpeechStatus
      VB: EasyCodeForVivox.Events.TextToSpeechStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: TextToSpeechStatus
      path: ''
      startLine: 6391
    summary: "\nThe type of <strong>Vivox Text-to-Speech Event</strong> that you want this method to be subscribed to. Works for <xref href=\"EasyCodeForVivox.Events.TextToSpeechEventAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: public enum TextToSpeechStatus
        VB: Public Enum TextToSpeechStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageAdded
      commentId: F:EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageAdded
      language: CSharp
      name:
        CSharp: TTSMessageAdded
        VB: TTSMessageAdded
      nameWithType:
        CSharp: TextToSpeechStatus.TTSMessageAdded
        VB: TextToSpeechStatus.TTSMessageAdded
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageAdded
        VB: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageAdded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TTSMessageAdded
        path: ''
        startLine: 6399
      summary: "\nEvent is invoked/fired when a Text-To-Speech message is added to the queue and is spoken/played\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ITTSMessageQueueEventArgs.html\">VivoxUnity.ITTSMessageQueueEventArgs</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: TTSMessageAdded = 0
          VB: TTSMessageAdded = 0
        return:
          type: EasyCodeForVivox.Events.TextToSpeechStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageRemoved
      commentId: F:EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageRemoved
      language: CSharp
      name:
        CSharp: TTSMessageRemoved
        VB: TTSMessageRemoved
      nameWithType:
        CSharp: TextToSpeechStatus.TTSMessageRemoved
        VB: TextToSpeechStatus.TTSMessageRemoved
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageRemoved
        VB: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageRemoved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TTSMessageRemoved
        path: ''
        startLine: 6406
      summary: "\nEvent is invoked/fired when a Text-To-Speech message is removed from the queue and is disposed of or canceled\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ITTSMessageQueueEventArgs.html\">VivoxUnity.ITTSMessageQueueEventArgs</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: TTSMessageRemoved = 1
          VB: TTSMessageRemoved = 1
        return:
          type: EasyCodeForVivox.Events.TextToSpeechStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageUpdated
      commentId: F:EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageUpdated
      language: CSharp
      name:
        CSharp: TTSMessageUpdated
        VB: TTSMessageUpdated
      nameWithType:
        CSharp: TextToSpeechStatus.TTSMessageUpdated
        VB: TextToSpeechStatus.TTSMessageUpdated
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageUpdated
        VB: EasyCodeForVivox.Events.TextToSpeechStatus.TTSMessageUpdated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: TTSMessageUpdated
        path: ''
        startLine: 6413
      summary: "\nEvent is invoked/fired when a Text-To-Speech message is removed from queue and begins to play\n<p>\nMethod must contain only <strong>1</strong> parameter of type <a href=\"https://docs.unity3d.com/Packages/com.unity.services.vivox@15.1/api/VivoxUnity.ITTSMessageQueueEventArgs.html\">VivoxUnity.ITTSMessageQueueEventArgs</a>\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: TTSMessageUpdated = 2
          VB: TTSMessageUpdated = 2
        return:
          type: EasyCodeForVivox.Events.TextToSpeechStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      EasyCodeForVivox.Events.TextToSpeechEventAttribute: 
      EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute: 
  - id: EasyCodeForVivox.Events.LoginEventAttribute
    commentId: T:EasyCodeForVivox.Events.LoginEventAttribute
    language: CSharp
    name:
      CSharp: LoginEventAttribute
      VB: LoginEventAttribute
    nameWithType:
      CSharp: LoginEventAttribute
      VB: LoginEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.LoginEventAttribute
      VB: EasyCodeForVivox.Events.LoginEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: LoginEventAttribute
      path: ''
      startLine: 6527
    summary: "\nPlace this on a method to subscribe to Vivox Login Events\n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.LoginStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<example>\n<pre><code>[LoginEvent(LoginStatus.LoggedIn)]&quot;\npublic void UserLoggedIn(ILoginSession loginSession)\n{\n    $&quot;Logged In {loginSession.LoginSessionId.DisplayName}&quot;;\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/login_events.html\"> Login Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LoginEventAttribute : Attribute'
        VB: >-
          Public Class LoginEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.LoginEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.LoginEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: LoginEventAttribute.Options
        VB: LoginEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginEventAttribute.Options
        VB: EasyCodeForVivox.Events.LoginEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6530
      syntax:
        content:
          CSharp: public LoginStatus Options { get; set; }
          VB: Public Property Options As LoginStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.LoginStatus
      overload: EasyCodeForVivox.Events.LoginEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.LoginEventAttribute.#ctor(EasyCodeForVivox.Events.LoginStatus)
      commentId: M:EasyCodeForVivox.Events.LoginEventAttribute.#ctor(EasyCodeForVivox.Events.LoginStatus)
      language: CSharp
      name:
        CSharp: LoginEventAttribute(LoginStatus)
        VB: LoginEventAttribute(LoginStatus)
      nameWithType:
        CSharp: LoginEventAttribute.LoginEventAttribute(LoginStatus)
        VB: LoginEventAttribute.LoginEventAttribute(LoginStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.LoginEventAttribute.LoginEventAttribute(EasyCodeForVivox.Events.LoginStatus)
        VB: EasyCodeForVivox.Events.LoginEventAttribute.LoginEventAttribute(EasyCodeForVivox.Events.LoginStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6532
      syntax:
        content:
          CSharp: public LoginEventAttribute(LoginStatus options)
          VB: Public Sub New(options As LoginStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.LoginStatus
      overload: EasyCodeForVivox.Events.LoginEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.LoginStatus: 
  - id: EasyCodeForVivox.Events.ChannelEventAttribute
    commentId: T:EasyCodeForVivox.Events.ChannelEventAttribute
    language: CSharp
    name:
      CSharp: ChannelEventAttribute
      VB: ChannelEventAttribute
    nameWithType:
      CSharp: ChannelEventAttribute
      VB: ChannelEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.ChannelEventAttribute
      VB: EasyCodeForVivox.Events.ChannelEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: ChannelEventAttribute
      path: ''
      startLine: 6561
    summary: "\nPlace this on a method to subscribe to Vivox Channel Events \n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.ChannelStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\n	Example Method\n</br>\n<example>\n<pre><code>[ChannelEvent(ChannelStatus.ChannelConnected)]\nprivate void OnChannelConnected(IChannelSession channelSession)\n{\n    Debug.Log($&quot;{channelSession.Channel.Name} Has Connected : Channel Type == {channelSession.Channel.Type}&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/channel_events.html\"> Channel Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ChannelEventAttribute : Attribute'
        VB: >-
          Public Class ChannelEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.ChannelEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.ChannelEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: ChannelEventAttribute.Options
        VB: ChannelEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelEventAttribute.Options
        VB: EasyCodeForVivox.Events.ChannelEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6564
      syntax:
        content:
          CSharp: public ChannelStatus Options { get; set; }
          VB: Public Property Options As ChannelStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.ChannelStatus
      overload: EasyCodeForVivox.Events.ChannelEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.ChannelEventAttribute.#ctor(EasyCodeForVivox.Events.ChannelStatus)
      commentId: M:EasyCodeForVivox.Events.ChannelEventAttribute.#ctor(EasyCodeForVivox.Events.ChannelStatus)
      language: CSharp
      name:
        CSharp: ChannelEventAttribute(ChannelStatus)
        VB: ChannelEventAttribute(ChannelStatus)
      nameWithType:
        CSharp: ChannelEventAttribute.ChannelEventAttribute(ChannelStatus)
        VB: ChannelEventAttribute.ChannelEventAttribute(ChannelStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelEventAttribute.ChannelEventAttribute(EasyCodeForVivox.Events.ChannelStatus)
        VB: EasyCodeForVivox.Events.ChannelEventAttribute.ChannelEventAttribute(EasyCodeForVivox.Events.ChannelStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6566
      syntax:
        content:
          CSharp: public ChannelEventAttribute(ChannelStatus options)
          VB: Public Sub New(options As ChannelStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.ChannelStatus
      overload: EasyCodeForVivox.Events.ChannelEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.ChannelStatus: 
  - id: EasyCodeForVivox.Events.AudioChannelEventAttribute
    commentId: T:EasyCodeForVivox.Events.AudioChannelEventAttribute
    language: CSharp
    name:
      CSharp: AudioChannelEventAttribute
      VB: AudioChannelEventAttribute
    nameWithType:
      CSharp: AudioChannelEventAttribute
      VB: AudioChannelEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.AudioChannelEventAttribute
      VB: EasyCodeForVivox.Events.AudioChannelEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: AudioChannelEventAttribute
      path: ''
      startLine: 6594
    summary: "\nPlace this on a method to subscribe to Vivox Audio Channel Events \n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.AudioChannelStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\n	Example Method\n</br>\n<example>\n<pre><code>[AudioChannelEvent(AudioChannelStatus.AudioChannelConnecting)]\nprivate void OnAudioChannelConnecting(IChannelSession channelSession)\n{\n	Debug.Log($&quot;{channelSession.Channel.Name} Is Connecting&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/audio_channel_events.html\"> Audio Channel Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioChannelEventAttribute : Attribute'
        VB: >-
          Public Class AudioChannelEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.AudioChannelEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: AudioChannelEventAttribute.Options
        VB: AudioChannelEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options
        VB: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6597
      syntax:
        content:
          CSharp: public AudioChannelStatus Options { get; set; }
          VB: Public Property Options As AudioChannelStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.AudioChannelStatus
      overload: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.AudioChannelEventAttribute.#ctor(EasyCodeForVivox.Events.AudioChannelStatus)
      commentId: M:EasyCodeForVivox.Events.AudioChannelEventAttribute.#ctor(EasyCodeForVivox.Events.AudioChannelStatus)
      language: CSharp
      name:
        CSharp: AudioChannelEventAttribute(AudioChannelStatus)
        VB: AudioChannelEventAttribute(AudioChannelStatus)
      nameWithType:
        CSharp: AudioChannelEventAttribute.AudioChannelEventAttribute(AudioChannelStatus)
        VB: AudioChannelEventAttribute.AudioChannelEventAttribute(AudioChannelStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioChannelEventAttribute.AudioChannelEventAttribute(EasyCodeForVivox.Events.AudioChannelStatus)
        VB: EasyCodeForVivox.Events.AudioChannelEventAttribute.AudioChannelEventAttribute(EasyCodeForVivox.Events.AudioChannelStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6599
      syntax:
        content:
          CSharp: public AudioChannelEventAttribute(AudioChannelStatus options)
          VB: Public Sub New(options As AudioChannelStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.AudioChannelStatus
      overload: EasyCodeForVivox.Events.AudioChannelEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.AudioChannelStatus: 
  - id: EasyCodeForVivox.Events.TextChannelEventAttribute
    commentId: T:EasyCodeForVivox.Events.TextChannelEventAttribute
    language: CSharp
    name:
      CSharp: TextChannelEventAttribute
      VB: TextChannelEventAttribute
    nameWithType:
      CSharp: TextChannelEventAttribute
      VB: TextChannelEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.TextChannelEventAttribute
      VB: EasyCodeForVivox.Events.TextChannelEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: TextChannelEventAttribute
      path: ''
      startLine: 6627
    summary: "\nPlace this on a method to subscribe to Vivox Text Channel Events \n<p>\n	Method will be called when chosen <xref href=\"EasyCodeForVivox.Events.TextChannelStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\n	Example Method\n</br>\n<example>\n<pre><code>[TextChannelEvent(TextChannelStatus.TextChannelConnecting)]\nprivate void OnTextChannelConnecting(IChannelSession channelSession)\n{\n	Debug.Log($&quot;{channelSession.Channel.Name} Is Connecting&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/text_channel_events.html\"> Text Channel Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextChannelEventAttribute : Attribute'
        VB: >-
          Public Class TextChannelEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.TextChannelEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.TextChannelEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: TextChannelEventAttribute.Options
        VB: TextChannelEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelEventAttribute.Options
        VB: EasyCodeForVivox.Events.TextChannelEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6630
      syntax:
        content:
          CSharp: public TextChannelStatus Options { get; set; }
          VB: Public Property Options As TextChannelStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.TextChannelStatus
      overload: EasyCodeForVivox.Events.TextChannelEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.TextChannelEventAttribute.#ctor(EasyCodeForVivox.Events.TextChannelStatus)
      commentId: M:EasyCodeForVivox.Events.TextChannelEventAttribute.#ctor(EasyCodeForVivox.Events.TextChannelStatus)
      language: CSharp
      name:
        CSharp: TextChannelEventAttribute(TextChannelStatus)
        VB: TextChannelEventAttribute(TextChannelStatus)
      nameWithType:
        CSharp: TextChannelEventAttribute.TextChannelEventAttribute(TextChannelStatus)
        VB: TextChannelEventAttribute.TextChannelEventAttribute(TextChannelStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextChannelEventAttribute.TextChannelEventAttribute(EasyCodeForVivox.Events.TextChannelStatus)
        VB: EasyCodeForVivox.Events.TextChannelEventAttribute.TextChannelEventAttribute(EasyCodeForVivox.Events.TextChannelStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6632
      syntax:
        content:
          CSharp: public TextChannelEventAttribute(TextChannelStatus options)
          VB: Public Sub New(options As TextChannelStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.TextChannelStatus
      overload: EasyCodeForVivox.Events.TextChannelEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.TextChannelStatus: 
  - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute
    commentId: T:EasyCodeForVivox.Events.ChannelMessageEventAttribute
    language: CSharp
    name:
      CSharp: ChannelMessageEventAttribute
      VB: ChannelMessageEventAttribute
    nameWithType:
      CSharp: ChannelMessageEventAttribute
      VB: ChannelMessageEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.ChannelMessageEventAttribute
      VB: EasyCodeForVivox.Events.ChannelMessageEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: ChannelMessageEventAttribute
      path: ''
      startLine: 6660
    summary: "\nPlace this on a method to subscribe to Vivox Channel Message Events\n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.ChannelMessageStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\nExample Method\n</br>\n<example>\n<pre><code>[ChannelMessageEvent(ChannelMessageStatus.ChannelMessageRecieved)]\nprivate void OnChannelMessageRecieved(IChannelTextMessage textMessage)\n{\n    Debug.Log($&quot;From {textMessage.Sender.DisplayName} : {textMessage.ReceivedTime} : {textMessage.Message}&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/channel_message_events.html\"> Channel Message Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ChannelMessageEventAttribute : Attribute'
        VB: >-
          Public Class ChannelMessageEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: ChannelMessageEventAttribute.Options
        VB: ChannelMessageEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options
        VB: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6663
      syntax:
        content:
          CSharp: public ChannelMessageStatus Options { get; set; }
          VB: Public Property Options As ChannelMessageStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.ChannelMessageStatus
      overload: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute.#ctor(EasyCodeForVivox.Events.ChannelMessageStatus)
      commentId: M:EasyCodeForVivox.Events.ChannelMessageEventAttribute.#ctor(EasyCodeForVivox.Events.ChannelMessageStatus)
      language: CSharp
      name:
        CSharp: ChannelMessageEventAttribute(ChannelMessageStatus)
        VB: ChannelMessageEventAttribute(ChannelMessageStatus)
      nameWithType:
        CSharp: ChannelMessageEventAttribute.ChannelMessageEventAttribute(ChannelMessageStatus)
        VB: ChannelMessageEventAttribute.ChannelMessageEventAttribute(ChannelMessageStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.ChannelMessageEventAttribute.ChannelMessageEventAttribute(EasyCodeForVivox.Events.ChannelMessageStatus)
        VB: EasyCodeForVivox.Events.ChannelMessageEventAttribute.ChannelMessageEventAttribute(EasyCodeForVivox.Events.ChannelMessageStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6665
      syntax:
        content:
          CSharp: public ChannelMessageEventAttribute(ChannelMessageStatus options)
          VB: Public Sub New(options As ChannelMessageStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.ChannelMessageStatus
      overload: EasyCodeForVivox.Events.ChannelMessageEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.ChannelMessageStatus: 
  - id: EasyCodeForVivox.Events.DirectMessageEventAttribute
    commentId: T:EasyCodeForVivox.Events.DirectMessageEventAttribute
    language: CSharp
    name:
      CSharp: DirectMessageEventAttribute
      VB: DirectMessageEventAttribute
    nameWithType:
      CSharp: DirectMessageEventAttribute
      VB: DirectMessageEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.DirectMessageEventAttribute
      VB: EasyCodeForVivox.Events.DirectMessageEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: DirectMessageEventAttribute
      path: ''
      startLine: 6693
    summary: "\nPlace this on a method to subscribe to Vivox Direct Message Events \n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.DirectMessageStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\nExample Method\n</br>\n<example>\n<pre><code>[DirectMessageEvent(DirectMessageStatus.DirectMessageRecieved)]\nprivate void OnDirectMessageRecieved(IDirectedTextMessage directedTextMessage)\n{\n    Debug.Log($&quot;Recived Message From : {directedTextMessage.Sender.DisplayName} : {directedTextMessage.ReceivedTime} : {directedTextMessage.Message}&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/directed_message_events.html\"> Directed Message Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DirectMessageEventAttribute : Attribute'
        VB: >-
          Public Class DirectMessageEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.DirectMessageEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: DirectMessageEventAttribute.Options
        VB: DirectMessageEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options
        VB: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6696
      syntax:
        content:
          CSharp: public DirectMessageStatus Options { get; set; }
          VB: Public Property Options As DirectMessageStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.DirectMessageStatus
      overload: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.DirectMessageEventAttribute.#ctor(EasyCodeForVivox.Events.DirectMessageStatus)
      commentId: M:EasyCodeForVivox.Events.DirectMessageEventAttribute.#ctor(EasyCodeForVivox.Events.DirectMessageStatus)
      language: CSharp
      name:
        CSharp: DirectMessageEventAttribute(DirectMessageStatus)
        VB: DirectMessageEventAttribute(DirectMessageStatus)
      nameWithType:
        CSharp: DirectMessageEventAttribute.DirectMessageEventAttribute(DirectMessageStatus)
        VB: DirectMessageEventAttribute.DirectMessageEventAttribute(DirectMessageStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.DirectMessageEventAttribute.DirectMessageEventAttribute(EasyCodeForVivox.Events.DirectMessageStatus)
        VB: EasyCodeForVivox.Events.DirectMessageEventAttribute.DirectMessageEventAttribute(EasyCodeForVivox.Events.DirectMessageStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6698
      syntax:
        content:
          CSharp: public DirectMessageEventAttribute(DirectMessageStatus options)
          VB: Public Sub New(options As DirectMessageStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.DirectMessageStatus
      overload: EasyCodeForVivox.Events.DirectMessageEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.DirectMessageStatus: 
  - id: EasyCodeForVivox.Events.UserEventsAttribute
    commentId: T:EasyCodeForVivox.Events.UserEventsAttribute
    language: CSharp
    name:
      CSharp: UserEventsAttribute
      VB: UserEventsAttribute
    nameWithType:
      CSharp: UserEventsAttribute
      VB: UserEventsAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.UserEventsAttribute
      VB: EasyCodeForVivox.Events.UserEventsAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: UserEventsAttribute
      path: ''
      startLine: 6729
    summary: "\nPlace this on a method to subscribe to Vivox User Events \n<p>\nOnline Docs (<a href=\"https://fullstackindie.gitbook.io/easy-code-for-vivox/easy-code-for-vivox/how-do-i-do-this-in-easycode/subscribe-to-user-events#dynamic-events-1\">Dynamic Events - User Participant Events</a>)\n</p>\n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.UserStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\nExample Method\n</br>\n<example>\n<pre><code>[UserEvents(UserStatus.UserMuted)]\nprivate void OnUserMuted(IParticipant participant)\n{\n    Debug.Log($&quot;{participant.Account.DisplayName} Is Muted : (Muted For All : {participant.IsMutedForAll})&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/user_events.html\"> User Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class UserEventsAttribute : Attribute'
        VB: >-
          Public Class UserEventsAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.UserEventsAttribute.Options
      commentId: P:EasyCodeForVivox.Events.UserEventsAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: UserEventsAttribute.Options
        VB: UserEventsAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserEventsAttribute.Options
        VB: EasyCodeForVivox.Events.UserEventsAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6732
      syntax:
        content:
          CSharp: public UserStatus Options { get; set; }
          VB: Public Property Options As UserStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.UserStatus
      overload: EasyCodeForVivox.Events.UserEventsAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.UserEventsAttribute.#ctor(EasyCodeForVivox.Events.UserStatus)
      commentId: M:EasyCodeForVivox.Events.UserEventsAttribute.#ctor(EasyCodeForVivox.Events.UserStatus)
      language: CSharp
      name:
        CSharp: UserEventsAttribute(UserStatus)
        VB: UserEventsAttribute(UserStatus)
      nameWithType:
        CSharp: UserEventsAttribute.UserEventsAttribute(UserStatus)
        VB: UserEventsAttribute.UserEventsAttribute(UserStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.UserEventsAttribute.UserEventsAttribute(EasyCodeForVivox.Events.UserStatus)
        VB: EasyCodeForVivox.Events.UserEventsAttribute.UserEventsAttribute(EasyCodeForVivox.Events.UserStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6734
      syntax:
        content:
          CSharp: public UserEventsAttribute(UserStatus options)
          VB: Public Sub New(options As UserStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.UserStatus
      overload: EasyCodeForVivox.Events.UserEventsAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.UserStatus: 
  - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute
    commentId: T:EasyCodeForVivox.Events.AudioDeviceEventAttribute
    language: CSharp
    name:
      CSharp: AudioDeviceEventAttribute
      VB: AudioDeviceEventAttribute
    nameWithType:
      CSharp: AudioDeviceEventAttribute
      VB: AudioDeviceEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.AudioDeviceEventAttribute
      VB: EasyCodeForVivox.Events.AudioDeviceEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: AudioDeviceEventAttribute
      path: ''
      startLine: 6762
    summary: "\nPlace this on a method to subscribe to Vivox Audio Device Events\n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.AudioDeviceStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\nExample Method\n</br>\n<example>\n<pre><code>[AudioDeviceEvent(AudioDeviceStatus.AudioInputDeviceAdded)]\nprivate void OnAudioInputDeviceAdded(IAudioDevice audioDevice)\n{\n    Debug.Log($&quot;Audio Input device has been added {audioDevice?.Name}&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/audio_device_events.html\"> Audio Device Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioDeviceEventAttribute : Attribute'
        VB: >-
          Public Class AudioDeviceEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: AudioDeviceEventAttribute.Options
        VB: AudioDeviceEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options
        VB: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6765
      syntax:
        content:
          CSharp: public AudioDeviceStatus Options { get; set; }
          VB: Public Property Options As AudioDeviceStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      overload: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute.#ctor(EasyCodeForVivox.Events.AudioDeviceStatus)
      commentId: M:EasyCodeForVivox.Events.AudioDeviceEventAttribute.#ctor(EasyCodeForVivox.Events.AudioDeviceStatus)
      language: CSharp
      name:
        CSharp: AudioDeviceEventAttribute(AudioDeviceStatus)
        VB: AudioDeviceEventAttribute(AudioDeviceStatus)
      nameWithType:
        CSharp: AudioDeviceEventAttribute.AudioDeviceEventAttribute(AudioDeviceStatus)
        VB: AudioDeviceEventAttribute.AudioDeviceEventAttribute(AudioDeviceStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.AudioDeviceEventAttribute.AudioDeviceEventAttribute(EasyCodeForVivox.Events.AudioDeviceStatus)
        VB: EasyCodeForVivox.Events.AudioDeviceEventAttribute.AudioDeviceEventAttribute(EasyCodeForVivox.Events.AudioDeviceStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6767
      syntax:
        content:
          CSharp: public AudioDeviceEventAttribute(AudioDeviceStatus options)
          VB: Public Sub New(options As AudioDeviceStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.AudioDeviceStatus
      overload: EasyCodeForVivox.Events.AudioDeviceEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.AudioDeviceStatus: 
  - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute
    commentId: T:EasyCodeForVivox.Events.TextToSpeechEventAttribute
    language: CSharp
    name:
      CSharp: TextToSpeechEventAttribute
      VB: TextToSpeechEventAttribute
    nameWithType:
      CSharp: TextToSpeechEventAttribute
      VB: TextToSpeechEventAttribute
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.TextToSpeechEventAttribute
      VB: EasyCodeForVivox.Events.TextToSpeechEventAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: TextToSpeechEventAttribute
      path: ''
      startLine: 6795
    summary: "\nPlace this on a method to subscribe to Vivox Text-To-Speech Events\n<p>\nMethod will be called when chosen <xref href=\"EasyCodeForVivox.Events.TextToSpeechStatus\" data-throw-if-not-resolved=\"false\"></xref> event happens\n</p>\n<br>\nExample Method\n</br>\n<example>\n<pre><code>[TextToSpeechEvent(TextToSpeechStatus.TTSMessageAdded)]\nprivate void OnTTSMessageAdded(ITTSMessageQueueEventArgs ttsArgs)\n{\n    Debug.Log($&quot;TTS Message Has Been Added : {ttsArgs.Message.Text}&quot;);\n}</code></pre>\n</example>\n<p>\nCheck out the Docs <a href=\"/docs/events/tts_events.html\"> Text To Speech Events</a>\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextToSpeechEventAttribute : Attribute'
        VB: >-
          Public Class TextToSpeechEventAttribute

              Inherits Attribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options
      commentId: P:EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options
      language: CSharp
      name:
        CSharp: Options
        VB: Options
      nameWithType:
        CSharp: TextToSpeechEventAttribute.Options
        VB: TextToSpeechEventAttribute.Options
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options
        VB: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Options
        path: ''
        startLine: 6798
      syntax:
        content:
          CSharp: public TextToSpeechStatus Options { get; set; }
          VB: Public Property Options As TextToSpeechStatus
        parameters: []
        return:
          type: EasyCodeForVivox.Events.TextToSpeechStatus
      overload: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute.#ctor(EasyCodeForVivox.Events.TextToSpeechStatus)
      commentId: M:EasyCodeForVivox.Events.TextToSpeechEventAttribute.#ctor(EasyCodeForVivox.Events.TextToSpeechStatus)
      language: CSharp
      name:
        CSharp: TextToSpeechEventAttribute(TextToSpeechStatus)
        VB: TextToSpeechEventAttribute(TextToSpeechStatus)
      nameWithType:
        CSharp: TextToSpeechEventAttribute.TextToSpeechEventAttribute(TextToSpeechStatus)
        VB: TextToSpeechEventAttribute.TextToSpeechEventAttribute(TextToSpeechStatus)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.TextToSpeechEventAttribute.TextToSpeechEventAttribute(EasyCodeForVivox.Events.TextToSpeechStatus)
        VB: EasyCodeForVivox.Events.TextToSpeechEventAttribute.TextToSpeechEventAttribute(EasyCodeForVivox.Events.TextToSpeechStatus)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: .ctor
        path: ''
        startLine: 6800
      syntax:
        content:
          CSharp: public TextToSpeechEventAttribute(TextToSpeechStatus options)
          VB: Public Sub New(options As TextToSpeechStatus)
        parameters:
        - id: options
          type: EasyCodeForVivox.Events.TextToSpeechStatus
      overload: EasyCodeForVivox.Events.TextToSpeechEventAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      EasyCodeForVivox.Events.TextToSpeechStatus: 
  - id: EasyCodeForVivox.Events.HandleDynamicEvents
    commentId: T:EasyCodeForVivox.Events.HandleDynamicEvents
    language: CSharp
    name:
      CSharp: HandleDynamicEvents
      VB: HandleDynamicEvents
    nameWithType:
      CSharp: HandleDynamicEvents
      VB: HandleDynamicEvents
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.HandleDynamicEvents
      VB: EasyCodeForVivox.Events.HandleDynamicEvents
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events
    source:
      id: HandleDynamicEvents
      path: ''
      startLine: 6820
    syntax:
      content:
        CSharp: public static class HandleDynamicEvents
        VB: Public Module HandleDynamicEvents
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.InternalAssemblyNames
      commentId: F:EasyCodeForVivox.Events.HandleDynamicEvents.InternalAssemblyNames
      language: CSharp
      name:
        CSharp: InternalAssemblyNames
        VB: InternalAssemblyNames
      nameWithType:
        CSharp: HandleDynamicEvents.InternalAssemblyNames
        VB: HandleDynamicEvents.InternalAssemblyNames
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.InternalAssemblyNames
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.InternalAssemblyNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: InternalAssemblyNames
        path: ''
        startLine: 6822
      syntax:
        content:
          CSharp: public static readonly HashSet<string> InternalAssemblyNames
          VB: Public Shared ReadOnly InternalAssemblyNames As HashSet(Of String)
        return:
          type: HashSet{System.String}
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.Methods
      commentId: F:EasyCodeForVivox.Events.HandleDynamicEvents.Methods
      language: CSharp
      name:
        CSharp: Methods
        VB: Methods
      nameWithType:
        CSharp: HandleDynamicEvents.Methods
        VB: HandleDynamicEvents.Methods
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.Methods
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.Methods
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: Methods
        path: ''
        startLine: 6979
      syntax:
        content:
          CSharp: public static Dictionary<Enum, List<MethodInfo>> Methods
          VB: Public Shared Methods As Dictionary(Of  Enum, List(Of MethodInfo))
        return:
          type: Dictionary{Enum,List{MethodInfo}}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents(List{System.String},System.Boolean,System.Boolean)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents(List{System.String},System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: RegisterEvents(List<String>, Boolean, Boolean)
        VB: RegisterEvents(List(Of String), Boolean, Boolean)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterEvents(List<String>, Boolean, Boolean)
        VB: HandleDynamicEvents.RegisterEvents(List(Of String), Boolean, Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents(List<System.String>, System.Boolean, System.Boolean)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents(List(Of System.String), System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterEvents
        path: ''
        startLine: 6981
      syntax:
        content:
          CSharp: public static Task RegisterEvents(List<string> onlySearchTheseAssemblies, bool logAssemblySearches = true, bool logAllDynamicMethods = false)
          VB: Public Shared Function RegisterEvents(onlySearchTheseAssemblies As List(Of String), logAssemblySearches As Boolean = True, logAllDynamicMethods As Boolean = False) As Task
        parameters:
        - id: onlySearchTheseAssemblies
          type: List{System.String}
        - id: logAssemblySearches
          type: System.Boolean
        - id: logAllDynamicMethods
          type: System.Boolean
        return:
          type: Task
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount(System.Boolean)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount(System.Boolean)
      language: CSharp
      name:
        CSharp: LogRegisteredEventsCount(Boolean)
        VB: LogRegisteredEventsCount(Boolean)
      nameWithType:
        CSharp: HandleDynamicEvents.LogRegisteredEventsCount(Boolean)
        VB: HandleDynamicEvents.LogRegisteredEventsCount(Boolean)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount(System.Boolean)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: LogRegisteredEventsCount
        path: ''
        startLine: 7030
      syntax:
        content:
          CSharp: public static void LogRegisteredEventsCount(bool logAllDynamicMethods)
          VB: Public Shared Sub LogRegisteredEventsCount(logAllDynamicMethods As Boolean)
        parameters:
        - id: logAllDynamicMethods
          type: System.Boolean
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent(Enum,MethodInfo)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent(Enum,MethodInfo)
      language: CSharp
      name:
        CSharp: AddDynamicEvent(Enum, MethodInfo)
        VB: AddDynamicEvent(Enum, MethodInfo)
      nameWithType:
        CSharp: HandleDynamicEvents.AddDynamicEvent(Enum, MethodInfo)
        VB: HandleDynamicEvents.AddDynamicEvent(Enum, MethodInfo)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent(Enum, MethodInfo)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent(Enum, MethodInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: AddDynamicEvent
        path: ''
        startLine: 7068
      syntax:
        content:
          CSharp: public static void AddDynamicEvent(Enum value, MethodInfo methodInfo)
          VB: Public Shared Sub AddDynamicEvent(value As  Enum, methodInfo As MethodInfo)
        parameters:
        - id: value
          type: Enum
        - id: methodInfo
          type: MethodInfo
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterLoginEvents(Type[], BindingFlags)
        VB: RegisterLoginEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterLoginEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterLoginEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterLoginEvents
        path: ''
        startLine: 7077
      syntax:
        content:
          CSharp: public static void RegisterLoginEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterLoginEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterChannelEvents(Type[], BindingFlags)
        VB: RegisterChannelEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterChannelEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterChannelEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterChannelEvents
        path: ''
        startLine: 7144
      syntax:
        content:
          CSharp: public static void RegisterChannelEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterChannelEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterAudioDeviceEvents(Type[], BindingFlags)
        VB: RegisterAudioDeviceEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterAudioDeviceEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterAudioDeviceEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterAudioDeviceEvents
        path: ''
        startLine: 7193
      syntax:
        content:
          CSharp: public static void RegisterAudioDeviceEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterAudioDeviceEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterAudioChannelEvents(Type[], BindingFlags)
        VB: RegisterAudioChannelEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterAudioChannelEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterAudioChannelEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterAudioChannelEvents
        path: ''
        startLine: 7254
      syntax:
        content:
          CSharp: public static void RegisterAudioChannelEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterAudioChannelEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterTextChannelEvents(Type[], BindingFlags)
        VB: RegisterTextChannelEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterTextChannelEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterTextChannelEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterTextChannelEvents
        path: ''
        startLine: 7303
      syntax:
        content:
          CSharp: public static void RegisterTextChannelEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterTextChannelEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterChannelMessageEvents(Type[], BindingFlags)
        VB: RegisterChannelMessageEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterChannelMessageEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterChannelMessageEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterChannelMessageEvents
        path: ''
        startLine: 7352
      syntax:
        content:
          CSharp: public static void RegisterChannelMessageEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterChannelMessageEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterDirectMessageEvents(Type[], BindingFlags)
        VB: RegisterDirectMessageEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterDirectMessageEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterDirectMessageEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterDirectMessageEvents
        path: ''
        startLine: 7395
      syntax:
        content:
          CSharp: public static void RegisterDirectMessageEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterDirectMessageEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterUserEvents(Type[], BindingFlags)
        VB: RegisterUserEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterUserEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterUserEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterUserEvents
        path: ''
        startLine: 7438
      syntax:
        content:
          CSharp: public static void RegisterUserEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterUserEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents(Type[],BindingFlags)
      commentId: M:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents(Type[],BindingFlags)
      language: CSharp
      name:
        CSharp: RegisterTextToSpeechEvents(Type[], BindingFlags)
        VB: RegisterTextToSpeechEvents(Type(), BindingFlags)
      nameWithType:
        CSharp: HandleDynamicEvents.RegisterTextToSpeechEvents(Type[], BindingFlags)
        VB: HandleDynamicEvents.RegisterTextToSpeechEvents(Type(), BindingFlags)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents(Type[], BindingFlags)
        VB: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents(Type(), BindingFlags)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events
      source:
        id: RegisterTextToSpeechEvents
        path: ''
        startLine: 7529
      syntax:
        content:
          CSharp: public static void RegisterTextToSpeechEvents(Type[] types, BindingFlags flags)
          VB: Public Shared Sub RegisterTextToSpeechEvents(types As Type(), flags As BindingFlags)
        parameters:
        - id: types
          type: Type[]
        - id: flags
          type: BindingFlags
      overload: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: EasyCodeForVivox.Events.Internal
  commentId: N:EasyCodeForVivox.Events.Internal
  language: CSharp
  name:
    CSharp: EasyCodeForVivox.Events.Internal
    VB: EasyCodeForVivox.Events.Internal
  nameWithType:
    CSharp: EasyCodeForVivox.Events.Internal
    VB: EasyCodeForVivox.Events.Internal
  qualifiedName:
    CSharp: EasyCodeForVivox.Events.Internal
    VB: EasyCodeForVivox.Events.Internal
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync
    commentId: T:EasyCodeForVivox.Events.Internal.EasyEventsAsync
    language: CSharp
    name:
      CSharp: EasyEventsAsync
      VB: EasyEventsAsync
    nameWithType:
      CSharp: EasyEventsAsync
      VB: EasyEventsAsync
    qualifiedName:
      CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync
      VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Events.Internal
    source:
      id: EasyEventsAsync
      path: ''
      startLine: 4336
    syntax:
      content:
        CSharp: public class EasyEventsAsync
        VB: Public Class EasyEventsAsync
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.#ctor(EasySettingsSO)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.#ctor(EasySettingsSO)
      language: CSharp
      name:
        CSharp: EasyEventsAsync(EasySettingsSO)
        VB: EasyEventsAsync(EasySettingsSO)
      nameWithType:
        CSharp: EasyEventsAsync.EasyEventsAsync(EasySettingsSO)
        VB: EasyEventsAsync.EasyEventsAsync(EasySettingsSO)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.EasyEventsAsync(EasySettingsSO)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.EasyEventsAsync(EasySettingsSO)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: .ctor
        path: ''
        startLine: 4340
      syntax:
        content:
          CSharp: public EasyEventsAsync(EasySettingsSO settings)
          VB: Public Sub New(settings As EasySettingsSO)
        parameters:
        - id: settings
          type: EasySettingsSO
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggingInAsync(ILoginSession)
        VB: OnLoggingInAsync(ILoginSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggingInAsync(ILoginSession)
        VB: EasyEventsAsync.OnLoggingInAsync(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync(ILoginSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggingInAsync
        path: ''
        startLine: 4434
      syntax:
        content:
          CSharp: public Task OnLoggingInAsync(ILoginSession loginSession)
          VB: Public Function OnLoggingInAsync(loginSession As ILoginSession) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggingInAsync<T>(ILoginSession, T)
        VB: OnLoggingInAsync(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggingInAsync<T>(ILoginSession, T)
        VB: EasyEventsAsync.OnLoggingInAsync(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggingInAsync
        path: ''
        startLine: 4451
      syntax:
        content:
          CSharp: public Task OnLoggingInAsync<T>(ILoginSession loginSession, T value)
          VB: Public Function OnLoggingInAsync(Of T)(loginSession As ILoginSession, value As T) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggedInAsync(ILoginSession)
        VB: OnLoggedInAsync(ILoginSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggedInAsync(ILoginSession)
        VB: EasyEventsAsync.OnLoggedInAsync(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync(ILoginSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggedInAsync
        path: ''
        startLine: 4468
      syntax:
        content:
          CSharp: public Task OnLoggedInAsync(ILoginSession loginSession)
          VB: Public Function OnLoggedInAsync(loginSession As ILoginSession) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggedInAsync<T>(ILoginSession, T)
        VB: OnLoggedInAsync(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggedInAsync<T>(ILoginSession, T)
        VB: EasyEventsAsync.OnLoggedInAsync(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggedInAsync
        path: ''
        startLine: 4485
      syntax:
        content:
          CSharp: public Task OnLoggedInAsync<T>(ILoginSession loginSession, T value)
          VB: Public Function OnLoggedInAsync(Of T)(loginSession As ILoginSession, value As T) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggingOutAsync(ILoginSession)
        VB: OnLoggingOutAsync(ILoginSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggingOutAsync(ILoginSession)
        VB: EasyEventsAsync.OnLoggingOutAsync(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync(ILoginSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggingOutAsync
        path: ''
        startLine: 4502
      syntax:
        content:
          CSharp: public Task OnLoggingOutAsync(ILoginSession loginSession)
          VB: Public Function OnLoggingOutAsync(loginSession As ILoginSession) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggingOutAsync<T>(ILoginSession, T)
        VB: OnLoggingOutAsync(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggingOutAsync<T>(ILoginSession, T)
        VB: EasyEventsAsync.OnLoggingOutAsync(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggingOutAsync
        path: ''
        startLine: 4519
      syntax:
        content:
          CSharp: public Task OnLoggingOutAsync<T>(ILoginSession loginSession, T value)
          VB: Public Function OnLoggingOutAsync(Of T)(loginSession As ILoginSession, value As T) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync(ILoginSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync(ILoginSession)
      language: CSharp
      name:
        CSharp: OnLoggedOutAsync(ILoginSession)
        VB: OnLoggedOutAsync(ILoginSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggedOutAsync(ILoginSession)
        VB: EasyEventsAsync.OnLoggedOutAsync(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync(ILoginSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggedOutAsync
        path: ''
        startLine: 4536
      syntax:
        content:
          CSharp: public Task OnLoggedOutAsync(ILoginSession loginSession)
          VB: Public Function OnLoggedOutAsync(loginSession As ILoginSession) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync``1(ILoginSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync``1(ILoginSession,``0)
      language: CSharp
      name:
        CSharp: OnLoggedOutAsync<T>(ILoginSession, T)
        VB: OnLoggedOutAsync(Of T)(ILoginSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnLoggedOutAsync<T>(ILoginSession, T)
        VB: EasyEventsAsync.OnLoggedOutAsync(Of T)(ILoginSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync<T>(ILoginSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync(Of T)(ILoginSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLoggedOutAsync
        path: ''
        startLine: 4553
      syntax:
        content:
          CSharp: public Task OnLoggedOutAsync<T>(ILoginSession loginSession, T value)
          VB: Public Function OnLoggedOutAsync(Of T)(loginSession As ILoginSession, value As T) As Task
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelConnectingAsync(IChannelSession)
        VB: OnChannelConnectingAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelConnectingAsync(IChannelSession)
        VB: EasyEventsAsync.OnChannelConnectingAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelConnectingAsync
        path: ''
        startLine: 4573
      syntax:
        content:
          CSharp: public Task OnChannelConnectingAsync(IChannelSession channelSession)
          VB: Public Function OnChannelConnectingAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelConnectingAsync<T>(IChannelSession, T)
        VB: OnChannelConnectingAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelConnectingAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnChannelConnectingAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelConnectingAsync
        path: ''
        startLine: 4590
      syntax:
        content:
          CSharp: public Task OnChannelConnectingAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnChannelConnectingAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelConnectedAsync(IChannelSession)
        VB: OnChannelConnectedAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelConnectedAsync(IChannelSession)
        VB: EasyEventsAsync.OnChannelConnectedAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelConnectedAsync
        path: ''
        startLine: 4607
      syntax:
        content:
          CSharp: public Task OnChannelConnectedAsync(IChannelSession channelSession)
          VB: Public Function OnChannelConnectedAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelConnectedAsync<T>(IChannelSession, T)
        VB: OnChannelConnectedAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelConnectedAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnChannelConnectedAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelConnectedAsync
        path: ''
        startLine: 4624
      syntax:
        content:
          CSharp: public Task OnChannelConnectedAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnChannelConnectedAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelDisconnectingAsync(IChannelSession)
        VB: OnChannelDisconnectingAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelDisconnectingAsync(IChannelSession)
        VB: EasyEventsAsync.OnChannelDisconnectingAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelDisconnectingAsync
        path: ''
        startLine: 4641
      syntax:
        content:
          CSharp: public Task OnChannelDisconnectingAsync(IChannelSession channelSession)
          VB: Public Function OnChannelDisconnectingAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: OnChannelDisconnectingAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnChannelDisconnectingAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelDisconnectingAsync
        path: ''
        startLine: 4658
      syntax:
        content:
          CSharp: public Task OnChannelDisconnectingAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnChannelDisconnectingAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnChannelDisconnectedAsync(IChannelSession)
        VB: OnChannelDisconnectedAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelDisconnectedAsync(IChannelSession)
        VB: EasyEventsAsync.OnChannelDisconnectedAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelDisconnectedAsync
        path: ''
        startLine: 4675
      syntax:
        content:
          CSharp: public Task OnChannelDisconnectedAsync(IChannelSession channelSession)
          VB: Public Function OnChannelDisconnectedAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: OnChannelDisconnectedAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnChannelDisconnectedAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelDisconnectedAsync
        path: ''
        startLine: 4692
      syntax:
        content:
          CSharp: public Task OnChannelDisconnectedAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnChannelDisconnectedAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelConnectingAsync(IChannelSession)
        VB: OnTextChannelConnectingAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelConnectingAsync(IChannelSession)
        VB: EasyEventsAsync.OnTextChannelConnectingAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelConnectingAsync
        path: ''
        startLine: 4716
      syntax:
        content:
          CSharp: public Task OnTextChannelConnectingAsync(IChannelSession channelSession)
          VB: Public Function OnTextChannelConnectingAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelConnectingAsync<T>(IChannelSession, T)
        VB: OnTextChannelConnectingAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelConnectingAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnTextChannelConnectingAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelConnectingAsync
        path: ''
        startLine: 4733
      syntax:
        content:
          CSharp: public Task OnTextChannelConnectingAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnTextChannelConnectingAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelConnectedAsync(IChannelSession)
        VB: OnTextChannelConnectedAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelConnectedAsync(IChannelSession)
        VB: EasyEventsAsync.OnTextChannelConnectedAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelConnectedAsync
        path: ''
        startLine: 4751
      syntax:
        content:
          CSharp: public Task OnTextChannelConnectedAsync(IChannelSession channelSession)
          VB: Public Function OnTextChannelConnectedAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelConnectedAsync<T>(IChannelSession, T)
        VB: OnTextChannelConnectedAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelConnectedAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnTextChannelConnectedAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelConnectedAsync
        path: ''
        startLine: 4768
      syntax:
        content:
          CSharp: public Task OnTextChannelConnectedAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnTextChannelConnectedAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnectingAsync(IChannelSession)
        VB: OnTextChannelDisconnectingAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelDisconnectingAsync(IChannelSession)
        VB: EasyEventsAsync.OnTextChannelDisconnectingAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelDisconnectingAsync
        path: ''
        startLine: 4785
      syntax:
        content:
          CSharp: public Task OnTextChannelDisconnectingAsync(IChannelSession channelSession)
          VB: Public Function OnTextChannelDisconnectingAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: OnTextChannelDisconnectingAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnTextChannelDisconnectingAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelDisconnectingAsync
        path: ''
        startLine: 4802
      syntax:
        content:
          CSharp: public Task OnTextChannelDisconnectingAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnTextChannelDisconnectingAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnectedAsync(IChannelSession)
        VB: OnTextChannelDisconnectedAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelDisconnectedAsync(IChannelSession)
        VB: EasyEventsAsync.OnTextChannelDisconnectedAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelDisconnectedAsync
        path: ''
        startLine: 4819
      syntax:
        content:
          CSharp: public Task OnTextChannelDisconnectedAsync(IChannelSession channelSession)
          VB: Public Function OnTextChannelDisconnectedAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnTextChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: OnTextChannelDisconnectedAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnTextChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnTextChannelDisconnectedAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTextChannelDisconnectedAsync
        path: ''
        startLine: 4836
      syntax:
        content:
          CSharp: public Task OnTextChannelDisconnectedAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnTextChannelDisconnectedAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnectingAsync(IChannelSession)
        VB: OnAudioChannelConnectingAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelConnectingAsync(IChannelSession)
        VB: EasyEventsAsync.OnAudioChannelConnectingAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelConnectingAsync
        path: ''
        startLine: 4860
      syntax:
        content:
          CSharp: public Task OnAudioChannelConnectingAsync(IChannelSession channelSession)
          VB: Public Function OnAudioChannelConnectingAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnectingAsync<T>(IChannelSession, T)
        VB: OnAudioChannelConnectingAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelConnectingAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnAudioChannelConnectingAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelConnectingAsync
        path: ''
        startLine: 4877
      syntax:
        content:
          CSharp: public Task OnAudioChannelConnectingAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnAudioChannelConnectingAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnectedAsync(IChannelSession)
        VB: OnAudioChannelConnectedAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelConnectedAsync(IChannelSession)
        VB: EasyEventsAsync.OnAudioChannelConnectedAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelConnectedAsync
        path: ''
        startLine: 4894
      syntax:
        content:
          CSharp: public Task OnAudioChannelConnectedAsync(IChannelSession channelSession)
          VB: Public Function OnAudioChannelConnectedAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelConnectedAsync<T>(IChannelSession, T)
        VB: OnAudioChannelConnectedAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelConnectedAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnAudioChannelConnectedAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelConnectedAsync
        path: ''
        startLine: 4911
      syntax:
        content:
          CSharp: public Task OnAudioChannelConnectedAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnAudioChannelConnectedAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnectingAsync(IChannelSession)
        VB: OnAudioChannelDisconnectingAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelDisconnectingAsync(IChannelSession)
        VB: EasyEventsAsync.OnAudioChannelDisconnectingAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelDisconnectingAsync
        path: ''
        startLine: 4928
      syntax:
        content:
          CSharp: public Task OnAudioChannelDisconnectingAsync(IChannelSession channelSession)
          VB: Public Function OnAudioChannelDisconnectingAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: OnAudioChannelDisconnectingAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnAudioChannelDisconnectingAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelDisconnectingAsync
        path: ''
        startLine: 4945
      syntax:
        content:
          CSharp: public Task OnAudioChannelDisconnectingAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnAudioChannelDisconnectingAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync(IChannelSession)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync(IChannelSession)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnectedAsync(IChannelSession)
        VB: OnAudioChannelDisconnectedAsync(IChannelSession)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelDisconnectedAsync(IChannelSession)
        VB: EasyEventsAsync.OnAudioChannelDisconnectedAsync(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync(IChannelSession)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelDisconnectedAsync
        path: ''
        startLine: 4962
      syntax:
        content:
          CSharp: public Task OnAudioChannelDisconnectedAsync(IChannelSession channelSession)
          VB: Public Function OnAudioChannelDisconnectedAsync(channelSession As IChannelSession) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync``1(IChannelSession,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync``1(IChannelSession,``0)
      language: CSharp
      name:
        CSharp: OnAudioChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: OnAudioChannelDisconnectedAsync(Of T)(IChannelSession, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: EasyEventsAsync.OnAudioChannelDisconnectedAsync(Of T)(IChannelSession, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync<T>(IChannelSession, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync(Of T)(IChannelSession, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioChannelDisconnectedAsync
        path: ''
        startLine: 4979
      syntax:
        content:
          CSharp: public Task OnAudioChannelDisconnectedAsync<T>(IChannelSession channelSession, T value)
          VB: Public Function OnAudioChannelDisconnectedAsync(Of T)(channelSession As IChannelSession, value As T) As Task
        parameters:
        - id: channelSession
          type: IChannelSession
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync(IChannelTextMessage)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync(IChannelTextMessage)
      language: CSharp
      name:
        CSharp: OnChannelMessageRecievedAsync(IChannelTextMessage)
        VB: OnChannelMessageRecievedAsync(IChannelTextMessage)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelMessageRecievedAsync(IChannelTextMessage)
        VB: EasyEventsAsync.OnChannelMessageRecievedAsync(IChannelTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync(IChannelTextMessage)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync(IChannelTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelMessageRecievedAsync
        path: ''
        startLine: 5003
      syntax:
        content:
          CSharp: public Task OnChannelMessageRecievedAsync(IChannelTextMessage channelTextMessage)
          VB: Public Function OnChannelMessageRecievedAsync(channelTextMessage As IChannelTextMessage) As Task
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync``1(IChannelTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync``1(IChannelTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnChannelMessageRecievedAsync<T>(IChannelTextMessage, T)
        VB: OnChannelMessageRecievedAsync(Of T)(IChannelTextMessage, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelMessageRecievedAsync<T>(IChannelTextMessage, T)
        VB: EasyEventsAsync.OnChannelMessageRecievedAsync(Of T)(IChannelTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync<T>(IChannelTextMessage, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync(Of T)(IChannelTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelMessageRecievedAsync
        path: ''
        startLine: 5020
      syntax:
        content:
          CSharp: public Task OnChannelMessageRecievedAsync<T>(IChannelTextMessage channelTextMessage, T value)
          VB: Public Function OnChannelMessageRecievedAsync(Of T)(channelTextMessage As IChannelTextMessage, value As T) As Task
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync(IChannelTextMessage)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync(IChannelTextMessage)
      language: CSharp
      name:
        CSharp: OnEventMessageRecievedAsync(IChannelTextMessage)
        VB: OnEventMessageRecievedAsync(IChannelTextMessage)
      nameWithType:
        CSharp: EasyEventsAsync.OnEventMessageRecievedAsync(IChannelTextMessage)
        VB: EasyEventsAsync.OnEventMessageRecievedAsync(IChannelTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync(IChannelTextMessage)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync(IChannelTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnEventMessageRecievedAsync
        path: ''
        startLine: 5037
      syntax:
        content:
          CSharp: public Task OnEventMessageRecievedAsync(IChannelTextMessage channelTextMessage)
          VB: Public Function OnEventMessageRecievedAsync(channelTextMessage As IChannelTextMessage) As Task
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync``1(IChannelTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync``1(IChannelTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnEventMessageRecievedAsync<T>(IChannelTextMessage, T)
        VB: OnEventMessageRecievedAsync(Of T)(IChannelTextMessage, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnEventMessageRecievedAsync<T>(IChannelTextMessage, T)
        VB: EasyEventsAsync.OnEventMessageRecievedAsync(Of T)(IChannelTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync<T>(IChannelTextMessage, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync(Of T)(IChannelTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnEventMessageRecievedAsync
        path: ''
        startLine: 5054
      syntax:
        content:
          CSharp: public Task OnEventMessageRecievedAsync<T>(IChannelTextMessage channelTextMessage, T value)
          VB: Public Function OnEventMessageRecievedAsync(Of T)(channelTextMessage As IChannelTextMessage, value As T) As Task
        parameters:
        - id: channelTextMessage
          type: IChannelTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync
      language: CSharp
      name:
        CSharp: OnChannelMessageSentAsync()
        VB: OnChannelMessageSentAsync()
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelMessageSentAsync()
        VB: EasyEventsAsync.OnChannelMessageSentAsync()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync()
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelMessageSentAsync
        path: ''
        startLine: 5071
      syntax:
        content:
          CSharp: public Task OnChannelMessageSentAsync()
          VB: Public Function OnChannelMessageSentAsync As Task
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync``1(``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync``1(``0)
      language: CSharp
      name:
        CSharp: OnChannelMessageSentAsync<T>(T)
        VB: OnChannelMessageSentAsync(Of T)(T)
      nameWithType:
        CSharp: EasyEventsAsync.OnChannelMessageSentAsync<T>(T)
        VB: EasyEventsAsync.OnChannelMessageSentAsync(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync<T>(T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnChannelMessageSentAsync
        path: ''
        startLine: 5088
      syntax:
        content:
          CSharp: public Task OnChannelMessageSentAsync<T>(T value)
          VB: Public Function OnChannelMessageSentAsync(Of T)(value As T) As Task
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync
      language: CSharp
      name:
        CSharp: OnDirectMessageSentAsync()
        VB: OnDirectMessageSentAsync()
      nameWithType:
        CSharp: EasyEventsAsync.OnDirectMessageSentAsync()
        VB: EasyEventsAsync.OnDirectMessageSentAsync()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync()
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnDirectMessageSentAsync
        path: ''
        startLine: 5105
      syntax:
        content:
          CSharp: public Task OnDirectMessageSentAsync()
          VB: Public Function OnDirectMessageSentAsync As Task
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync``1(``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync``1(``0)
      language: CSharp
      name:
        CSharp: OnDirectMessageSentAsync<T>(T)
        VB: OnDirectMessageSentAsync(Of T)(T)
      nameWithType:
        CSharp: EasyEventsAsync.OnDirectMessageSentAsync<T>(T)
        VB: EasyEventsAsync.OnDirectMessageSentAsync(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync<T>(T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnDirectMessageSentAsync
        path: ''
        startLine: 5122
      syntax:
        content:
          CSharp: public Task OnDirectMessageSentAsync<T>(T value)
          VB: Public Function OnDirectMessageSentAsync(Of T)(value As T) As Task
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync(IDirectedTextMessage)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync(IDirectedTextMessage)
      language: CSharp
      name:
        CSharp: OnDirectMessageRecievedAsync(IDirectedTextMessage)
        VB: OnDirectMessageRecievedAsync(IDirectedTextMessage)
      nameWithType:
        CSharp: EasyEventsAsync.OnDirectMessageRecievedAsync(IDirectedTextMessage)
        VB: EasyEventsAsync.OnDirectMessageRecievedAsync(IDirectedTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync(IDirectedTextMessage)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync(IDirectedTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnDirectMessageRecievedAsync
        path: ''
        startLine: 5139
      syntax:
        content:
          CSharp: public Task OnDirectMessageRecievedAsync(IDirectedTextMessage message)
          VB: Public Function OnDirectMessageRecievedAsync(message As IDirectedTextMessage) As Task
        parameters:
        - id: message
          type: IDirectedTextMessage
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync``1(IDirectedTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync``1(IDirectedTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnDirectMessageRecievedAsync<T>(IDirectedTextMessage, T)
        VB: OnDirectMessageRecievedAsync(Of T)(IDirectedTextMessage, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnDirectMessageRecievedAsync<T>(IDirectedTextMessage, T)
        VB: EasyEventsAsync.OnDirectMessageRecievedAsync(Of T)(IDirectedTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync<T>(IDirectedTextMessage, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync(Of T)(IDirectedTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnDirectMessageRecievedAsync
        path: ''
        startLine: 5156
      syntax:
        content:
          CSharp: public Task OnDirectMessageRecievedAsync<T>(IDirectedTextMessage message, T value)
          VB: Public Function OnDirectMessageRecievedAsync(Of T)(message As IDirectedTextMessage, value As T) As Task
        parameters:
        - id: message
          type: IDirectedTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
      language: CSharp
      name:
        CSharp: OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
        VB: OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
      nameWithType:
        CSharp: EasyEventsAsync.OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
        VB: EasyEventsAsync.OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync(IFailedDirectedTextMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnDirectMessageFailedAsync
        path: ''
        startLine: 5173
      syntax:
        content:
          CSharp: public Task OnDirectMessageFailedAsync(IFailedDirectedTextMessage failedMessage)
          VB: Public Function OnDirectMessageFailedAsync(failedMessage As IFailedDirectedTextMessage) As Task
        parameters:
        - id: failedMessage
          type: IFailedDirectedTextMessage
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync``1(IFailedDirectedTextMessage,``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync``1(IFailedDirectedTextMessage,``0)
      language: CSharp
      name:
        CSharp: OnDirectMessageFailedAsync<T>(IFailedDirectedTextMessage, T)
        VB: OnDirectMessageFailedAsync(Of T)(IFailedDirectedTextMessage, T)
      nameWithType:
        CSharp: EasyEventsAsync.OnDirectMessageFailedAsync<T>(IFailedDirectedTextMessage, T)
        VB: EasyEventsAsync.OnDirectMessageFailedAsync(Of T)(IFailedDirectedTextMessage, T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync<T>(IFailedDirectedTextMessage, T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync(Of T)(IFailedDirectedTextMessage, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnDirectMessageFailedAsync
        path: ''
        startLine: 5190
      syntax:
        content:
          CSharp: public Task OnDirectMessageFailedAsync<T>(IFailedDirectedTextMessage failedMessage, T value)
          VB: Public Function OnDirectMessageFailedAsync(Of T)(failedMessage As IFailedDirectedTextMessage, value As T) As Task
        parameters:
        - id: failedMessage
          type: IFailedDirectedTextMessage
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync(IParticipant)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserJoinedChannelAsync(IParticipant)
        VB: OnUserJoinedChannelAsync(IParticipant)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserJoinedChannelAsync(IParticipant)
        VB: EasyEventsAsync.OnUserJoinedChannelAsync(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync(IParticipant)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserJoinedChannelAsync
        path: ''
        startLine: 5214
      syntax:
        content:
          CSharp: public Task OnUserJoinedChannelAsync(IParticipant participant)
          VB: Public Function OnUserJoinedChannelAsync(participant As IParticipant) As Task
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync(IParticipant)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserLeftChannelAsync(IParticipant)
        VB: OnUserLeftChannelAsync(IParticipant)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserLeftChannelAsync(IParticipant)
        VB: EasyEventsAsync.OnUserLeftChannelAsync(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync(IParticipant)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserLeftChannelAsync
        path: ''
        startLine: 5231
      syntax:
        content:
          CSharp: public Task OnUserLeftChannelAsync(IParticipant participant)
          VB: Public Function OnUserLeftChannelAsync(participant As IParticipant) As Task
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync(IParticipant)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserValuesUpdatedAsync(IParticipant)
        VB: OnUserValuesUpdatedAsync(IParticipant)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserValuesUpdatedAsync(IParticipant)
        VB: EasyEventsAsync.OnUserValuesUpdatedAsync(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync(IParticipant)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserValuesUpdatedAsync
        path: ''
        startLine: 5248
      syntax:
        content:
          CSharp: public Task OnUserValuesUpdatedAsync(IParticipant participant)
          VB: Public Function OnUserValuesUpdatedAsync(participant As IParticipant) As Task
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync(IParticipant)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserMutedAsync(IParticipant)
        VB: OnUserMutedAsync(IParticipant)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserMutedAsync(IParticipant)
        VB: EasyEventsAsync.OnUserMutedAsync(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync(IParticipant)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserMutedAsync
        path: ''
        startLine: 5267
      syntax:
        content:
          CSharp: public Task OnUserMutedAsync(IParticipant participant)
          VB: Public Function OnUserMutedAsync(participant As IParticipant) As Task
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync(IParticipant)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserUnmutedAsync(IParticipant)
        VB: OnUserUnmutedAsync(IParticipant)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserUnmutedAsync(IParticipant)
        VB: EasyEventsAsync.OnUserUnmutedAsync(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync(IParticipant)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserUnmutedAsync
        path: ''
        startLine: 5285
      syntax:
        content:
          CSharp: public Task OnUserUnmutedAsync(IParticipant participant)
          VB: Public Function OnUserUnmutedAsync(participant As IParticipant) As Task
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync(AccountId)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync(AccountId)
      language: CSharp
      name:
        CSharp: OnUserCrossMutedAsync(AccountId)
        VB: OnUserCrossMutedAsync(AccountId)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserCrossMutedAsync(AccountId)
        VB: EasyEventsAsync.OnUserCrossMutedAsync(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync(AccountId)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserCrossMutedAsync
        path: ''
        startLine: 5302
      syntax:
        content:
          CSharp: public Task OnUserCrossMutedAsync(AccountId accountId)
          VB: Public Function OnUserCrossMutedAsync(accountId As AccountId) As Task
        parameters:
        - id: accountId
          type: AccountId
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync(AccountId)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync(AccountId)
      language: CSharp
      name:
        CSharp: OnUserCrossUnmutedAsync(AccountId)
        VB: OnUserCrossUnmutedAsync(AccountId)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserCrossUnmutedAsync(AccountId)
        VB: EasyEventsAsync.OnUserCrossUnmutedAsync(AccountId)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync(AccountId)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync(AccountId)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserCrossUnmutedAsync
        path: ''
        startLine: 5320
      syntax:
        content:
          CSharp: public Task OnUserCrossUnmutedAsync(AccountId accountId)
          VB: Public Function OnUserCrossUnmutedAsync(accountId As AccountId) As Task
        parameters:
        - id: accountId
          type: AccountId
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync(IParticipant)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserSpeakingAsync(IParticipant)
        VB: OnUserSpeakingAsync(IParticipant)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserSpeakingAsync(IParticipant)
        VB: EasyEventsAsync.OnUserSpeakingAsync(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync(IParticipant)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserSpeakingAsync
        path: ''
        startLine: 5337
      syntax:
        content:
          CSharp: public Task OnUserSpeakingAsync(IParticipant participant)
          VB: Public Function OnUserSpeakingAsync(participant As IParticipant) As Task
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync(IParticipant)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync(IParticipant)
      language: CSharp
      name:
        CSharp: OnUserNotSpeakingAsync(IParticipant)
        VB: OnUserNotSpeakingAsync(IParticipant)
      nameWithType:
        CSharp: EasyEventsAsync.OnUserNotSpeakingAsync(IParticipant)
        VB: EasyEventsAsync.OnUserNotSpeakingAsync(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync(IParticipant)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnUserNotSpeakingAsync
        path: ''
        startLine: 5354
      syntax:
        content:
          CSharp: public Task OnUserNotSpeakingAsync(IParticipant participant)
          VB: Public Function OnUserNotSpeakingAsync(participant As IParticipant) As Task
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync
      language: CSharp
      name:
        CSharp: OnLocalUserMutedAsync()
        VB: OnLocalUserMutedAsync()
      nameWithType:
        CSharp: EasyEventsAsync.OnLocalUserMutedAsync()
        VB: EasyEventsAsync.OnLocalUserMutedAsync()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync()
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLocalUserMutedAsync
        path: ''
        startLine: 5378
      syntax:
        content:
          CSharp: public Task OnLocalUserMutedAsync()
          VB: Public Function OnLocalUserMutedAsync As Task
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync``1(``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync``1(``0)
      language: CSharp
      name:
        CSharp: OnLocalUserMutedAsync<T>(T)
        VB: OnLocalUserMutedAsync(Of T)(T)
      nameWithType:
        CSharp: EasyEventsAsync.OnLocalUserMutedAsync<T>(T)
        VB: EasyEventsAsync.OnLocalUserMutedAsync(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync<T>(T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLocalUserMutedAsync
        path: ''
        startLine: 5395
      syntax:
        content:
          CSharp: public Task OnLocalUserMutedAsync<T>(T value)
          VB: Public Function OnLocalUserMutedAsync(Of T)(value As T) As Task
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync
      language: CSharp
      name:
        CSharp: OnLocalUserUnmutedAsync()
        VB: OnLocalUserUnmutedAsync()
      nameWithType:
        CSharp: EasyEventsAsync.OnLocalUserUnmutedAsync()
        VB: EasyEventsAsync.OnLocalUserUnmutedAsync()
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync()
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLocalUserUnmutedAsync
        path: ''
        startLine: 5412
      syntax:
        content:
          CSharp: public Task OnLocalUserUnmutedAsync()
          VB: Public Function OnLocalUserUnmutedAsync As Task
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync``1(``0)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync``1(``0)
      language: CSharp
      name:
        CSharp: OnLocalUserUnmutedAsync<T>(T)
        VB: OnLocalUserUnmutedAsync(Of T)(T)
      nameWithType:
        CSharp: EasyEventsAsync.OnLocalUserUnmutedAsync<T>(T)
        VB: EasyEventsAsync.OnLocalUserUnmutedAsync(Of T)(T)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync<T>(T)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnLocalUserUnmutedAsync
        path: ''
        startLine: 5429
      syntax:
        content:
          CSharp: public Task OnLocalUserUnmutedAsync<T>(T value)
          VB: Public Function OnLocalUserUnmutedAsync(Of T)(value As T) As Task
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceAddedAsync(IAudioDevice)
        VB: OnAudioInputDeviceAddedAsync(IAudioDevice)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioInputDeviceAddedAsync(IAudioDevice)
        VB: EasyEventsAsync.OnAudioInputDeviceAddedAsync(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync(IAudioDevice)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioInputDeviceAddedAsync
        path: ''
        startLine: 5454
      syntax:
        content:
          CSharp: public void OnAudioInputDeviceAddedAsync(IAudioDevice audioDevice)
          VB: Public Sub OnAudioInputDeviceAddedAsync(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceRemovedAsync(IAudioDevice)
        VB: OnAudioInputDeviceRemovedAsync(IAudioDevice)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioInputDeviceRemovedAsync(IAudioDevice)
        VB: EasyEventsAsync.OnAudioInputDeviceRemovedAsync(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync(IAudioDevice)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioInputDeviceRemovedAsync
        path: ''
        startLine: 5471
      syntax:
        content:
          CSharp: public void OnAudioInputDeviceRemovedAsync(IAudioDevice audioDevice)
          VB: Public Sub OnAudioInputDeviceRemovedAsync(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioInputDeviceUpdatedAsync(IAudioDevice)
        VB: OnAudioInputDeviceUpdatedAsync(IAudioDevice)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioInputDeviceUpdatedAsync(IAudioDevice)
        VB: EasyEventsAsync.OnAudioInputDeviceUpdatedAsync(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync(IAudioDevice)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioInputDeviceUpdatedAsync
        path: ''
        startLine: 5488
      syntax:
        content:
          CSharp: public void OnAudioInputDeviceUpdatedAsync(IAudioDevice audioDevice)
          VB: Public Sub OnAudioInputDeviceUpdatedAsync(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceAdded(IAudioDevice)
        VB: OnAudioOutputDeviceAdded(IAudioDevice)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioOutputDeviceAdded(IAudioDevice)
        VB: EasyEventsAsync.OnAudioOutputDeviceAdded(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded(IAudioDevice)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioOutputDeviceAdded
        path: ''
        startLine: 5505
      syntax:
        content:
          CSharp: public void OnAudioOutputDeviceAdded(IAudioDevice audioDevice)
          VB: Public Sub OnAudioOutputDeviceAdded(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: OnAudioOutputDeviceRemoved(IAudioDevice)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: EasyEventsAsync.OnAudioOutputDeviceRemoved(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved(IAudioDevice)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioOutputDeviceRemoved
        path: ''
        startLine: 5522
      syntax:
        content:
          CSharp: public void OnAudioOutputDeviceRemoved(IAudioDevice audioDevice)
          VB: Public Sub OnAudioOutputDeviceRemoved(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated(IAudioDevice)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated(IAudioDevice)
      language: CSharp
      name:
        CSharp: OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: OnAudioOutputDeviceUpdated(IAudioDevice)
      nameWithType:
        CSharp: EasyEventsAsync.OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: EasyEventsAsync.OnAudioOutputDeviceUpdated(IAudioDevice)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated(IAudioDevice)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated(IAudioDevice)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnAudioOutputDeviceUpdated
        path: ''
        startLine: 5539
      syntax:
        content:
          CSharp: public void OnAudioOutputDeviceUpdated(IAudioDevice audioDevice)
          VB: Public Sub OnAudioOutputDeviceUpdated(audioDevice As IAudioDevice)
        parameters:
        - id: audioDevice
          type: IAudioDevice
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyEventsAsync.OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
        VB: EasyEventsAsync.OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTTSMessageAddedAsync
        path: ''
        startLine: 5565
      syntax:
        content:
          CSharp: public Task OnTTSMessageAddedAsync(ITTSMessageQueueEventArgs ttsArgs)
          VB: Public Function OnTTSMessageAddedAsync(ttsArgs As ITTSMessageQueueEventArgs) As Task
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyEventsAsync.OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
        VB: EasyEventsAsync.OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTTSMessageRemovedAsync
        path: ''
        startLine: 5582
      syntax:
        content:
          CSharp: public Task OnTTSMessageRemovedAsync(ITTSMessageQueueEventArgs ttsArgs)
          VB: Public Function OnTTSMessageRemovedAsync(ttsArgs As ITTSMessageQueueEventArgs) As Task
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
      commentId: M:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
      language: CSharp
      name:
        CSharp: OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
        VB: OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
      nameWithType:
        CSharp: EasyEventsAsync.OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
        VB: EasyEventsAsync.OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
      qualifiedName:
        CSharp: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
        VB: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Events.Internal
      source:
        id: OnTTSMessageUpdatedAsync
        path: ''
        startLine: 5599
      syntax:
        content:
          CSharp: public Task OnTTSMessageUpdatedAsync(ITTSMessageQueueEventArgs ttsArgs)
          VB: Public Function OnTTSMessageUpdatedAsync(ttsArgs As ITTSMessageQueueEventArgs) As Task
        parameters:
        - id: ttsArgs
          type: ITTSMessageQueueEventArgs
        return:
          type: Task
      overload: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: EasyCodeForVivox.Extensions
  commentId: N:EasyCodeForVivox.Extensions
  language: CSharp
  name:
    CSharp: EasyCodeForVivox.Extensions
    VB: EasyCodeForVivox.Extensions
  nameWithType:
    CSharp: EasyCodeForVivox.Extensions
    VB: EasyCodeForVivox.Extensions
  qualifiedName:
    CSharp: EasyCodeForVivox.Extensions
    VB: EasyCodeForVivox.Extensions
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: EasyCodeForVivox.Extensions.EasyDebug
    commentId: T:EasyCodeForVivox.Extensions.EasyDebug
    language: CSharp
    name:
      CSharp: EasyDebug
      VB: EasyDebug
    nameWithType:
      CSharp: EasyDebug
      VB: EasyDebug
    qualifiedName:
      CSharp: EasyCodeForVivox.Extensions.EasyDebug
      VB: EasyCodeForVivox.Extensions.EasyDebug
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Extensions
    source:
      id: EasyDebug
      path: ''
      startLine: 7587
    syntax:
      content:
        CSharp: public static class EasyDebug
        VB: Public Module EasyDebug
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: EasyCodeForVivox.Extensions.EasyDebug.Aqua
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Aqua
      language: CSharp
      name:
        CSharp: Aqua
        VB: Aqua
      nameWithType:
        CSharp: EasyDebug.Aqua
        VB: EasyDebug.Aqua
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Aqua
        VB: EasyCodeForVivox.Extensions.EasyDebug.Aqua
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Aqua
        path: ''
        startLine: 7589
      syntax:
        content:
          CSharp: public const string Aqua = "#00ffffff"
          VB: Public Const Aqua As String = "#00ffffff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Blue
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Blue
      language: CSharp
      name:
        CSharp: Blue
        VB: Blue
      nameWithType:
        CSharp: EasyDebug.Blue
        VB: EasyDebug.Blue
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Blue
        VB: EasyCodeForVivox.Extensions.EasyDebug.Blue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Blue
        path: ''
        startLine: 7590
      syntax:
        content:
          CSharp: public const string Blue = "#0000ffff"
          VB: Public Const Blue As String = "#0000ffff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Brown
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Brown
      language: CSharp
      name:
        CSharp: Brown
        VB: Brown
      nameWithType:
        CSharp: EasyDebug.Brown
        VB: EasyDebug.Brown
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Brown
        VB: EasyCodeForVivox.Extensions.EasyDebug.Brown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Brown
        path: ''
        startLine: 7591
      syntax:
        content:
          CSharp: public const string Brown = "#a52a2aff"
          VB: Public Const Brown As String = "#a52a2aff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Cyan
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Cyan
      language: CSharp
      name:
        CSharp: Cyan
        VB: Cyan
      nameWithType:
        CSharp: EasyDebug.Cyan
        VB: EasyDebug.Cyan
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Cyan
        VB: EasyCodeForVivox.Extensions.EasyDebug.Cyan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Cyan
        path: ''
        startLine: 7592
      syntax:
        content:
          CSharp: public const string Cyan = "#00ffffff"
          VB: Public Const Cyan As String = "#00ffffff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Darkblue
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Darkblue
      language: CSharp
      name:
        CSharp: Darkblue
        VB: Darkblue
      nameWithType:
        CSharp: EasyDebug.Darkblue
        VB: EasyDebug.Darkblue
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Darkblue
        VB: EasyCodeForVivox.Extensions.EasyDebug.Darkblue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Darkblue
        path: ''
        startLine: 7593
      syntax:
        content:
          CSharp: public const string Darkblue = "#0000a0ff"
          VB: Public Const Darkblue As String = "#0000a0ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Fuchsia
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Fuchsia
      language: CSharp
      name:
        CSharp: Fuchsia
        VB: Fuchsia
      nameWithType:
        CSharp: EasyDebug.Fuchsia
        VB: EasyDebug.Fuchsia
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Fuchsia
        VB: EasyCodeForVivox.Extensions.EasyDebug.Fuchsia
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Fuchsia
        path: ''
        startLine: 7594
      syntax:
        content:
          CSharp: public const string Fuchsia = "#ff00ffff"
          VB: Public Const Fuchsia As String = "#ff00ffff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Green
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Green
      language: CSharp
      name:
        CSharp: Green
        VB: Green
      nameWithType:
        CSharp: EasyDebug.Green
        VB: EasyDebug.Green
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Green
        VB: EasyCodeForVivox.Extensions.EasyDebug.Green
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Green
        path: ''
        startLine: 7595
      syntax:
        content:
          CSharp: public const string Green = "#008000ff"
          VB: Public Const Green As String = "#008000ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Grey
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Grey
      language: CSharp
      name:
        CSharp: Grey
        VB: Grey
      nameWithType:
        CSharp: EasyDebug.Grey
        VB: EasyDebug.Grey
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Grey
        VB: EasyCodeForVivox.Extensions.EasyDebug.Grey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Grey
        path: ''
        startLine: 7596
      syntax:
        content:
          CSharp: public const string Grey = "#808080ff"
          VB: Public Const Grey As String = "#808080ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Lightblue
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Lightblue
      language: CSharp
      name:
        CSharp: Lightblue
        VB: Lightblue
      nameWithType:
        CSharp: EasyDebug.Lightblue
        VB: EasyDebug.Lightblue
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Lightblue
        VB: EasyCodeForVivox.Extensions.EasyDebug.Lightblue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Lightblue
        path: ''
        startLine: 7597
      syntax:
        content:
          CSharp: public const string Lightblue = "#add8e6ff"
          VB: Public Const Lightblue As String = "#add8e6ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Lime
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Lime
      language: CSharp
      name:
        CSharp: Lime
        VB: Lime
      nameWithType:
        CSharp: EasyDebug.Lime
        VB: EasyDebug.Lime
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Lime
        VB: EasyCodeForVivox.Extensions.EasyDebug.Lime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Lime
        path: ''
        startLine: 7598
      syntax:
        content:
          CSharp: public const string Lime = "#00ff00ff"
          VB: Public Const Lime As String = "#00ff00ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Magenta
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Magenta
      language: CSharp
      name:
        CSharp: Magenta
        VB: Magenta
      nameWithType:
        CSharp: EasyDebug.Magenta
        VB: EasyDebug.Magenta
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Magenta
        VB: EasyCodeForVivox.Extensions.EasyDebug.Magenta
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Magenta
        path: ''
        startLine: 7599
      syntax:
        content:
          CSharp: public const string Magenta = "#ff00ffff"
          VB: Public Const Magenta As String = "#ff00ffff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Maroon
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Maroon
      language: CSharp
      name:
        CSharp: Maroon
        VB: Maroon
      nameWithType:
        CSharp: EasyDebug.Maroon
        VB: EasyDebug.Maroon
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Maroon
        VB: EasyCodeForVivox.Extensions.EasyDebug.Maroon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Maroon
        path: ''
        startLine: 7600
      syntax:
        content:
          CSharp: public const string Maroon = "#800000ff"
          VB: Public Const Maroon As String = "#800000ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Navy
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Navy
      language: CSharp
      name:
        CSharp: Navy
        VB: Navy
      nameWithType:
        CSharp: EasyDebug.Navy
        VB: EasyDebug.Navy
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Navy
        VB: EasyCodeForVivox.Extensions.EasyDebug.Navy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Navy
        path: ''
        startLine: 7601
      syntax:
        content:
          CSharp: public const string Navy = "#000080ff"
          VB: Public Const Navy As String = "#000080ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Olive
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Olive
      language: CSharp
      name:
        CSharp: Olive
        VB: Olive
      nameWithType:
        CSharp: EasyDebug.Olive
        VB: EasyDebug.Olive
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Olive
        VB: EasyCodeForVivox.Extensions.EasyDebug.Olive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Olive
        path: ''
        startLine: 7602
      syntax:
        content:
          CSharp: public const string Olive = "#808000ff"
          VB: Public Const Olive As String = "#808000ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Orange
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Orange
      language: CSharp
      name:
        CSharp: Orange
        VB: Orange
      nameWithType:
        CSharp: EasyDebug.Orange
        VB: EasyDebug.Orange
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Orange
        VB: EasyCodeForVivox.Extensions.EasyDebug.Orange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Orange
        path: ''
        startLine: 7603
      syntax:
        content:
          CSharp: public const string Orange = "#ffa500ff"
          VB: Public Const Orange As String = "#ffa500ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Purple
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Purple
      language: CSharp
      name:
        CSharp: Purple
        VB: Purple
      nameWithType:
        CSharp: EasyDebug.Purple
        VB: EasyDebug.Purple
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Purple
        VB: EasyCodeForVivox.Extensions.EasyDebug.Purple
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Purple
        path: ''
        startLine: 7604
      syntax:
        content:
          CSharp: public const string Purple = "#800080ff"
          VB: Public Const Purple As String = "#800080ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Red
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Red
      language: CSharp
      name:
        CSharp: Red
        VB: Red
      nameWithType:
        CSharp: EasyDebug.Red
        VB: EasyDebug.Red
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Red
        VB: EasyCodeForVivox.Extensions.EasyDebug.Red
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Red
        path: ''
        startLine: 7605
      syntax:
        content:
          CSharp: public const string Red = "#ff0000ff"
          VB: Public Const Red As String = "#ff0000ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Silver
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Silver
      language: CSharp
      name:
        CSharp: Silver
        VB: Silver
      nameWithType:
        CSharp: EasyDebug.Silver
        VB: EasyDebug.Silver
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Silver
        VB: EasyCodeForVivox.Extensions.EasyDebug.Silver
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Silver
        path: ''
        startLine: 7606
      syntax:
        content:
          CSharp: public const string Silver = "#c0c0c0ff"
          VB: Public Const Silver As String = "#c0c0c0ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Teal
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Teal
      language: CSharp
      name:
        CSharp: Teal
        VB: Teal
      nameWithType:
        CSharp: EasyDebug.Teal
        VB: EasyDebug.Teal
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Teal
        VB: EasyCodeForVivox.Extensions.EasyDebug.Teal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Teal
        path: ''
        startLine: 7607
      syntax:
        content:
          CSharp: public const string Teal = "#008080ff"
          VB: Public Const Teal As String = "#008080ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.White
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.White
      language: CSharp
      name:
        CSharp: White
        VB: White
      nameWithType:
        CSharp: EasyDebug.White
        VB: EasyDebug.White
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.White
        VB: EasyCodeForVivox.Extensions.EasyDebug.White
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: White
        path: ''
        startLine: 7608
      syntax:
        content:
          CSharp: public const string White = "#ffffffff"
          VB: Public Const White As String = "#ffffffff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: EasyCodeForVivox.Extensions.EasyDebug.Yellow
      commentId: F:EasyCodeForVivox.Extensions.EasyDebug.Yellow
      language: CSharp
      name:
        CSharp: Yellow
        VB: Yellow
      nameWithType:
        CSharp: EasyDebug.Yellow
        VB: EasyDebug.Yellow
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Yellow
        VB: EasyCodeForVivox.Extensions.EasyDebug.Yellow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Yellow
        path: ''
        startLine: 7609
      syntax:
        content:
          CSharp: public const string Yellow = "#ffff00ff"
          VB: Public Const Yellow As String = "#ffff00ff"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.EasyDebug.Color(System.String,System.String)
      commentId: M:EasyCodeForVivox.Extensions.EasyDebug.Color(System.String,System.String)
      language: CSharp
      name:
        CSharp: Color(String, String)
        VB: Color(String, String)
      nameWithType:
        CSharp: EasyDebug.Color(String, String)
        VB: EasyDebug.Color(String, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Color(System.String, System.String)
        VB: EasyCodeForVivox.Extensions.EasyDebug.Color(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Color
        path: ''
        startLine: 7611
      syntax:
        content:
          CSharp: public static string Color(this string msg, string color)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Color(msg As String, color As String) As String
        parameters:
        - id: msg
          type: System.String
        - id: color
          type: System.String
        return:
          type: System.String
      overload: EasyCodeForVivox.Extensions.EasyDebug.Color*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.EasyDebug.Bold(System.String)
      commentId: M:EasyCodeForVivox.Extensions.EasyDebug.Bold(System.String)
      language: CSharp
      name:
        CSharp: Bold(String)
        VB: Bold(String)
      nameWithType:
        CSharp: EasyDebug.Bold(String)
        VB: EasyDebug.Bold(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Bold(System.String)
        VB: EasyCodeForVivox.Extensions.EasyDebug.Bold(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Bold
        path: ''
        startLine: 7616
      syntax:
        content:
          CSharp: public static string Bold(this string msg)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Bold(msg As String) As String
        parameters:
        - id: msg
          type: System.String
        return:
          type: System.String
      overload: EasyCodeForVivox.Extensions.EasyDebug.Bold*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.EasyDebug.Italic(System.String)
      commentId: M:EasyCodeForVivox.Extensions.EasyDebug.Italic(System.String)
      language: CSharp
      name:
        CSharp: Italic(String)
        VB: Italic(String)
      nameWithType:
        CSharp: EasyDebug.Italic(String)
        VB: EasyDebug.Italic(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasyDebug.Italic(System.String)
        VB: EasyCodeForVivox.Extensions.EasyDebug.Italic(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: Italic
        path: ''
        startLine: 7621
      syntax:
        content:
          CSharp: public static string Italic(this string msg)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Italic(msg As String) As String
        parameters:
        - id: msg
          type: System.String
        return:
          type: System.String
      overload: EasyCodeForVivox.Extensions.EasyDebug.Italic*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: EasyCodeForVivox.Extensions.EasySIPExtensions
    commentId: T:EasyCodeForVivox.Extensions.EasySIPExtensions
    language: CSharp
    name:
      CSharp: EasySIPExtensions
      VB: EasySIPExtensions
    nameWithType:
      CSharp: EasySIPExtensions
      VB: EasySIPExtensions
    qualifiedName:
      CSharp: EasyCodeForVivox.Extensions.EasySIPExtensions
      VB: EasyCodeForVivox.Extensions.EasySIPExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Extensions
    source:
      id: EasySIPExtensions
      path: ''
      startLine: 7632
    syntax:
      content:
        CSharp: public static class EasySIPExtensions
        VB: Public Module EasySIPExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf(IChannelSession)
      commentId: M:EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf(IChannelSession)
      language: CSharp
      name:
        CSharp: IsSelf(IChannelSession)
        VB: IsSelf(IChannelSession)
      nameWithType:
        CSharp: EasySIPExtensions.IsSelf(IChannelSession)
        VB: EasySIPExtensions.IsSelf(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf(IChannelSession)
        VB: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: IsSelf
        path: ''
        startLine: 7638
      summary: "\nChecks if this IchannelSession is the current logged in user\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsSelf(this IChannelSession channelSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IsSelf(channelSession As IChannelSession) As Boolean
        parameters:
        - id: channelSession
          type: IChannelSession
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(ILoginSession)
      language: CSharp
      name:
        CSharp: GetSIP(ILoginSession)
        VB: GetSIP(ILoginSession)
      nameWithType:
        CSharp: EasySIPExtensions.GetSIP(ILoginSession)
        VB: EasySIPExtensions.GetSIP(ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(ILoginSession)
        VB: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: GetSIP
        path: ''
        startLine: 7654
      summary: "\nGets the valid Vivox SIP address from this ILoginSession\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetSIP(this ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetSIP(loginSession As ILoginSession) As String
        parameters:
        - id: loginSession
          type: ILoginSession
          description: ''
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IChannelSession)
      commentId: M:EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IChannelSession)
      language: CSharp
      name:
        CSharp: GetSIP(IChannelSession)
        VB: GetSIP(IChannelSession)
      nameWithType:
        CSharp: EasySIPExtensions.GetSIP(IChannelSession)
        VB: EasySIPExtensions.GetSIP(IChannelSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IChannelSession)
        VB: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IChannelSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: GetSIP
        path: ''
        startLine: 7665
      summary: "\nGets the valid Vivox SIP address from this IChannelSession\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetSIP(this IChannelSession channelSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetSIP(channelSession As IChannelSession) As String
        parameters:
        - id: channelSession
          type: IChannelSession
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IParticipant)
      commentId: M:EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IParticipant)
      language: CSharp
      name:
        CSharp: GetSIP(IParticipant)
        VB: GetSIP(IParticipant)
      nameWithType:
        CSharp: EasySIPExtensions.GetSIP(IParticipant)
        VB: EasySIPExtensions.GetSIP(IParticipant)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IParticipant)
        VB: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP(IParticipant)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: GetSIP
        path: ''
        startLine: 7681
      summary: "\nGets the valid Vivox SIP address from this IParticipant\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetSIP(this IParticipant participant)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetSIP(participant As IParticipant) As String
        parameters:
        - id: participant
          type: IParticipant
        return:
          type: System.String
          description: ''
      overload: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: EasyCodeForVivox.Extensions.GameObjectExtensions
    commentId: T:EasyCodeForVivox.Extensions.GameObjectExtensions
    language: CSharp
    name:
      CSharp: GameObjectExtensions
      VB: GameObjectExtensions
    nameWithType:
      CSharp: GameObjectExtensions
      VB: GameObjectExtensions
    qualifiedName:
      CSharp: EasyCodeForVivox.Extensions.GameObjectExtensions
      VB: EasyCodeForVivox.Extensions.GameObjectExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Extensions
    source:
      id: GameObjectExtensions
      path: ''
      startLine: 7697
    syntax:
      content:
        CSharp: public static class GameObjectExtensions
        VB: Public Module GameObjectExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo(GameObject,GameObject)
      commentId: M:EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo(GameObject,GameObject)
      language: CSharp
      name:
        CSharp: SwitchTo(GameObject, GameObject)
        VB: SwitchTo(GameObject, GameObject)
      nameWithType:
        CSharp: GameObjectExtensions.SwitchTo(GameObject, GameObject)
        VB: GameObjectExtensions.SwitchTo(GameObject, GameObject)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo(GameObject, GameObject)
        VB: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo(GameObject, GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: SwitchTo
        path: ''
        startLine: 7705
      summary: "\nDeactivates this Gameobject and activates another Gameobject\n"
      example: []
      syntax:
        content:
          CSharp: public static void SwitchTo(this GameObject toDeactivate, GameObject toActivate)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SwitchTo(toDeactivate As GameObject, toActivate As GameObject)
        parameters:
        - id: toDeactivate
          type: GameObject
          description: Gameobject to Deactivate
        - id: toActivate
          type: GameObject
          description: Gameobject to Activate
      overload: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: EasyCodeForVivox.Extensions.TTSMessageExtensions
    commentId: T:EasyCodeForVivox.Extensions.TTSMessageExtensions
    language: CSharp
    name:
      CSharp: TTSMessageExtensions
      VB: TTSMessageExtensions
    nameWithType:
      CSharp: TTSMessageExtensions
      VB: TTSMessageExtensions
    qualifiedName:
      CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions
      VB: EasyCodeForVivox.Extensions.TTSMessageExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Extensions
    source:
      id: TTSMessageExtensions
      path: ''
      startLine: 7721
    syntax:
      content:
        CSharp: public static class TTSMessageExtensions
        VB: Public Module TTSMessageExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage(ILoginSession,TTSMessage)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage(ILoginSession,TTSMessage)
      language: CSharp
      name:
        CSharp: WaitForMessage(ILoginSession, TTSMessage)
        VB: WaitForMessage(ILoginSession, TTSMessage)
      nameWithType:
        CSharp: TTSMessageExtensions.WaitForMessage(ILoginSession, TTSMessage)
        VB: TTSMessageExtensions.WaitForMessage(ILoginSession, TTSMessage)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage(ILoginSession, TTSMessage)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage(ILoginSession, TTSMessage)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: WaitForMessage
        path: ''
        startLine: 7724
      syntax:
        content:
          CSharp: public static IEnumerator WaitForMessage(ILoginSession loginSession, TTSMessage ttsMessage)
          VB: Public Shared Function WaitForMessage(loginSession As ILoginSession, ttsMessage As TTSMessage) As IEnumerator
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: ttsMessage
          type: TTSMessage
        return:
          type: IEnumerator
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: TTSMsgLocalPlayOverCurrent(String, ILoginSession)
        VB: TTSMsgLocalPlayOverCurrent(String, ILoginSession)
      nameWithType:
        CSharp: TTSMessageExtensions.TTSMsgLocalPlayOverCurrent(String, ILoginSession)
        VB: TTSMessageExtensions.TTSMsgLocalPlayOverCurrent(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent(System.String, ILoginSession)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TTSMsgLocalPlayOverCurrent
        path: ''
        startLine: 7736
      summary: "\nPlay this message locally and override current playing TTS message\n"
      example: []
      syntax:
        content:
          CSharp: public static void TTSMsgLocalPlayOverCurrent(this string message, ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TTSMsgLocalPlayOverCurrent(message As String, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
          description: ''
        - id: loginSession
          type: ILoginSession
          description: ''
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: TTSMsgRemotePlayOverCurrent(String, ILoginSession)
        VB: TTSMsgRemotePlayOverCurrent(String, ILoginSession)
      nameWithType:
        CSharp: TTSMessageExtensions.TTSMsgRemotePlayOverCurrent(String, ILoginSession)
        VB: TTSMessageExtensions.TTSMsgRemotePlayOverCurrent(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent(System.String, ILoginSession)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TTSMsgRemotePlayOverCurrent
        path: ''
        startLine: 7754
      summary: "\nPlay this message remotely and override current playing TTS message\n"
      example: []
      syntax:
        content:
          CSharp: public static void TTSMsgRemotePlayOverCurrent(this string message, ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TTSMsgRemotePlayOverCurrent(message As String, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
          description: ''
        - id: loginSession
          type: ILoginSession
          description: ''
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: TTSMsgLocalRemotePlayOverCurrent(String, ILoginSession)
        VB: TTSMsgLocalRemotePlayOverCurrent(String, ILoginSession)
      nameWithType:
        CSharp: TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent(String, ILoginSession)
        VB: TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent(System.String, ILoginSession)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TTSMsgLocalRemotePlayOverCurrent
        path: ''
        startLine: 7772
      summary: "\nPlay this message locally and remotely and ovverride current playing TTS message\n"
      example: []
      syntax:
        content:
          CSharp: public static void TTSMsgLocalRemotePlayOverCurrent(this string message, ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TTSMsgLocalRemotePlayOverCurrent(message As String, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
          description: ''
        - id: loginSession
          type: ILoginSession
          description: ''
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: TTSMsgLocalReplaceCurrentMessagePlaying(String, ILoginSession)
        VB: TTSMsgLocalReplaceCurrentMessagePlaying(String, ILoginSession)
      nameWithType:
        CSharp: TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying(String, ILoginSession)
        VB: TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying(System.String, ILoginSession)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TTSMsgLocalReplaceCurrentMessagePlaying
        path: ''
        startLine: 7790
      summary: "\nReplace current playing TTS message with this message locally\n"
      example: []
      syntax:
        content:
          CSharp: public static void TTSMsgLocalReplaceCurrentMessagePlaying(this string message, ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TTSMsgLocalReplaceCurrentMessagePlaying(message As String, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
          description: ''
        - id: loginSession
          type: ILoginSession
          description: ''
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: TTSMsgQueueLocal(String, ILoginSession)
        VB: TTSMsgQueueLocal(String, ILoginSession)
      nameWithType:
        CSharp: TTSMessageExtensions.TTSMsgQueueLocal(String, ILoginSession)
        VB: TTSMessageExtensions.TTSMsgQueueLocal(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal(System.String, ILoginSession)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TTSMsgQueueLocal
        path: ''
        startLine: 7809
      summary: "\nPlay TTS message locally, adds to current queue if a message is already playing\n"
      example: []
      syntax:
        content:
          CSharp: public static void TTSMsgQueueLocal(this string message, ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TTSMsgQueueLocal(message As String, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
          description: ''
        - id: loginSession
          type: ILoginSession
          description: ''
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: TTSMsgQueueRemote(String, ILoginSession)
        VB: TTSMsgQueueRemote(String, ILoginSession)
      nameWithType:
        CSharp: TTSMessageExtensions.TTSMsgQueueRemote(String, ILoginSession)
        VB: TTSMessageExtensions.TTSMsgQueueRemote(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote(System.String, ILoginSession)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TTSMsgQueueRemote
        path: ''
        startLine: 7827
      summary: "\nPlay TTS message remotely, adds to current queue if a message is already playing\n"
      example: []
      syntax:
        content:
          CSharp: public static void TTSMsgQueueRemote(this string message, ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TTSMsgQueueRemote(message As String, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
          description: ''
        - id: loginSession
          type: ILoginSession
          description: ''
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal(System.String,ILoginSession)
      commentId: M:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal(System.String,ILoginSession)
      language: CSharp
      name:
        CSharp: TTSMsgQueueRemoteLocal(String, ILoginSession)
        VB: TTSMsgQueueRemoteLocal(String, ILoginSession)
      nameWithType:
        CSharp: TTSMessageExtensions.TTSMsgQueueRemoteLocal(String, ILoginSession)
        VB: TTSMessageExtensions.TTSMsgQueueRemoteLocal(String, ILoginSession)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal(System.String, ILoginSession)
        VB: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal(System.String, ILoginSession)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TTSMsgQueueRemoteLocal
        path: ''
        startLine: 7845
      summary: "\nPlay TTS message remotely and locally, adds to current queue if a message is already playing\n"
      example: []
      syntax:
        content:
          CSharp: public static void TTSMsgQueueRemoteLocal(this string message, ILoginSession loginSession)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TTSMsgQueueRemoteLocal(message As String, loginSession As ILoginSession)
        parameters:
        - id: message
          type: System.String
          description: ''
        - id: loginSession
          type: ILoginSession
          description: ''
      overload: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: EasyCodeForVivox.Extensions.UIExtensions
    commentId: T:EasyCodeForVivox.Extensions.UIExtensions
    language: CSharp
    name:
      CSharp: UIExtensions
      VB: UIExtensions
    nameWithType:
      CSharp: UIExtensions
      VB: UIExtensions
    qualifiedName:
      CSharp: EasyCodeForVivox.Extensions.UIExtensions
      VB: EasyCodeForVivox.Extensions.UIExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Extensions
    source:
      id: UIExtensions
      path: ''
      startLine: 7867
    syntax:
      content:
        CSharp: public static class UIExtensions
        VB: Public Module UIExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.UIExtensions.GetSelected(TMP_Dropdown)
      commentId: M:EasyCodeForVivox.Extensions.UIExtensions.GetSelected(TMP_Dropdown)
      language: CSharp
      name:
        CSharp: GetSelected(TMP_Dropdown)
        VB: GetSelected(TMP_Dropdown)
      nameWithType:
        CSharp: UIExtensions.GetSelected(TMP_Dropdown)
        VB: UIExtensions.GetSelected(TMP_Dropdown)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.UIExtensions.GetSelected(TMP_Dropdown)
        VB: EasyCodeForVivox.Extensions.UIExtensions.GetSelected(TMP_Dropdown)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: GetSelected
        path: ''
        startLine: 7869
      syntax:
        content:
          CSharp: public static string GetSelected(this TMP_Dropdown dropdown)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetSelected(dropdown As TMP_Dropdown) As String
        parameters:
        - id: dropdown
          type: TMP_Dropdown
        return:
          type: System.String
      overload: EasyCodeForVivox.Extensions.UIExtensions.GetSelected*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.UIExtensions.AddValue(TMP_Dropdown,System.String)
      commentId: M:EasyCodeForVivox.Extensions.UIExtensions.AddValue(TMP_Dropdown,System.String)
      language: CSharp
      name:
        CSharp: AddValue(TMP_Dropdown, String)
        VB: AddValue(TMP_Dropdown, String)
      nameWithType:
        CSharp: UIExtensions.AddValue(TMP_Dropdown, String)
        VB: UIExtensions.AddValue(TMP_Dropdown, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.UIExtensions.AddValue(TMP_Dropdown, System.String)
        VB: EasyCodeForVivox.Extensions.UIExtensions.AddValue(TMP_Dropdown, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: AddValue
        path: ''
        startLine: 7881
      syntax:
        content:
          CSharp: public static void AddValue(this TMP_Dropdown dropdown, string valueToAdd)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub AddValue(dropdown As TMP_Dropdown, valueToAdd As String)
        parameters:
        - id: dropdown
          type: TMP_Dropdown
        - id: valueToAdd
          type: System.String
      overload: EasyCodeForVivox.Extensions.UIExtensions.AddValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue(TMP_Dropdown,System.String)
      commentId: M:EasyCodeForVivox.Extensions.UIExtensions.RemoveValue(TMP_Dropdown,System.String)
      language: CSharp
      name:
        CSharp: RemoveValue(TMP_Dropdown, String)
        VB: RemoveValue(TMP_Dropdown, String)
      nameWithType:
        CSharp: UIExtensions.RemoveValue(TMP_Dropdown, String)
        VB: UIExtensions.RemoveValue(TMP_Dropdown, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue(TMP_Dropdown, System.String)
        VB: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue(TMP_Dropdown, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: RemoveValue
        path: ''
        startLine: 7887
      syntax:
        content:
          CSharp: public static void RemoveValue(this TMP_Dropdown dropdown, string valueToRemove)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub RemoveValue(dropdown As TMP_Dropdown, valueToRemove As String)
        parameters:
        - id: dropdown
          type: TMP_Dropdown
        - id: valueToRemove
          type: System.String
      overload: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.UIExtensions.TurnOn(Toggle)
      commentId: M:EasyCodeForVivox.Extensions.UIExtensions.TurnOn(Toggle)
      language: CSharp
      name:
        CSharp: TurnOn(Toggle)
        VB: TurnOn(Toggle)
      nameWithType:
        CSharp: UIExtensions.TurnOn(Toggle)
        VB: UIExtensions.TurnOn(Toggle)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.UIExtensions.TurnOn(Toggle)
        VB: EasyCodeForVivox.Extensions.UIExtensions.TurnOn(Toggle)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TurnOn
        path: ''
        startLine: 7898
      syntax:
        content:
          CSharp: public static void TurnOn(this Toggle toggle)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TurnOn(toggle As Toggle)
        parameters:
        - id: toggle
          type: Toggle
      overload: EasyCodeForVivox.Extensions.UIExtensions.TurnOn*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.UIExtensions.TurnOff(Toggle)
      commentId: M:EasyCodeForVivox.Extensions.UIExtensions.TurnOff(Toggle)
      language: CSharp
      name:
        CSharp: TurnOff(Toggle)
        VB: TurnOff(Toggle)
      nameWithType:
        CSharp: UIExtensions.TurnOff(Toggle)
        VB: UIExtensions.TurnOff(Toggle)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.UIExtensions.TurnOff(Toggle)
        VB: EasyCodeForVivox.Extensions.UIExtensions.TurnOff(Toggle)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: TurnOff
        path: ''
        startLine: 7903
      syntax:
        content:
          CSharp: public static void TurnOff(this Toggle toggle)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub TurnOff(toggle As Toggle)
        parameters:
        - id: toggle
          type: Toggle
      overload: EasyCodeForVivox.Extensions.UIExtensions.TurnOff*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: EasyCodeForVivox.Extensions.VivoxExtensions
    commentId: T:EasyCodeForVivox.Extensions.VivoxExtensions
    language: CSharp
    name:
      CSharp: VivoxExtensions
      VB: VivoxExtensions
    nameWithType:
      CSharp: VivoxExtensions
      VB: VivoxExtensions
    qualifiedName:
      CSharp: EasyCodeForVivox.Extensions.VivoxExtensions
      VB: EasyCodeForVivox.Extensions.VivoxExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Extensions
    source:
      id: VivoxExtensions
      path: ''
      startLine: 7919
    syntax:
      content:
        CSharp: public static class VivoxExtensions
        VB: Public Module VivoxExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId(ILoginSession,System.String)
      commentId: M:EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId(ILoginSession,System.String)
      language: CSharp
      name:
        CSharp: GetChannelId(ILoginSession, String)
        VB: GetChannelId(ILoginSession, String)
      nameWithType:
        CSharp: VivoxExtensions.GetChannelId(ILoginSession, String)
        VB: VivoxExtensions.GetChannelId(ILoginSession, String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId(ILoginSession, System.String)
        VB: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId(ILoginSession, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: GetChannelId
        path: ''
        startLine: 7921
      syntax:
        content:
          CSharp: public static ChannelId GetChannelId(this ILoginSession loginSession, string channelName)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetChannelId(loginSession As ILoginSession, channelName As String) As ChannelId
        parameters:
        - id: loginSession
          type: ILoginSession
        - id: channelName
          type: System.String
        return:
          type: ChannelId
      overload: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash(System.String)
      commentId: M:EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash(System.String)
      language: CSharp
      name:
        CSharp: GetMD5Hash(String)
        VB: GetMD5Hash(String)
      nameWithType:
        CSharp: VivoxExtensions.GetMD5Hash(String)
        VB: VivoxExtensions.GetMD5Hash(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash(System.String)
        VB: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Extensions
      source:
        id: GetMD5Hash
        path: ''
        startLine: 7927
      syntax:
        content:
          CSharp: public static string GetMD5Hash(this string valueToHash)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetMD5Hash(valueToHash As String) As String
        parameters:
        - id: valueToHash
          type: System.String
        return:
          type: System.String
      overload: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: EasyCodeForVivox.Utilities
  commentId: N:EasyCodeForVivox.Utilities
  language: CSharp
  name:
    CSharp: EasyCodeForVivox.Utilities
    VB: EasyCodeForVivox.Utilities
  nameWithType:
    CSharp: EasyCodeForVivox.Utilities
    VB: EasyCodeForVivox.Utilities
  qualifiedName:
    CSharp: EasyCodeForVivox.Utilities
    VB: EasyCodeForVivox.Utilities
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities
    commentId: T:EasyCodeForVivox.Utilities.EasyVivoxUtilities
    language: CSharp
    name:
      CSharp: EasyVivoxUtilities
      VB: EasyVivoxUtilities
    nameWithType:
      CSharp: EasyVivoxUtilities
      VB: EasyVivoxUtilities
    qualifiedName:
      CSharp: EasyCodeForVivox.Utilities.EasyVivoxUtilities
      VB: EasyCodeForVivox.Utilities.EasyVivoxUtilities
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: EasyCodeForVivox.Utilities
    source:
      id: EasyVivoxUtilities
      path: ''
      startLine: 7984
    syntax:
      content:
        CSharp: public static class EasyVivoxUtilities
        VB: Public Module EasyVivoxUtilities
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission
      commentId: M:EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission
      language: CSharp
      name:
        CSharp: RequestAndroidMicPermission()
        VB: RequestAndroidMicPermission()
      nameWithType:
        CSharp: EasyVivoxUtilities.RequestAndroidMicPermission()
        VB: EasyVivoxUtilities.RequestAndroidMicPermission()
      qualifiedName:
        CSharp: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission()
        VB: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Utilities
      source:
        id: RequestAndroidMicPermission
        path: ''
        startLine: 7987
      syntax:
        content:
          CSharp: public static void RequestAndroidMicPermission()
          VB: Public Shared Sub RequestAndroidMicPermission
      overload: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess
      commentId: M:EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess
      language: CSharp
      name:
        CSharp: RequestIOSMicrophoneAccess()
        VB: RequestIOSMicrophoneAccess()
      nameWithType:
        CSharp: EasyVivoxUtilities.RequestIOSMicrophoneAccess()
        VB: EasyVivoxUtilities.RequestIOSMicrophoneAccess()
      qualifiedName:
        CSharp: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess()
        VB: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Utilities
      source:
        id: RequestIOSMicrophoneAccess
        path: ''
        startLine: 7998
      syntax:
        content:
          CSharp: public static void RequestIOSMicrophoneAccess()
          VB: Public Shared Sub RequestIOSMicrophoneAccess
      overload: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName(System.String)
      commentId: M:EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName(System.String)
      language: CSharp
      name:
        CSharp: FilterChannelAndUserName(String)
        VB: FilterChannelAndUserName(String)
      nameWithType:
        CSharp: EasyVivoxUtilities.FilterChannelAndUserName(String)
        VB: EasyVivoxUtilities.FilterChannelAndUserName(String)
      qualifiedName:
        CSharp: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName(System.String)
        VB: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: EasyCodeForVivox.Utilities
      source:
        id: FilterChannelAndUserName
        path: ''
        startLine: 8010
      syntax:
        content:
          CSharp: public static bool FilterChannelAndUserName(string nameToFilter)
          VB: Public Shared Function FilterChannelAndUserName(nameToFilter As String) As Boolean
        parameters:
        - id: nameToFilter
          type: System.String
        return:
          type: System.Boolean
      overload: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists*
        name: CheckIfChannelExists
        nameWithType: Easy3DPositional.CheckIfChannelExists
        qualifiedName: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists
      VB:
      - id: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists*
        name: CheckIfChannelExists
        nameWithType: Easy3DPositional.CheckIfChannelExists
        qualifiedName: EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Easy3DPositional.CheckIfChannelExists
  EasyCodeForVivox.Easy3DPositional.Update3DPosition*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Easy3DPositional.Update3DPosition*
        name: Update3DPosition
        nameWithType: Easy3DPositional.Update3DPosition
        qualifiedName: EasyCodeForVivox.Easy3DPositional.Update3DPosition
      VB:
      - id: EasyCodeForVivox.Easy3DPositional.Update3DPosition*
        name: Update3DPosition
        nameWithType: Easy3DPositional.Update3DPosition
        qualifiedName: EasyCodeForVivox.Easy3DPositional.Update3DPosition
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Easy3DPositional.Update3DPosition
  EasyCodeForVivox.Easy3DPositional:
    name:
      CSharp:
      - id: EasyCodeForVivox.Easy3DPositional
        name: Easy3DPositional
        nameWithType: Easy3DPositional
        qualifiedName: EasyCodeForVivox.Easy3DPositional
      VB:
      - id: EasyCodeForVivox.Easy3DPositional
        name: Easy3DPositional
        nameWithType: Easy3DPositional
        qualifiedName: EasyCodeForVivox.Easy3DPositional
    isDefinition: true
    commentId: T:EasyCodeForVivox.Easy3DPositional
  EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists*:
    name:
      CSharp:
      - id: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists*
        name: CheckIfChannelExists
        nameWithType: NetCode3DPositional.CheckIfChannelExists
        qualifiedName: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists
      VB:
      - id: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists*
        name: CheckIfChannelExists
        nameWithType: NetCode3DPositional.CheckIfChannelExists
        qualifiedName: EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.NetCode3DPositional.CheckIfChannelExists
  EasyCodeForVivox.NetCode3DPositional.Update3DPosition*:
    name:
      CSharp:
      - id: EasyCodeForVivox.NetCode3DPositional.Update3DPosition*
        name: Update3DPosition
        nameWithType: NetCode3DPositional.Update3DPosition
        qualifiedName: EasyCodeForVivox.NetCode3DPositional.Update3DPosition
      VB:
      - id: EasyCodeForVivox.NetCode3DPositional.Update3DPosition*
        name: Update3DPosition
        nameWithType: NetCode3DPositional.Update3DPosition
        qualifiedName: EasyCodeForVivox.NetCode3DPositional.Update3DPosition
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.NetCode3DPositional.Update3DPosition
  EasyCodeForVivox.NetCode3DPositional:
    name:
      CSharp:
      - id: EasyCodeForVivox.NetCode3DPositional
        name: NetCode3DPositional
        nameWithType: NetCode3DPositional
        qualifiedName: EasyCodeForVivox.NetCode3DPositional
      VB:
      - id: EasyCodeForVivox.NetCode3DPositional
        name: NetCode3DPositional
        nameWithType: NetCode3DPositional
        qualifiedName: EasyCodeForVivox.NetCode3DPositional
    isDefinition: true
    commentId: T:EasyCodeForVivox.NetCode3DPositional
  Task:
    name:
      CSharp:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      VB:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
    isDefinition: true
  VivoxConfig:
    name:
      CSharp:
      - id: VivoxConfig
        name: VivoxConfig
        nameWithType: VivoxConfig
        qualifiedName: VivoxConfig
        isExternal: true
      VB:
      - id: VivoxConfig
        name: VivoxConfig
        nameWithType: VivoxConfig
        qualifiedName: VivoxConfig
        isExternal: true
    isDefinition: true
    commentId: '!:VivoxConfig'
  EasyCodeForVivox.EasyManager.InitializeClient*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.InitializeClient*
        name: InitializeClient
        nameWithType: EasyManager.InitializeClient
        qualifiedName: EasyCodeForVivox.EasyManager.InitializeClient
      VB:
      - id: EasyCodeForVivox.EasyManager.InitializeClient*
        name: InitializeClient
        nameWithType: EasyManager.InitializeClient
        qualifiedName: EasyCodeForVivox.EasyManager.InitializeClient
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.InitializeClient
  EasyCodeForVivox.EasyManager.UnitializeClient*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.UnitializeClient*
        name: UnitializeClient
        nameWithType: EasyManager.UnitializeClient
        qualifiedName: EasyCodeForVivox.EasyManager.UnitializeClient
      VB:
      - id: EasyCodeForVivox.EasyManager.UnitializeClient*
        name: UnitializeClient
        nameWithType: EasyManager.UnitializeClient
        qualifiedName: EasyCodeForVivox.EasyManager.UnitializeClient
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.UnitializeClient
  EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents*
        name: SubscribeToVivoxEvents
        nameWithType: EasyManager.SubscribeToVivoxEvents
        qualifiedName: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents
      VB:
      - id: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents*
        name: SubscribeToVivoxEvents
        nameWithType: EasyManager.SubscribeToVivoxEvents
        qualifiedName: EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SubscribeToVivoxEvents
  EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents*
        name: UnsubscribeToVivoxEvents
        nameWithType: EasyManager.UnsubscribeToVivoxEvents
        qualifiedName: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents
      VB:
      - id: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents*
        name: UnsubscribeToVivoxEvents
        nameWithType: EasyManager.UnsubscribeToVivoxEvents
        qualifiedName: EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.UnsubscribeToVivoxEvents
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  EasyCodeForVivox.EasyManager.LoginToVivox*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.LoginToVivox*
        name: LoginToVivox
        nameWithType: EasyManager.LoginToVivox
        qualifiedName: EasyCodeForVivox.EasyManager.LoginToVivox
      VB:
      - id: EasyCodeForVivox.EasyManager.LoginToVivox*
        name: LoginToVivox
        nameWithType: EasyManager.LoginToVivox
        qualifiedName: EasyCodeForVivox.EasyManager.LoginToVivox
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.LoginToVivox
  ParticipantPropertyUpdateFrequency:
    name:
      CSharp:
      - id: ParticipantPropertyUpdateFrequency
        name: ParticipantPropertyUpdateFrequency
        nameWithType: ParticipantPropertyUpdateFrequency
        qualifiedName: ParticipantPropertyUpdateFrequency
        isExternal: true
      VB:
      - id: ParticipantPropertyUpdateFrequency
        name: ParticipantPropertyUpdateFrequency
        nameWithType: ParticipantPropertyUpdateFrequency
        qualifiedName: ParticipantPropertyUpdateFrequency
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.UpdateLoginProperties*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.UpdateLoginProperties*
        name: UpdateLoginProperties
        nameWithType: EasyManager.UpdateLoginProperties
        qualifiedName: EasyCodeForVivox.EasyManager.UpdateLoginProperties
      VB:
      - id: EasyCodeForVivox.EasyManager.UpdateLoginProperties*
        name: UpdateLoginProperties
        nameWithType: EasyManager.UpdateLoginProperties
        qualifiedName: EasyCodeForVivox.EasyManager.UpdateLoginProperties
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.UpdateLoginProperties
  EasyCodeForVivox.EasyManager.LogoutOfVivox*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.LogoutOfVivox*
        name: LogoutOfVivox
        nameWithType: EasyManager.LogoutOfVivox
        qualifiedName: EasyCodeForVivox.EasyManager.LogoutOfVivox
      VB:
      - id: EasyCodeForVivox.EasyManager.LogoutOfVivox*
        name: LogoutOfVivox
        nameWithType: EasyManager.LogoutOfVivox
        qualifiedName: EasyCodeForVivox.EasyManager.LogoutOfVivox
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.LogoutOfVivox
  ChannelType:
    name:
      CSharp:
      - id: ChannelType
        name: ChannelType
        nameWithType: ChannelType
        qualifiedName: ChannelType
        isExternal: true
      VB:
      - id: ChannelType
        name: ChannelType
        nameWithType: ChannelType
        qualifiedName: ChannelType
        isExternal: true
    isDefinition: true
  Channel3DProperties:
    name:
      CSharp:
      - id: Channel3DProperties
        name: Channel3DProperties
        nameWithType: Channel3DProperties
        qualifiedName: Channel3DProperties
        isExternal: true
      VB:
      - id: Channel3DProperties
        name: Channel3DProperties
        nameWithType: Channel3DProperties
        qualifiedName: Channel3DProperties
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.JoinChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.JoinChannel*
        name: JoinChannel
        nameWithType: EasyManager.JoinChannel
        qualifiedName: EasyCodeForVivox.EasyManager.JoinChannel
      VB:
      - id: EasyCodeForVivox.EasyManager.JoinChannel*
        name: JoinChannel
        nameWithType: EasyManager.JoinChannel
        qualifiedName: EasyCodeForVivox.EasyManager.JoinChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.JoinChannel
  EasyCodeForVivox.EasyManager.JoinChannelRegion*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.JoinChannelRegion*
        name: JoinChannelRegion
        nameWithType: EasyManager.JoinChannelRegion
        qualifiedName: EasyCodeForVivox.EasyManager.JoinChannelRegion
      VB:
      - id: EasyCodeForVivox.EasyManager.JoinChannelRegion*
        name: JoinChannelRegion
        nameWithType: EasyManager.JoinChannelRegion
        qualifiedName: EasyCodeForVivox.EasyManager.JoinChannelRegion
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.JoinChannelRegion
  EasyCodeForVivox.EasyManager.LeaveChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.LeaveChannel*
        name: LeaveChannel
        nameWithType: EasyManager.LeaveChannel
        qualifiedName: EasyCodeForVivox.EasyManager.LeaveChannel
      VB:
      - id: EasyCodeForVivox.EasyManager.LeaveChannel*
        name: LeaveChannel
        nameWithType: EasyManager.LeaveChannel
        qualifiedName: EasyCodeForVivox.EasyManager.LeaveChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.LeaveChannel
  EasyCodeForVivox.EasyManager.ToggleAudioInChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.ToggleAudioInChannel*
        name: ToggleAudioInChannel
        nameWithType: EasyManager.ToggleAudioInChannel
        qualifiedName: EasyCodeForVivox.EasyManager.ToggleAudioInChannel
      VB:
      - id: EasyCodeForVivox.EasyManager.ToggleAudioInChannel*
        name: ToggleAudioInChannel
        nameWithType: EasyManager.ToggleAudioInChannel
        qualifiedName: EasyCodeForVivox.EasyManager.ToggleAudioInChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.ToggleAudioInChannel
  EasyCodeForVivox.EasyManager.ToggleTextInChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.ToggleTextInChannel*
        name: ToggleTextInChannel
        nameWithType: EasyManager.ToggleTextInChannel
        qualifiedName: EasyCodeForVivox.EasyManager.ToggleTextInChannel
      VB:
      - id: EasyCodeForVivox.EasyManager.ToggleTextInChannel*
        name: ToggleTextInChannel
        nameWithType: EasyManager.ToggleTextInChannel
        qualifiedName: EasyCodeForVivox.EasyManager.ToggleTextInChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.ToggleTextInChannel
  EasyCodeForVivox.EasyManager.SendChannelMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SendChannelMessage*
        name: SendChannelMessage
        nameWithType: EasyManager.SendChannelMessage
        qualifiedName: EasyCodeForVivox.EasyManager.SendChannelMessage
      VB:
      - id: EasyCodeForVivox.EasyManager.SendChannelMessage*
        name: SendChannelMessage
        nameWithType: EasyManager.SendChannelMessage
        qualifiedName: EasyCodeForVivox.EasyManager.SendChannelMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SendChannelMessage
  EasyCodeForVivox.EasyManager.SendEventMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SendEventMessage*
        name: SendEventMessage
        nameWithType: EasyManager.SendEventMessage
        qualifiedName: EasyCodeForVivox.EasyManager.SendEventMessage
      VB:
      - id: EasyCodeForVivox.EasyManager.SendEventMessage*
        name: SendEventMessage
        nameWithType: EasyManager.SendEventMessage
        qualifiedName: EasyCodeForVivox.EasyManager.SendEventMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SendEventMessage
  EasyCodeForVivox.EasyManager.SendDirectMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SendDirectMessage*
        name: SendDirectMessage
        nameWithType: EasyManager.SendDirectMessage
        qualifiedName: EasyCodeForVivox.EasyManager.SendDirectMessage
      VB:
      - id: EasyCodeForVivox.EasyManager.SendDirectMessage*
        name: SendDirectMessage
        nameWithType: EasyManager.SendDirectMessage
        qualifiedName: EasyCodeForVivox.EasyManager.SendDirectMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SendDirectMessage
  EasyCodeForVivox.EasyManager.MuteSelf*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.MuteSelf*
        name: MuteSelf
        nameWithType: EasyManager.MuteSelf
        qualifiedName: EasyCodeForVivox.EasyManager.MuteSelf
      VB:
      - id: EasyCodeForVivox.EasyManager.MuteSelf*
        name: MuteSelf
        nameWithType: EasyManager.MuteSelf
        qualifiedName: EasyCodeForVivox.EasyManager.MuteSelf
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.MuteSelf
  EasyCodeForVivox.EasyManager.UnmuteSelf*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.UnmuteSelf*
        name: UnmuteSelf
        nameWithType: EasyManager.UnmuteSelf
        qualifiedName: EasyCodeForVivox.EasyManager.UnmuteSelf
      VB:
      - id: EasyCodeForVivox.EasyManager.UnmuteSelf*
        name: UnmuteSelf
        nameWithType: EasyManager.UnmuteSelf
        qualifiedName: EasyCodeForVivox.EasyManager.UnmuteSelf
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.UnmuteSelf
  EasyCodeForVivox.EasyManager.LocalMuteRemoteUser*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser*
        name: LocalMuteRemoteUser
        nameWithType: EasyManager.LocalMuteRemoteUser
        qualifiedName: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser
      VB:
      - id: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser*
        name: LocalMuteRemoteUser
        nameWithType: EasyManager.LocalMuteRemoteUser
        qualifiedName: EasyCodeForVivox.EasyManager.LocalMuteRemoteUser
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.LocalMuteRemoteUser
  EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser*
        name: LocalUnmuteRemoteUser
        nameWithType: EasyManager.LocalUnmuteRemoteUser
        qualifiedName: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser
      VB:
      - id: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser*
        name: LocalUnmuteRemoteUser
        nameWithType: EasyManager.LocalUnmuteRemoteUser
        qualifiedName: EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.LocalUnmuteRemoteUser
  EasyCodeForVivox.EasyManager.LocalMuteAllPlayers*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers*
        name: LocalMuteAllPlayers
        nameWithType: EasyManager.LocalMuteAllPlayers
        qualifiedName: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers
      VB:
      - id: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers*
        name: LocalMuteAllPlayers
        nameWithType: EasyManager.LocalMuteAllPlayers
        qualifiedName: EasyCodeForVivox.EasyManager.LocalMuteAllPlayers
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.LocalMuteAllPlayers
  EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers*
        name: LocalUnmuteAllPlayers
        nameWithType: EasyManager.LocalUnmuteAllPlayers
        qualifiedName: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers
      VB:
      - id: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers*
        name: LocalUnmuteAllPlayers
        nameWithType: EasyManager.LocalUnmuteAllPlayers
        qualifiedName: EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.LocalUnmuteAllPlayers
  IEnumerable`1:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  IEnumerable{ChannelId}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ChannelId
        name: ChannelId
        nameWithType: ChannelId
        qualifiedName: ChannelId
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ChannelId
        name: ChannelId
        nameWithType: ChannelId
        qualifiedName: ChannelId
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{ChannelId}'
  EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer*
        name: GetTransmittingChannelsForPlayer
        nameWithType: EasyManager.GetTransmittingChannelsForPlayer
        qualifiedName: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer
      VB:
      - id: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer*
        name: GetTransmittingChannelsForPlayer
        nameWithType: EasyManager.GetTransmittingChannelsForPlayer
        qualifiedName: EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.GetTransmittingChannelsForPlayer
  EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel*
        name: IsPlayerTransmittingInChannel
        nameWithType: EasyManager.IsPlayerTransmittingInChannel
        qualifiedName: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel
      VB:
      - id: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel*
        name: IsPlayerTransmittingInChannel
        nameWithType: EasyManager.IsPlayerTransmittingInChannel
        qualifiedName: EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.IsPlayerTransmittingInChannel
  TransmissionMode:
    name:
      CSharp:
      - id: TransmissionMode
        name: TransmissionMode
        nameWithType: TransmissionMode
        qualifiedName: TransmissionMode
        isExternal: true
      VB:
      - id: TransmissionMode
        name: TransmissionMode
        nameWithType: TransmissionMode
        qualifiedName: TransmissionMode
        isExternal: true
    isDefinition: true
  ChannelId:
    name:
      CSharp:
      - id: ChannelId
        name: ChannelId
        nameWithType: ChannelId
        qualifiedName: ChannelId
        isExternal: true
      VB:
      - id: ChannelId
        name: ChannelId
        nameWithType: ChannelId
        qualifiedName: ChannelId
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode*
        name: SetPlayerTransmissionMode
        nameWithType: EasyManager.SetPlayerTransmissionMode
        qualifiedName: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode
      VB:
      - id: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode*
        name: SetPlayerTransmissionMode
        nameWithType: EasyManager.SetPlayerTransmissionMode
        qualifiedName: EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SetPlayerTransmissionMode
  EasyCodeForVivox.EasyManager.GetChannelId*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.GetChannelId*
        name: GetChannelId
        nameWithType: EasyManager.GetChannelId
        qualifiedName: EasyCodeForVivox.EasyManager.GetChannelId
      VB:
      - id: EasyCodeForVivox.EasyManager.GetChannelId*
        name: GetChannelId
        nameWithType: EasyManager.GetChannelId
        qualifiedName: EasyCodeForVivox.EasyManager.GetChannelId
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.GetChannelId
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  EasyCodeForVivox.EasyManager.AdjustLocalUserVolume*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume*
        name: AdjustLocalUserVolume
        nameWithType: EasyManager.AdjustLocalUserVolume
        qualifiedName: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume
      VB:
      - id: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume*
        name: AdjustLocalUserVolume
        nameWithType: EasyManager.AdjustLocalUserVolume
        qualifiedName: EasyCodeForVivox.EasyManager.AdjustLocalUserVolume
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.AdjustLocalUserVolume
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume*
        name: AdjustRemoteUserVolume
        nameWithType: EasyManager.AdjustRemoteUserVolume
        qualifiedName: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume
      VB:
      - id: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume*
        name: AdjustRemoteUserVolume
        nameWithType: EasyManager.AdjustRemoteUserVolume
        qualifiedName: EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.AdjustRemoteUserVolume
  EasyCodeForVivox.EasyManager.CrossMuteUser*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.CrossMuteUser*
        name: CrossMuteUser
        nameWithType: EasyManager.CrossMuteUser
        qualifiedName: EasyCodeForVivox.EasyManager.CrossMuteUser
      VB:
      - id: EasyCodeForVivox.EasyManager.CrossMuteUser*
        name: CrossMuteUser
        nameWithType: EasyManager.CrossMuteUser
        qualifiedName: EasyCodeForVivox.EasyManager.CrossMuteUser
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.CrossMuteUser
  List`1:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  List{System.String}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{System.String}'
  EasyCodeForVivox.EasyManager.CrossMuteUsers*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.CrossMuteUsers*
        name: CrossMuteUsers
        nameWithType: EasyManager.CrossMuteUsers
        qualifiedName: EasyCodeForVivox.EasyManager.CrossMuteUsers
      VB:
      - id: EasyCodeForVivox.EasyManager.CrossMuteUsers*
        name: CrossMuteUsers
        nameWithType: EasyManager.CrossMuteUsers
        qualifiedName: EasyCodeForVivox.EasyManager.CrossMuteUsers
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.CrossMuteUsers
  EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession*
        name: ClearCrossMutedUsersForLoginSession
        nameWithType: EasyManager.ClearCrossMutedUsersForLoginSession
        qualifiedName: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession
      VB:
      - id: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession*
        name: ClearCrossMutedUsersForLoginSession
        nameWithType: EasyManager.ClearCrossMutedUsersForLoginSession
        qualifiedName: EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.ClearCrossMutedUsersForLoginSession
  EasyCodeForVivox.EasyManager.StartAudioInjection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.StartAudioInjection*
        name: StartAudioInjection
        nameWithType: EasyManager.StartAudioInjection
        qualifiedName: EasyCodeForVivox.EasyManager.StartAudioInjection
      VB:
      - id: EasyCodeForVivox.EasyManager.StartAudioInjection*
        name: StartAudioInjection
        nameWithType: EasyManager.StartAudioInjection
        qualifiedName: EasyCodeForVivox.EasyManager.StartAudioInjection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.StartAudioInjection
  EasyCodeForVivox.EasyManager.StopAudioInjection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.StopAudioInjection*
        name: StopAudioInjection
        nameWithType: EasyManager.StopAudioInjection
        qualifiedName: EasyCodeForVivox.EasyManager.StopAudioInjection
      VB:
      - id: EasyCodeForVivox.EasyManager.StopAudioInjection*
        name: StopAudioInjection
        nameWithType: EasyManager.StopAudioInjection
        qualifiedName: EasyCodeForVivox.EasyManager.StopAudioInjection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.StopAudioInjection
  EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection*
        name: SetAutoVoiceActivityDetection
        nameWithType: EasyManager.SetAutoVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection
      VB:
      - id: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection*
        name: SetAutoVoiceActivityDetection
        nameWithType: EasyManager.SetAutoVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SetAutoVoiceActivityDetection
  EasyCodeForVivox.EasyManager.SetVoiceActivityDetection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection*
        name: SetVoiceActivityDetection
        nameWithType: EasyManager.SetVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection
      VB:
      - id: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection*
        name: SetVoiceActivityDetection
        nameWithType: EasyManager.SetVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyManager.SetVoiceActivityDetection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SetVoiceActivityDetection
  EasyCodeForVivox.EasyManager.SetAudioInputDevice*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SetAudioInputDevice*
        name: SetAudioInputDevice
        nameWithType: EasyManager.SetAudioInputDevice
        qualifiedName: EasyCodeForVivox.EasyManager.SetAudioInputDevice
      VB:
      - id: EasyCodeForVivox.EasyManager.SetAudioInputDevice*
        name: SetAudioInputDevice
        nameWithType: EasyManager.SetAudioInputDevice
        qualifiedName: EasyCodeForVivox.EasyManager.SetAudioInputDevice
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SetAudioInputDevice
  EasyCodeForVivox.EasyManager.SetAudioOutputDevice*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.SetAudioOutputDevice*
        name: SetAudioOutputDevice
        nameWithType: EasyManager.SetAudioOutputDevice
        qualifiedName: EasyCodeForVivox.EasyManager.SetAudioOutputDevice
      VB:
      - id: EasyCodeForVivox.EasyManager.SetAudioOutputDevice*
        name: SetAudioOutputDevice
        nameWithType: EasyManager.SetAudioOutputDevice
        qualifiedName: EasyCodeForVivox.EasyManager.SetAudioOutputDevice
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.SetAudioOutputDevice
  EasyCodeForVivox.EasyManager.RefreshAudioInputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices*
        name: RefreshAudioInputDevices
        nameWithType: EasyManager.RefreshAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices
      VB:
      - id: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices*
        name: RefreshAudioInputDevices
        nameWithType: EasyManager.RefreshAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.RefreshAudioInputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.RefreshAudioInputDevices
  EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices*
        name: RefreshAudioOutputDevices
        nameWithType: EasyManager.RefreshAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices
      VB:
      - id: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices*
        name: RefreshAudioOutputDevices
        nameWithType: EasyManager.RefreshAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.RefreshAudioOutputDevices
  IEnumerable{IAudioDevice}:
    name:
      CSharp:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IAudioDevice
        name: IAudioDevice
        nameWithType: IAudioDevice
        qualifiedName: IAudioDevice
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IAudioDevice
        name: IAudioDevice
        nameWithType: IAudioDevice
        qualifiedName: IAudioDevice
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerable`1
    commentId: '!:IEnumerable{IAudioDevice}'
  EasyCodeForVivox.EasyManager.GetAudioInputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.GetAudioInputDevices*
        name: GetAudioInputDevices
        nameWithType: EasyManager.GetAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.GetAudioInputDevices
      VB:
      - id: EasyCodeForVivox.EasyManager.GetAudioInputDevices*
        name: GetAudioInputDevices
        nameWithType: EasyManager.GetAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.GetAudioInputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.GetAudioInputDevices
  EasyCodeForVivox.EasyManager.GetAudioOutputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.GetAudioOutputDevices*
        name: GetAudioOutputDevices
        nameWithType: EasyManager.GetAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.GetAudioOutputDevices
      VB:
      - id: EasyCodeForVivox.EasyManager.GetAudioOutputDevices*
        name: GetAudioOutputDevices
        nameWithType: EasyManager.GetAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyManager.GetAudioOutputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.GetAudioOutputDevices
  KeyCode:
    name:
      CSharp:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      VB:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
    isDefinition: true
    commentId: '!:KeyCode'
  EasyCodeForVivox.EasyManager.EnablePushToTalk*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.EnablePushToTalk*
        name: EnablePushToTalk
        nameWithType: EasyManager.EnablePushToTalk
        qualifiedName: EasyCodeForVivox.EasyManager.EnablePushToTalk
      VB:
      - id: EasyCodeForVivox.EasyManager.EnablePushToTalk*
        name: EnablePushToTalk
        nameWithType: EasyManager.EnablePushToTalk
        qualifiedName: EasyCodeForVivox.EasyManager.EnablePushToTalk
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.EnablePushToTalk
  EasyCodeForVivox.EasyManager.PlayTTSMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.PlayTTSMessage*
        name: PlayTTSMessage
        nameWithType: EasyManager.PlayTTSMessage
        qualifiedName: EasyCodeForVivox.EasyManager.PlayTTSMessage
      VB:
      - id: EasyCodeForVivox.EasyManager.PlayTTSMessage*
        name: PlayTTSMessage
        nameWithType: EasyManager.PlayTTSMessage
        qualifiedName: EasyCodeForVivox.EasyManager.PlayTTSMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.PlayTTSMessage
  TTSDestination:
    name:
      CSharp:
      - id: TTSDestination
        name: TTSDestination
        nameWithType: TTSDestination
        qualifiedName: TTSDestination
        isExternal: true
      VB:
      - id: TTSDestination
        name: TTSDestination
        nameWithType: TTSDestination
        qualifiedName: TTSDestination
        isExternal: true
    isDefinition: true
  EasyCodeForVivox:
    name:
      CSharp:
      - name: EasyCodeForVivox
        nameWithType: EasyCodeForVivox
        qualifiedName: EasyCodeForVivox
      VB:
      - name: EasyCodeForVivox
        nameWithType: EasyCodeForVivox
        qualifiedName: EasyCodeForVivox
    isDefinition: true
    commentId: N:EasyCodeForVivox
  EasyCodeForVivox.VoiceGender:
    name:
      CSharp:
      - id: EasyCodeForVivox.VoiceGender
        name: VoiceGender
        nameWithType: VoiceGender
        qualifiedName: EasyCodeForVivox.VoiceGender
      VB:
      - id: EasyCodeForVivox.VoiceGender
        name: VoiceGender
        nameWithType: VoiceGender
        qualifiedName: EasyCodeForVivox.VoiceGender
    isDefinition: true
    parent: EasyCodeForVivox
    commentId: T:EasyCodeForVivox.VoiceGender
  EasyCodeForVivox.EasyManager.ChooseVoiceGender*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.ChooseVoiceGender*
        name: ChooseVoiceGender
        nameWithType: EasyManager.ChooseVoiceGender
        qualifiedName: EasyCodeForVivox.EasyManager.ChooseVoiceGender
      VB:
      - id: EasyCodeForVivox.EasyManager.ChooseVoiceGender*
        name: ChooseVoiceGender
        nameWithType: EasyManager.ChooseVoiceGender
        qualifiedName: EasyCodeForVivox.EasyManager.ChooseVoiceGender
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.ChooseVoiceGender
  ILoginSession:
    name:
      CSharp:
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
      VB:
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnLoggingIn*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLoggingIn*
        name: OnLoggingIn
        nameWithType: EasyManager.OnLoggingIn
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggingIn
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLoggingIn*
        name: OnLoggingIn
        nameWithType: EasyManager.OnLoggingIn
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggingIn
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLoggingIn
  EasyCodeForVivox.EasyManager.OnLoggedIn*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLoggedIn*
        name: OnLoggedIn
        nameWithType: EasyManager.OnLoggedIn
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggedIn
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLoggedIn*
        name: OnLoggedIn
        nameWithType: EasyManager.OnLoggedIn
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggedIn
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLoggedIn
  EasyCodeForVivox.EasyManager.OnLoggingOut*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLoggingOut*
        name: OnLoggingOut
        nameWithType: EasyManager.OnLoggingOut
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggingOut
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLoggingOut*
        name: OnLoggingOut
        nameWithType: EasyManager.OnLoggingOut
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggingOut
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLoggingOut
  EasyCodeForVivox.EasyManager.OnLoggedOut*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLoggedOut*
        name: OnLoggedOut
        nameWithType: EasyManager.OnLoggedOut
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggedOut
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLoggedOut*
        name: OnLoggedOut
        nameWithType: EasyManager.OnLoggedOut
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoggedOut
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLoggedOut
  AccountId:
    name:
      CSharp:
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
      VB:
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnLoginAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLoginAdded*
        name: OnLoginAdded
        nameWithType: EasyManager.OnLoginAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoginAdded
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLoginAdded*
        name: OnLoginAdded
        nameWithType: EasyManager.OnLoginAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoginAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLoginAdded
  EasyCodeForVivox.EasyManager.OnLoginRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLoginRemoved*
        name: OnLoginRemoved
        nameWithType: EasyManager.OnLoginRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoginRemoved
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLoginRemoved*
        name: OnLoginRemoved
        nameWithType: EasyManager.OnLoginRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoginRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLoginRemoved
  EasyCodeForVivox.EasyManager.OnLoginUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLoginUpdated*
        name: OnLoginUpdated
        nameWithType: EasyManager.OnLoginUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoginUpdated
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLoginUpdated*
        name: OnLoginUpdated
        nameWithType: EasyManager.OnLoginUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnLoginUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLoginUpdated
  IChannelSession:
    name:
      CSharp:
      - id: IChannelSession
        name: IChannelSession
        nameWithType: IChannelSession
        qualifiedName: IChannelSession
        isExternal: true
      VB:
      - id: IChannelSession
        name: IChannelSession
        nameWithType: IChannelSession
        qualifiedName: IChannelSession
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnChannelConnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnChannelConnecting*
        name: OnChannelConnecting
        nameWithType: EasyManager.OnChannelConnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelConnecting
      VB:
      - id: EasyCodeForVivox.EasyManager.OnChannelConnecting*
        name: OnChannelConnecting
        nameWithType: EasyManager.OnChannelConnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelConnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnChannelConnecting
  EasyCodeForVivox.EasyManager.OnChannelConnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnChannelConnected*
        name: OnChannelConnected
        nameWithType: EasyManager.OnChannelConnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelConnected
      VB:
      - id: EasyCodeForVivox.EasyManager.OnChannelConnected*
        name: OnChannelConnected
        nameWithType: EasyManager.OnChannelConnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelConnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnChannelConnected
  EasyCodeForVivox.EasyManager.OnChannelDisconnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnChannelDisconnecting*
        name: OnChannelDisconnecting
        nameWithType: EasyManager.OnChannelDisconnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelDisconnecting
      VB:
      - id: EasyCodeForVivox.EasyManager.OnChannelDisconnecting*
        name: OnChannelDisconnecting
        nameWithType: EasyManager.OnChannelDisconnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelDisconnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnChannelDisconnecting
  EasyCodeForVivox.EasyManager.OnChannelDisconnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnChannelDisconnected*
        name: OnChannelDisconnected
        nameWithType: EasyManager.OnChannelDisconnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelDisconnected
      VB:
      - id: EasyCodeForVivox.EasyManager.OnChannelDisconnected*
        name: OnChannelDisconnected
        nameWithType: EasyManager.OnChannelDisconnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelDisconnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnChannelDisconnected
  EasyCodeForVivox.EasyManager.OnAudioChannelConnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting*
        name: OnAudioChannelConnecting
        nameWithType: EasyManager.OnAudioChannelConnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting*
        name: OnAudioChannelConnecting
        nameWithType: EasyManager.OnAudioChannelConnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelConnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioChannelConnecting
  EasyCodeForVivox.EasyManager.OnAudioChannelConnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelConnected*
        name: OnAudioChannelConnected
        nameWithType: EasyManager.OnAudioChannelConnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelConnected
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelConnected*
        name: OnAudioChannelConnected
        nameWithType: EasyManager.OnAudioChannelConnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelConnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioChannelConnected
  EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting*
        name: OnAudioChannelDisconnecting
        nameWithType: EasyManager.OnAudioChannelDisconnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting*
        name: OnAudioChannelDisconnecting
        nameWithType: EasyManager.OnAudioChannelDisconnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioChannelDisconnecting
  EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected*
        name: OnAudioChannelDisconnected
        nameWithType: EasyManager.OnAudioChannelDisconnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected*
        name: OnAudioChannelDisconnected
        nameWithType: EasyManager.OnAudioChannelDisconnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioChannelDisconnected
  EasyCodeForVivox.EasyManager.OnTextChannelConnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelConnecting*
        name: OnTextChannelConnecting
        nameWithType: EasyManager.OnTextChannelConnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelConnecting
      VB:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelConnecting*
        name: OnTextChannelConnecting
        nameWithType: EasyManager.OnTextChannelConnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelConnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnTextChannelConnecting
  EasyCodeForVivox.EasyManager.OnTextChannelConnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelConnected*
        name: OnTextChannelConnected
        nameWithType: EasyManager.OnTextChannelConnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelConnected
      VB:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelConnected*
        name: OnTextChannelConnected
        nameWithType: EasyManager.OnTextChannelConnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelConnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnTextChannelConnected
  EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting*
        name: OnTextChannelDisconnecting
        nameWithType: EasyManager.OnTextChannelDisconnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting
      VB:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting*
        name: OnTextChannelDisconnecting
        nameWithType: EasyManager.OnTextChannelDisconnecting
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnTextChannelDisconnecting
  EasyCodeForVivox.EasyManager.OnTextChannelDisconnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected*
        name: OnTextChannelDisconnected
        nameWithType: EasyManager.OnTextChannelDisconnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected
      VB:
      - id: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected*
        name: OnTextChannelDisconnected
        nameWithType: EasyManager.OnTextChannelDisconnected
        qualifiedName: EasyCodeForVivox.EasyManager.OnTextChannelDisconnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnTextChannelDisconnected
  EasyCodeForVivox.EasyManager.OnLocalUserMuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLocalUserMuted*
        name: OnLocalUserMuted
        nameWithType: EasyManager.OnLocalUserMuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnLocalUserMuted
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLocalUserMuted*
        name: OnLocalUserMuted
        nameWithType: EasyManager.OnLocalUserMuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnLocalUserMuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLocalUserMuted
  EasyCodeForVivox.EasyManager.OnLocalUserUnmuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted*
        name: OnLocalUserUnmuted
        nameWithType: EasyManager.OnLocalUserUnmuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted
      VB:
      - id: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted*
        name: OnLocalUserUnmuted
        nameWithType: EasyManager.OnLocalUserUnmuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnLocalUserUnmuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnLocalUserUnmuted
  EasyCodeForVivox.EasyManager.OnCrossMuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnCrossMuted*
        name: OnCrossMuted
        nameWithType: EasyManager.OnCrossMuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnCrossMuted
      VB:
      - id: EasyCodeForVivox.EasyManager.OnCrossMuted*
        name: OnCrossMuted
        nameWithType: EasyManager.OnCrossMuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnCrossMuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnCrossMuted
  EasyCodeForVivox.EasyManager.OnCrossUnmuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnCrossUnmuted*
        name: OnCrossUnmuted
        nameWithType: EasyManager.OnCrossUnmuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnCrossUnmuted
      VB:
      - id: EasyCodeForVivox.EasyManager.OnCrossUnmuted*
        name: OnCrossUnmuted
        nameWithType: EasyManager.OnCrossUnmuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnCrossUnmuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnCrossUnmuted
  IParticipant:
    name:
      CSharp:
      - id: IParticipant
        name: IParticipant
        nameWithType: IParticipant
        qualifiedName: IParticipant
        isExternal: true
      VB:
      - id: IParticipant
        name: IParticipant
        nameWithType: IParticipant
        qualifiedName: IParticipant
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnUserMuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnUserMuted*
        name: OnUserMuted
        nameWithType: EasyManager.OnUserMuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserMuted
      VB:
      - id: EasyCodeForVivox.EasyManager.OnUserMuted*
        name: OnUserMuted
        nameWithType: EasyManager.OnUserMuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserMuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnUserMuted
  EasyCodeForVivox.EasyManager.OnUserUnmuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnUserUnmuted*
        name: OnUserUnmuted
        nameWithType: EasyManager.OnUserUnmuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserUnmuted
      VB:
      - id: EasyCodeForVivox.EasyManager.OnUserUnmuted*
        name: OnUserUnmuted
        nameWithType: EasyManager.OnUserUnmuted
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserUnmuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnUserUnmuted
  EasyCodeForVivox.EasyManager.OnUserSpeaking*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnUserSpeaking*
        name: OnUserSpeaking
        nameWithType: EasyManager.OnUserSpeaking
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserSpeaking
      VB:
      - id: EasyCodeForVivox.EasyManager.OnUserSpeaking*
        name: OnUserSpeaking
        nameWithType: EasyManager.OnUserSpeaking
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserSpeaking
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnUserSpeaking
  EasyCodeForVivox.EasyManager.OnUserNotSpeaking*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnUserNotSpeaking*
        name: OnUserNotSpeaking
        nameWithType: EasyManager.OnUserNotSpeaking
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserNotSpeaking
      VB:
      - id: EasyCodeForVivox.EasyManager.OnUserNotSpeaking*
        name: OnUserNotSpeaking
        nameWithType: EasyManager.OnUserNotSpeaking
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserNotSpeaking
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnUserNotSpeaking
  EasyCodeForVivox.EasyManager.OnUserJoinedChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnUserJoinedChannel*
        name: OnUserJoinedChannel
        nameWithType: EasyManager.OnUserJoinedChannel
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserJoinedChannel
      VB:
      - id: EasyCodeForVivox.EasyManager.OnUserJoinedChannel*
        name: OnUserJoinedChannel
        nameWithType: EasyManager.OnUserJoinedChannel
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserJoinedChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnUserJoinedChannel
  EasyCodeForVivox.EasyManager.OnUserLeftChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnUserLeftChannel*
        name: OnUserLeftChannel
        nameWithType: EasyManager.OnUserLeftChannel
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserLeftChannel
      VB:
      - id: EasyCodeForVivox.EasyManager.OnUserLeftChannel*
        name: OnUserLeftChannel
        nameWithType: EasyManager.OnUserLeftChannel
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserLeftChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnUserLeftChannel
  EasyCodeForVivox.EasyManager.OnUserValuesUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnUserValuesUpdated*
        name: OnUserValuesUpdated
        nameWithType: EasyManager.OnUserValuesUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserValuesUpdated
      VB:
      - id: EasyCodeForVivox.EasyManager.OnUserValuesUpdated*
        name: OnUserValuesUpdated
        nameWithType: EasyManager.OnUserValuesUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnUserValuesUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnUserValuesUpdated
  IChannelTextMessage:
    name:
      CSharp:
      - id: IChannelTextMessage
        name: IChannelTextMessage
        nameWithType: IChannelTextMessage
        qualifiedName: IChannelTextMessage
        isExternal: true
      VB:
      - id: IChannelTextMessage
        name: IChannelTextMessage
        nameWithType: IChannelTextMessage
        qualifiedName: IChannelTextMessage
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnChannelMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved*
        name: OnChannelMessageRecieved
        nameWithType: EasyManager.OnChannelMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved
      VB:
      - id: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved*
        name: OnChannelMessageRecieved
        nameWithType: EasyManager.OnChannelMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyManager.OnChannelMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnChannelMessageRecieved
  EasyCodeForVivox.EasyManager.OnEventMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnEventMessageRecieved*
        name: OnEventMessageRecieved
        nameWithType: EasyManager.OnEventMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyManager.OnEventMessageRecieved
      VB:
      - id: EasyCodeForVivox.EasyManager.OnEventMessageRecieved*
        name: OnEventMessageRecieved
        nameWithType: EasyManager.OnEventMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyManager.OnEventMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnEventMessageRecieved
  IDirectedTextMessage:
    name:
      CSharp:
      - id: IDirectedTextMessage
        name: IDirectedTextMessage
        nameWithType: IDirectedTextMessage
        qualifiedName: IDirectedTextMessage
        isExternal: true
      VB:
      - id: IDirectedTextMessage
        name: IDirectedTextMessage
        nameWithType: IDirectedTextMessage
        qualifiedName: IDirectedTextMessage
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnDirectMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved*
        name: OnDirectMessageRecieved
        nameWithType: EasyManager.OnDirectMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved
      VB:
      - id: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved*
        name: OnDirectMessageRecieved
        nameWithType: EasyManager.OnDirectMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyManager.OnDirectMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnDirectMessageRecieved
  IFailedDirectedTextMessage:
    name:
      CSharp:
      - id: IFailedDirectedTextMessage
        name: IFailedDirectedTextMessage
        nameWithType: IFailedDirectedTextMessage
        qualifiedName: IFailedDirectedTextMessage
        isExternal: true
      VB:
      - id: IFailedDirectedTextMessage
        name: IFailedDirectedTextMessage
        nameWithType: IFailedDirectedTextMessage
        qualifiedName: IFailedDirectedTextMessage
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnDirectMessageFailed*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnDirectMessageFailed*
        name: OnDirectMessageFailed
        nameWithType: EasyManager.OnDirectMessageFailed
        qualifiedName: EasyCodeForVivox.EasyManager.OnDirectMessageFailed
      VB:
      - id: EasyCodeForVivox.EasyManager.OnDirectMessageFailed*
        name: OnDirectMessageFailed
        nameWithType: EasyManager.OnDirectMessageFailed
        qualifiedName: EasyCodeForVivox.EasyManager.OnDirectMessageFailed
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnDirectMessageFailed
  IAudioDevice:
    name:
      CSharp:
      - id: IAudioDevice
        name: IAudioDevice
        nameWithType: IAudioDevice
        qualifiedName: IAudioDevice
        isExternal: true
      VB:
      - id: IAudioDevice
        name: IAudioDevice
        nameWithType: IAudioDevice
        qualifiedName: IAudioDevice
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded*
        name: OnAudioInputDeviceAdded
        nameWithType: EasyManager.OnAudioInputDeviceAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded*
        name: OnAudioInputDeviceAdded
        nameWithType: EasyManager.OnAudioInputDeviceAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioInputDeviceAdded
  EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved*
        name: OnAudioInputDeviceRemoved
        nameWithType: EasyManager.OnAudioInputDeviceRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved*
        name: OnAudioInputDeviceRemoved
        nameWithType: EasyManager.OnAudioInputDeviceRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioInputDeviceRemoved
  EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated*
        name: OnAudioInputDeviceUpdated
        nameWithType: EasyManager.OnAudioInputDeviceUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated*
        name: OnAudioInputDeviceUpdated
        nameWithType: EasyManager.OnAudioInputDeviceUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioInputDeviceUpdated
  EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded*
        name: OnAudioOutputDeviceAdded
        nameWithType: EasyManager.OnAudioOutputDeviceAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded*
        name: OnAudioOutputDeviceAdded
        nameWithType: EasyManager.OnAudioOutputDeviceAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioOutputDeviceAdded
  EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved*
        name: OnAudioOutputDeviceRemoved
        nameWithType: EasyManager.OnAudioOutputDeviceRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved*
        name: OnAudioOutputDeviceRemoved
        nameWithType: EasyManager.OnAudioOutputDeviceRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioOutputDeviceRemoved
  EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated*
        name: OnAudioOutputDeviceUpdated
        nameWithType: EasyManager.OnAudioOutputDeviceUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated
      VB:
      - id: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated*
        name: OnAudioOutputDeviceUpdated
        nameWithType: EasyManager.OnAudioOutputDeviceUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnAudioOutputDeviceUpdated
  ITTSMessageQueueEventArgs:
    name:
      CSharp:
      - id: ITTSMessageQueueEventArgs
        name: ITTSMessageQueueEventArgs
        nameWithType: ITTSMessageQueueEventArgs
        qualifiedName: ITTSMessageQueueEventArgs
        isExternal: true
      VB:
      - id: ITTSMessageQueueEventArgs
        name: ITTSMessageQueueEventArgs
        nameWithType: ITTSMessageQueueEventArgs
        qualifiedName: ITTSMessageQueueEventArgs
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyManager.OnTTSMessageAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnTTSMessageAdded*
        name: OnTTSMessageAdded
        nameWithType: EasyManager.OnTTSMessageAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnTTSMessageAdded
      VB:
      - id: EasyCodeForVivox.EasyManager.OnTTSMessageAdded*
        name: OnTTSMessageAdded
        nameWithType: EasyManager.OnTTSMessageAdded
        qualifiedName: EasyCodeForVivox.EasyManager.OnTTSMessageAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnTTSMessageAdded
  EasyCodeForVivox.EasyManager.OnTTSMessageRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved*
        name: OnTTSMessageRemoved
        nameWithType: EasyManager.OnTTSMessageRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved
      VB:
      - id: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved*
        name: OnTTSMessageRemoved
        nameWithType: EasyManager.OnTTSMessageRemoved
        qualifiedName: EasyCodeForVivox.EasyManager.OnTTSMessageRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnTTSMessageRemoved
  EasyCodeForVivox.EasyManager.OnTTSMessageUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated*
        name: OnTTSMessageUpdated
        nameWithType: EasyManager.OnTTSMessageUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated
      VB:
      - id: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated*
        name: OnTTSMessageUpdated
        nameWithType: EasyManager.OnTTSMessageUpdated
        qualifiedName: EasyCodeForVivox.EasyManager.OnTTSMessageUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyManager.OnTTSMessageUpdated
  EasyCodeForVivox.EasyManager:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyManager
        name: EasyManager
        nameWithType: EasyManager
        qualifiedName: EasyCodeForVivox.EasyManager
      VB:
      - id: EasyCodeForVivox.EasyManager
        name: EasyManager
        nameWithType: EasyManager
        qualifiedName: EasyCodeForVivox.EasyManager
    isDefinition: true
    commentId: T:EasyCodeForVivox.EasyManager
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  Uri:
    name:
      CSharp:
      - id: Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: Uri
        isExternal: true
      VB:
      - id: Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: Uri
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasySession.APIEndpoint*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySession.APIEndpoint*
        name: APIEndpoint
        nameWithType: EasySession.APIEndpoint
        qualifiedName: EasyCodeForVivox.EasySession.APIEndpoint
      VB:
      - id: EasyCodeForVivox.EasySession.APIEndpoint*
        name: APIEndpoint
        nameWithType: EasySession.APIEndpoint
        qualifiedName: EasyCodeForVivox.EasySession.APIEndpoint
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySession.APIEndpoint
  EasyCodeForVivox.EasySession.Domain*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySession.Domain*
        name: Domain
        nameWithType: EasySession.Domain
        qualifiedName: EasyCodeForVivox.EasySession.Domain
      VB:
      - id: EasyCodeForVivox.EasySession.Domain*
        name: Domain
        nameWithType: EasySession.Domain
        qualifiedName: EasyCodeForVivox.EasySession.Domain
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySession.Domain
  EasyCodeForVivox.EasySession.Issuer*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySession.Issuer*
        name: Issuer
        nameWithType: EasySession.Issuer
        qualifiedName: EasyCodeForVivox.EasySession.Issuer
      VB:
      - id: EasyCodeForVivox.EasySession.Issuer*
        name: Issuer
        nameWithType: EasySession.Issuer
        qualifiedName: EasyCodeForVivox.EasySession.Issuer
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySession.Issuer
  EasyCodeForVivox.EasySession.SecretKey*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySession.SecretKey*
        name: SecretKey
        nameWithType: EasySession.SecretKey
        qualifiedName: EasyCodeForVivox.EasySession.SecretKey
      VB:
      - id: EasyCodeForVivox.EasySession.SecretKey*
        name: SecretKey
        nameWithType: EasySession.SecretKey
        qualifiedName: EasyCodeForVivox.EasySession.SecretKey
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySession.SecretKey
  VivoxUnity.Client:
    name:
      CSharp:
      - id: VivoxUnity.Client
        name: VivoxUnity.Client
        nameWithType: VivoxUnity.Client
        qualifiedName: VivoxUnity.Client
        isExternal: true
      VB:
      - id: VivoxUnity.Client
        name: VivoxUnity.Client
        nameWithType: VivoxUnity.Client
        qualifiedName: VivoxUnity.Client
        isExternal: true
    isDefinition: true
  Dictionary`2:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Dictionary{System.String,ILoginSession}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,ILoginSession}'
  Dictionary{System.String,IChannelSession}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IChannelSession
        name: IChannelSession
        nameWithType: IChannelSession
        qualifiedName: IChannelSession
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IChannelSession
        name: IChannelSession
        nameWithType: IChannelSession
        qualifiedName: IChannelSession
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,IChannelSession}'
  EasyCodeForVivox.EasySession.UseDynamicEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySession.UseDynamicEvents*
        name: UseDynamicEvents
        nameWithType: EasySession.UseDynamicEvents
        qualifiedName: EasyCodeForVivox.EasySession.UseDynamicEvents
      VB:
      - id: EasyCodeForVivox.EasySession.UseDynamicEvents*
        name: UseDynamicEvents
        nameWithType: EasySession.UseDynamicEvents
        qualifiedName: EasyCodeForVivox.EasySession.UseDynamicEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySession.UseDynamicEvents
  EasyCodeForVivox.EasySession.UniqueCounter*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySession.UniqueCounter*
        name: UniqueCounter
        nameWithType: EasySession.UniqueCounter
        qualifiedName: EasyCodeForVivox.EasySession.UniqueCounter
      VB:
      - id: EasyCodeForVivox.EasySession.UniqueCounter*
        name: UniqueCounter
        nameWithType: EasySession.UniqueCounter
        qualifiedName: EasyCodeForVivox.EasySession.UniqueCounter
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySession.UniqueCounter
  EasyCodeForVivox.EasySession:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySession
        name: EasySession
        nameWithType: EasySession
        qualifiedName: EasyCodeForVivox.EasySession
      VB:
      - id: EasyCodeForVivox.EasySession
        name: EasySession
        nameWithType: EasySession
        qualifiedName: EasyCodeForVivox.EasySession
    isDefinition: true
    commentId: T:EasyCodeForVivox.EasySession
  EasyCodeForVivox.EasyAccessToken.CreateToken*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAccessToken.CreateToken*
        name: CreateToken
        nameWithType: EasyAccessToken.CreateToken
        qualifiedName: EasyCodeForVivox.EasyAccessToken.CreateToken
      VB:
      - id: EasyCodeForVivox.EasyAccessToken.CreateToken*
        name: CreateToken
        nameWithType: EasyAccessToken.CreateToken
        qualifiedName: EasyCodeForVivox.EasyAccessToken.CreateToken
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAccessToken.CreateToken
  EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable{TimeSpan}):
    commentId: M:EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration(System.Nullable{TimeSpan})
  DateTime:
    name:
      CSharp:
      - id: DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
      VB:
      - id: DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
    isDefinition: true
    commentId: '!:DateTime'
  ? EasyCodeForVivox.EasyAccessToken.CreateToken(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)
  : commentId: M:EasyCodeForVivox.EasyAccessToken.CreateToken(System.String,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String)
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{TimeSpan}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: TimeSpan
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TimeSpan
        name: TimeSpan
        nameWithType: TimeSpan
        qualifiedName: TimeSpan
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{TimeSpan}
  EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration*
        name: SecondsSinceUnixEpochPlusDuration
        nameWithType: EasyAccessToken.SecondsSinceUnixEpochPlusDuration
        qualifiedName: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration
      VB:
      - id: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration*
        name: SecondsSinceUnixEpochPlusDuration
        nameWithType: EasyAccessToken.SecondsSinceUnixEpochPlusDuration
        qualifiedName: EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAccessToken.SecondsSinceUnixEpochPlusDuration
  EasyCodeForVivox.EasyAccessToken:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAccessToken
        name: EasyAccessToken
        nameWithType: EasyAccessToken
        qualifiedName: EasyCodeForVivox.EasyAccessToken
      VB:
      - id: EasyCodeForVivox.EasyAccessToken
        name: EasyAccessToken
        nameWithType: EasyAccessToken
        qualifiedName: EasyCodeForVivox.EasyAccessToken
    isDefinition: true
    commentId: T:EasyCodeForVivox.EasyAccessToken
  EasyCodeForVivox.Claims.iss*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims.iss*
        name: iss
        nameWithType: Claims.iss
        qualifiedName: EasyCodeForVivox.Claims.iss
      VB:
      - id: EasyCodeForVivox.Claims.iss*
        name: iss
        nameWithType: Claims.iss
        qualifiedName: EasyCodeForVivox.Claims.iss
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Claims.iss
  EasyCodeForVivox.Claims.exp*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims.exp*
        name: exp
        nameWithType: Claims.exp
        qualifiedName: EasyCodeForVivox.Claims.exp
      VB:
      - id: EasyCodeForVivox.Claims.exp*
        name: exp
        nameWithType: Claims.exp
        qualifiedName: EasyCodeForVivox.Claims.exp
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Claims.exp
  EasyCodeForVivox.Claims.vxa*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims.vxa*
        name: vxa
        nameWithType: Claims.vxa
        qualifiedName: EasyCodeForVivox.Claims.vxa
      VB:
      - id: EasyCodeForVivox.Claims.vxa*
        name: vxa
        nameWithType: Claims.vxa
        qualifiedName: EasyCodeForVivox.Claims.vxa
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Claims.vxa
  EasyCodeForVivox.Claims.vxi*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims.vxi*
        name: vxi
        nameWithType: Claims.vxi
        qualifiedName: EasyCodeForVivox.Claims.vxi
      VB:
      - id: EasyCodeForVivox.Claims.vxi*
        name: vxi
        nameWithType: Claims.vxi
        qualifiedName: EasyCodeForVivox.Claims.vxi
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Claims.vxi
  EasyCodeForVivox.Claims.sub*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims.sub*
        name: sub
        nameWithType: Claims.sub
        qualifiedName: EasyCodeForVivox.Claims.sub
      VB:
      - id: EasyCodeForVivox.Claims.sub*
        name: sub
        nameWithType: Claims.sub
        qualifiedName: EasyCodeForVivox.Claims.sub
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Claims.sub
  EasyCodeForVivox.Claims.f*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims.f*
        name: f
        nameWithType: Claims.f
        qualifiedName: EasyCodeForVivox.Claims.f
      VB:
      - id: EasyCodeForVivox.Claims.f*
        name: f
        nameWithType: Claims.f
        qualifiedName: EasyCodeForVivox.Claims.f
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Claims.f
  EasyCodeForVivox.Claims.t*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims.t*
        name: t
        nameWithType: Claims.t
        qualifiedName: EasyCodeForVivox.Claims.t
      VB:
      - id: EasyCodeForVivox.Claims.t*
        name: t
        nameWithType: Claims.t
        qualifiedName: EasyCodeForVivox.Claims.t
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Claims.t
  EasyCodeForVivox.Claims:
    name:
      CSharp:
      - id: EasyCodeForVivox.Claims
        name: Claims
        nameWithType: Claims
        qualifiedName: EasyCodeForVivox.Claims
      VB:
      - id: EasyCodeForVivox.Claims
        name: Claims
        nameWithType: Claims
        qualifiedName: EasyCodeForVivox.Claims
    isDefinition: true
    commentId: T:EasyCodeForVivox.Claims
  EasySettingsSO:
    name:
      CSharp:
      - id: EasySettingsSO
        name: EasySettingsSO
        nameWithType: EasySettingsSO
        qualifiedName: EasySettingsSO
      VB:
      - id: EasySettingsSO
        name: EasySettingsSO
        nameWithType: EasySettingsSO
        qualifiedName: EasySettingsSO
    isDefinition: true
    commentId: T:EasySettingsSO
  EasyEvents:
    name:
      CSharp:
      - id: EasyEvents
        name: EasyEvents
        nameWithType: EasyEvents
        qualifiedName: EasyEvents
        isExternal: true
      VB:
      - id: EasyEvents
        name: EasyEvents
        nameWithType: EasyEvents
        qualifiedName: EasyEvents
        isExternal: true
    isDefinition: true
  EasyEventsAsync:
    name:
      CSharp:
      - id: EasyEventsAsync
        name: EasyEventsAsync
        nameWithType: EasyEventsAsync
        qualifiedName: EasyEventsAsync
        isExternal: true
      VB:
      - id: EasyEventsAsync
        name: EasyEventsAsync
        nameWithType: EasyEventsAsync
        qualifiedName: EasyEventsAsync
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyAudio.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.#ctor*
        name: EasyAudio
        nameWithType: EasyAudio.EasyAudio
        qualifiedName: EasyCodeForVivox.EasyAudio.EasyAudio
      VB:
      - id: EasyCodeForVivox.EasyAudio.#ctor*
        name: EasyAudio
        nameWithType: EasyAudio.EasyAudio
        qualifiedName: EasyCodeForVivox.EasyAudio.EasyAudio
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.#ctor
  EasyCodeForVivox.EasyAudio.Subscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.Subscribe*
        name: Subscribe
        nameWithType: EasyAudio.Subscribe
        qualifiedName: EasyCodeForVivox.EasyAudio.Subscribe
      VB:
      - id: EasyCodeForVivox.EasyAudio.Subscribe*
        name: Subscribe
        nameWithType: EasyAudio.Subscribe
        qualifiedName: EasyCodeForVivox.EasyAudio.Subscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.Subscribe
  EasyCodeForVivox.EasyAudio.Unsubscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyAudio.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyAudio.Unsubscribe
      VB:
      - id: EasyCodeForVivox.EasyAudio.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyAudio.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyAudio.Unsubscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.Unsubscribe
  EasyCodeForVivox.EasyAudio.GetAudioInputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.GetAudioInputDevices*
        name: GetAudioInputDevices
        nameWithType: EasyAudio.GetAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.GetAudioInputDevices
      VB:
      - id: EasyCodeForVivox.EasyAudio.GetAudioInputDevices*
        name: GetAudioInputDevices
        nameWithType: EasyAudio.GetAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.GetAudioInputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.GetAudioInputDevices
  EasyCodeForVivox.EasyAudio.GetAudioOutputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices*
        name: GetAudioOutputDevices
        nameWithType: EasyAudio.GetAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices
      VB:
      - id: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices*
        name: GetAudioOutputDevices
        nameWithType: EasyAudio.GetAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.GetAudioOutputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.GetAudioOutputDevices
  EasyCodeForVivox.EasyAudio.SetAudioInputDevice*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.SetAudioInputDevice*
        name: SetAudioInputDevice
        nameWithType: EasyAudio.SetAudioInputDevice
        qualifiedName: EasyCodeForVivox.EasyAudio.SetAudioInputDevice
      VB:
      - id: EasyCodeForVivox.EasyAudio.SetAudioInputDevice*
        name: SetAudioInputDevice
        nameWithType: EasyAudio.SetAudioInputDevice
        qualifiedName: EasyCodeForVivox.EasyAudio.SetAudioInputDevice
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.SetAudioInputDevice
  EasyCodeForVivox.EasyAudio.SetAudioOutputDevice*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice*
        name: SetAudioOutputDevice
        nameWithType: EasyAudio.SetAudioOutputDevice
        qualifiedName: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice
      VB:
      - id: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice*
        name: SetAudioOutputDevice
        nameWithType: EasyAudio.SetAudioOutputDevice
        qualifiedName: EasyCodeForVivox.EasyAudio.SetAudioOutputDevice
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.SetAudioOutputDevice
  EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices*
        name: RefreshAudioInputDevices
        nameWithType: EasyAudio.RefreshAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices
      VB:
      - id: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices*
        name: RefreshAudioInputDevices
        nameWithType: EasyAudio.RefreshAudioInputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.RefreshAudioInputDevices
  EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices*
        name: RefreshAudioOutputDevices
        nameWithType: EasyAudio.RefreshAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices
      VB:
      - id: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices*
        name: RefreshAudioOutputDevices
        nameWithType: EasyAudio.RefreshAudioOutputDevices
        qualifiedName: EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.RefreshAudioOutputDevices
  EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume*
        name: AdjustLocalPlayerAudioVolume
        nameWithType: EasyAudio.AdjustLocalPlayerAudioVolume
        qualifiedName: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume
      VB:
      - id: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume*
        name: AdjustLocalPlayerAudioVolume
        nameWithType: EasyAudio.AdjustLocalPlayerAudioVolume
        qualifiedName: EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.AdjustLocalPlayerAudioVolume
  EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume*
        name: AdjustRemotePlayerAudioVolume
        nameWithType: EasyAudio.AdjustRemotePlayerAudioVolume
        qualifiedName: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume
      VB:
      - id: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume*
        name: AdjustRemotePlayerAudioVolume
        nameWithType: EasyAudio.AdjustRemotePlayerAudioVolume
        qualifiedName: EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.AdjustRemotePlayerAudioVolume
  EasyCodeForVivox.EasyAudio.StartAudioInjection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.StartAudioInjection*
        name: StartAudioInjection
        nameWithType: EasyAudio.StartAudioInjection
        qualifiedName: EasyCodeForVivox.EasyAudio.StartAudioInjection
      VB:
      - id: EasyCodeForVivox.EasyAudio.StartAudioInjection*
        name: StartAudioInjection
        nameWithType: EasyAudio.StartAudioInjection
        qualifiedName: EasyCodeForVivox.EasyAudio.StartAudioInjection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.StartAudioInjection
  EasyCodeForVivox.EasyAudio.StopAudioInjection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.StopAudioInjection*
        name: StopAudioInjection
        nameWithType: EasyAudio.StopAudioInjection
        qualifiedName: EasyCodeForVivox.EasyAudio.StopAudioInjection
      VB:
      - id: EasyCodeForVivox.EasyAudio.StopAudioInjection*
        name: StopAudioInjection
        nameWithType: EasyAudio.StopAudioInjection
        qualifiedName: EasyCodeForVivox.EasyAudio.StopAudioInjection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.StopAudioInjection
  EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection*
        name: SetAutoVoiceActivityDetection
        nameWithType: EasyAudio.SetAutoVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection
      VB:
      - id: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection*
        name: SetAutoVoiceActivityDetection
        nameWithType: EasyAudio.SetAutoVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.SetAutoVoiceActivityDetection
  EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection*
        name: SetVoiceActivityDetection
        nameWithType: EasyAudio.SetVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection
      VB:
      - id: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection*
        name: SetVoiceActivityDetection
        nameWithType: EasyAudio.SetVoiceActivityDetection
        qualifiedName: EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudio.SetVoiceActivityDetection
  EasyCodeForVivox.EasyAudio:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudio
        name: EasyAudio
        nameWithType: EasyAudio
        qualifiedName: EasyCodeForVivox.EasyAudio
      VB:
      - id: EasyCodeForVivox.EasyAudio
        name: EasyAudio
        nameWithType: EasyAudio
        qualifiedName: EasyCodeForVivox.EasyAudio
    isDefinition: true
    commentId: T:EasyCodeForVivox.EasyAudio
  EasyCodeForVivox.EasyAudioChannel.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudioChannel.#ctor*
        name: EasyAudioChannel
        nameWithType: EasyAudioChannel.EasyAudioChannel
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.EasyAudioChannel
      VB:
      - id: EasyCodeForVivox.EasyAudioChannel.#ctor*
        name: EasyAudioChannel
        nameWithType: EasyAudioChannel.EasyAudioChannel
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.EasyAudioChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudioChannel.#ctor
  EasyCodeForVivox.EasyAudioChannel.Subscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudioChannel.Subscribe*
        name: Subscribe
        nameWithType: EasyAudioChannel.Subscribe
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.Subscribe
      VB:
      - id: EasyCodeForVivox.EasyAudioChannel.Subscribe*
        name: Subscribe
        nameWithType: EasyAudioChannel.Subscribe
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.Subscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudioChannel.Subscribe
  EasyCodeForVivox.EasyAudioChannel.Unsubscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudioChannel.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyAudioChannel.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.Unsubscribe
      VB:
      - id: EasyCodeForVivox.EasyAudioChannel.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyAudioChannel.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.Unsubscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudioChannel.Unsubscribe
  EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel*
        name: ToggleAudioInChannel
        nameWithType: EasyAudioChannel.ToggleAudioInChannel
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel
      VB:
      - id: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel*
        name: ToggleAudioInChannel
        nameWithType: EasyAudioChannel.ToggleAudioInChannel
        qualifiedName: EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyAudioChannel.ToggleAudioInChannel
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  EasyCodeForVivox.EasyAudioChannel:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyAudioChannel
        name: EasyAudioChannel
        nameWithType: EasyAudioChannel
        qualifiedName: EasyCodeForVivox.EasyAudioChannel
      VB:
      - id: EasyCodeForVivox.EasyAudioChannel
        name: EasyAudioChannel
        nameWithType: EasyAudioChannel
        qualifiedName: EasyCodeForVivox.EasyAudioChannel
    isDefinition: true
    parent: EasyCodeForVivox
    commentId: T:EasyCodeForVivox.EasyAudioChannel
  EasyCodeForVivox.EasyUsers:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyUsers
        name: EasyUsers
        nameWithType: EasyUsers
        qualifiedName: EasyCodeForVivox.EasyUsers
      VB:
      - id: EasyCodeForVivox.EasyUsers
        name: EasyUsers
        nameWithType: EasyUsers
        qualifiedName: EasyCodeForVivox.EasyUsers
    isDefinition: true
    parent: EasyCodeForVivox
    commentId: T:EasyCodeForVivox.EasyUsers
  EasyCodeForVivox.EasyMessages:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages
        name: EasyMessages
        nameWithType: EasyMessages
        qualifiedName: EasyCodeForVivox.EasyMessages
      VB:
      - id: EasyCodeForVivox.EasyMessages
        name: EasyMessages
        nameWithType: EasyMessages
        qualifiedName: EasyCodeForVivox.EasyMessages
    isDefinition: true
    parent: EasyCodeForVivox
    commentId: T:EasyCodeForVivox.EasyMessages
  EasyCodeForVivox.EasyTextChannel:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextChannel
        name: EasyTextChannel
        nameWithType: EasyTextChannel
        qualifiedName: EasyCodeForVivox.EasyTextChannel
      VB:
      - id: EasyCodeForVivox.EasyTextChannel
        name: EasyTextChannel
        nameWithType: EasyTextChannel
        qualifiedName: EasyCodeForVivox.EasyTextChannel
    isDefinition: true
    parent: EasyCodeForVivox
    commentId: T:EasyCodeForVivox.EasyTextChannel
  EasyCodeForVivox.EasyChannel.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.#ctor*
        name: EasyChannel
        nameWithType: EasyChannel.EasyChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.EasyChannel
      VB:
      - id: EasyCodeForVivox.EasyChannel.#ctor*
        name: EasyChannel
        nameWithType: EasyChannel.EasyChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.EasyChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.#ctor
  EasyCodeForVivox.EasyChannel.Subscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.Subscribe*
        name: Subscribe
        nameWithType: EasyChannel.Subscribe
        qualifiedName: EasyCodeForVivox.EasyChannel.Subscribe
      VB:
      - id: EasyCodeForVivox.EasyChannel.Subscribe*
        name: Subscribe
        nameWithType: EasyChannel.Subscribe
        qualifiedName: EasyCodeForVivox.EasyChannel.Subscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.Subscribe
  EasyCodeForVivox.EasyChannel.Unsubscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyChannel.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyChannel.Unsubscribe
      VB:
      - id: EasyCodeForVivox.EasyChannel.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyChannel.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyChannel.Unsubscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.Unsubscribe
  EasyCodeForVivox.EasyChannel.JoinChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.JoinChannel*
        name: JoinChannel
        nameWithType: EasyChannel.JoinChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.JoinChannel
      VB:
      - id: EasyCodeForVivox.EasyChannel.JoinChannel*
        name: JoinChannel
        nameWithType: EasyChannel.JoinChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.JoinChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.JoinChannel
  EasyCodeForVivox.EasyChannel.JoinChannelRegion*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.JoinChannelRegion*
        name: JoinChannelRegion
        nameWithType: EasyChannel.JoinChannelRegion
        qualifiedName: EasyCodeForVivox.EasyChannel.JoinChannelRegion
      VB:
      - id: EasyCodeForVivox.EasyChannel.JoinChannelRegion*
        name: JoinChannelRegion
        nameWithType: EasyChannel.JoinChannelRegion
        qualifiedName: EasyCodeForVivox.EasyChannel.JoinChannelRegion
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.JoinChannelRegion
  EasyCodeForVivox.EasyChannel.JoinChannelCustom*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.JoinChannelCustom*
        name: JoinChannelCustom
        nameWithType: EasyChannel.JoinChannelCustom
        qualifiedName: EasyCodeForVivox.EasyChannel.JoinChannelCustom
      VB:
      - id: EasyCodeForVivox.EasyChannel.JoinChannelCustom*
        name: JoinChannelCustom
        nameWithType: EasyChannel.JoinChannelCustom
        qualifiedName: EasyCodeForVivox.EasyChannel.JoinChannelCustom
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.JoinChannelCustom
  EasyCodeForVivox.EasyChannel.LeaveChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.LeaveChannel*
        name: LeaveChannel
        nameWithType: EasyChannel.LeaveChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.LeaveChannel
      VB:
      - id: EasyCodeForVivox.EasyChannel.LeaveChannel*
        name: LeaveChannel
        nameWithType: EasyChannel.LeaveChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.LeaveChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.LeaveChannel
  EasyCodeForVivox.EasyChannel.GetExistingChannelSession*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.GetExistingChannelSession*
        name: GetExistingChannelSession
        nameWithType: EasyChannel.GetExistingChannelSession
        qualifiedName: EasyCodeForVivox.EasyChannel.GetExistingChannelSession
      VB:
      - id: EasyCodeForVivox.EasyChannel.GetExistingChannelSession*
        name: GetExistingChannelSession
        nameWithType: EasyChannel.GetExistingChannelSession
        qualifiedName: EasyCodeForVivox.EasyChannel.GetExistingChannelSession
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.GetExistingChannelSession
  EasyCodeForVivox.EasyChannel.CreateNewChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.CreateNewChannel*
        name: CreateNewChannel
        nameWithType: EasyChannel.CreateNewChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.CreateNewChannel
      VB:
      - id: EasyCodeForVivox.EasyChannel.CreateNewChannel*
        name: CreateNewChannel
        nameWithType: EasyChannel.CreateNewChannel
        qualifiedName: EasyCodeForVivox.EasyChannel.CreateNewChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.CreateNewChannel
  EasyCodeForVivox.EasyChannel.GetChannelSIP*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.GetChannelSIP*
        name: GetChannelSIP
        nameWithType: EasyChannel.GetChannelSIP
        qualifiedName: EasyCodeForVivox.EasyChannel.GetChannelSIP
      VB:
      - id: EasyCodeForVivox.EasyChannel.GetChannelSIP*
        name: GetChannelSIP
        nameWithType: EasyChannel.GetChannelSIP
        qualifiedName: EasyCodeForVivox.EasyChannel.GetChannelSIP
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.GetChannelSIP
  EasyCodeForVivox.EasyChannel.RemoveChannelSession*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.RemoveChannelSession*
        name: RemoveChannelSession
        nameWithType: EasyChannel.RemoveChannelSession
        qualifiedName: EasyCodeForVivox.EasyChannel.RemoveChannelSession
      VB:
      - id: EasyCodeForVivox.EasyChannel.RemoveChannelSession*
        name: RemoveChannelSession
        nameWithType: EasyChannel.RemoveChannelSession
        qualifiedName: EasyCodeForVivox.EasyChannel.RemoveChannelSession
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.RemoveChannelSession
  EasyCodeForVivox.EasyChannel.GetChannelToken*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.GetChannelToken*
        name: GetChannelToken
        nameWithType: EasyChannel.GetChannelToken
        qualifiedName: EasyCodeForVivox.EasyChannel.GetChannelToken
      VB:
      - id: EasyCodeForVivox.EasyChannel.GetChannelToken*
        name: GetChannelToken
        nameWithType: EasyChannel.GetChannelToken
        qualifiedName: EasyCodeForVivox.EasyChannel.GetChannelToken
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.GetChannelToken
  EasyCodeForVivox.EasyChannel.GetRegionChannelToken*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.GetRegionChannelToken*
        name: GetRegionChannelToken
        nameWithType: EasyChannel.GetRegionChannelToken
        qualifiedName: EasyCodeForVivox.EasyChannel.GetRegionChannelToken
      VB:
      - id: EasyCodeForVivox.EasyChannel.GetRegionChannelToken*
        name: GetRegionChannelToken
        nameWithType: EasyChannel.GetRegionChannelToken
        qualifiedName: EasyCodeForVivox.EasyChannel.GetRegionChannelToken
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.GetRegionChannelToken
  PropertyChangedEventArgs:
    name:
      CSharp:
      - id: PropertyChangedEventArgs
        name: PropertyChangedEventArgs
        nameWithType: PropertyChangedEventArgs
        qualifiedName: PropertyChangedEventArgs
        isExternal: true
      VB:
      - id: PropertyChangedEventArgs
        name: PropertyChangedEventArgs
        nameWithType: PropertyChangedEventArgs
        qualifiedName: PropertyChangedEventArgs
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged*
        name: OnChannelStatePropertyChanged
        nameWithType: EasyChannel.OnChannelStatePropertyChanged
        qualifiedName: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged
      VB:
      - id: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged*
        name: OnChannelStatePropertyChanged
        nameWithType: EasyChannel.OnChannelStatePropertyChanged
        qualifiedName: EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyChannel.OnChannelStatePropertyChanged
  EasyCodeForVivox.EasyChannel:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyChannel
        name: EasyChannel
        nameWithType: EasyChannel
        qualifiedName: EasyCodeForVivox.EasyChannel
      VB:
      - id: EasyCodeForVivox.EasyChannel
        name: EasyChannel
        nameWithType: EasyChannel
        qualifiedName: EasyCodeForVivox.EasyChannel
    isDefinition: true
    commentId: T:EasyCodeForVivox.EasyChannel
  EasyCodeForVivox.EasyTextToSpeech:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech
        name: EasyTextToSpeech
        nameWithType: EasyTextToSpeech
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech
        name: EasyTextToSpeech
        nameWithType: EasyTextToSpeech
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech
    isDefinition: true
    parent: EasyCodeForVivox
    commentId: T:EasyCodeForVivox.EasyTextToSpeech
  EasyCodeForVivox.EasyMute:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute
        name: EasyMute
        nameWithType: EasyMute
        qualifiedName: EasyCodeForVivox.EasyMute
      VB:
      - id: EasyCodeForVivox.EasyMute
        name: EasyMute
        nameWithType: EasyMute
        qualifiedName: EasyCodeForVivox.EasyMute
    isDefinition: true
    parent: EasyCodeForVivox
    commentId: T:EasyCodeForVivox.EasyMute
  EasyCodeForVivox.EasyLogin.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.#ctor*
        name: EasyLogin
        nameWithType: EasyLogin.EasyLogin
        qualifiedName: EasyCodeForVivox.EasyLogin.EasyLogin
      VB:
      - id: EasyCodeForVivox.EasyLogin.#ctor*
        name: EasyLogin
        nameWithType: EasyLogin.EasyLogin
        qualifiedName: EasyCodeForVivox.EasyLogin.EasyLogin
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.#ctor
  EasyCodeForVivox.EasyLogin.LoginToVivox*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.LoginToVivox*
        name: LoginToVivox
        nameWithType: EasyLogin.LoginToVivox
        qualifiedName: EasyCodeForVivox.EasyLogin.LoginToVivox
      VB:
      - id: EasyCodeForVivox.EasyLogin.LoginToVivox*
        name: LoginToVivox
        nameWithType: EasyLogin.LoginToVivox
        qualifiedName: EasyCodeForVivox.EasyLogin.LoginToVivox
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.LoginToVivox
  EasyCodeForVivox.EasyLogin.UpdateLoginProperties*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.UpdateLoginProperties*
        name: UpdateLoginProperties
        nameWithType: EasyLogin.UpdateLoginProperties
        qualifiedName: EasyCodeForVivox.EasyLogin.UpdateLoginProperties
      VB:
      - id: EasyCodeForVivox.EasyLogin.UpdateLoginProperties*
        name: UpdateLoginProperties
        nameWithType: EasyLogin.UpdateLoginProperties
        qualifiedName: EasyCodeForVivox.EasyLogin.UpdateLoginProperties
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.UpdateLoginProperties
  EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode*
        name: SetPlayerTransmissionMode
        nameWithType: EasyLogin.SetPlayerTransmissionMode
        qualifiedName: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode
      VB:
      - id: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode*
        name: SetPlayerTransmissionMode
        nameWithType: EasyLogin.SetPlayerTransmissionMode
        qualifiedName: EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.SetPlayerTransmissionMode
  EasyCodeForVivox.EasyLogin.GetChannelId*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.GetChannelId*
        name: GetChannelId
        nameWithType: EasyLogin.GetChannelId
        qualifiedName: EasyCodeForVivox.EasyLogin.GetChannelId
      VB:
      - id: EasyCodeForVivox.EasyLogin.GetChannelId*
        name: GetChannelId
        nameWithType: EasyLogin.GetChannelId
        qualifiedName: EasyCodeForVivox.EasyLogin.GetChannelId
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.GetChannelId
  EasyCodeForVivox.EasyLogin.LogoutOfVivox*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.LogoutOfVivox*
        name: LogoutOfVivox
        nameWithType: EasyLogin.LogoutOfVivox
        qualifiedName: EasyCodeForVivox.EasyLogin.LogoutOfVivox
      VB:
      - id: EasyCodeForVivox.EasyLogin.LogoutOfVivox*
        name: LogoutOfVivox
        nameWithType: EasyLogin.LogoutOfVivox
        qualifiedName: EasyCodeForVivox.EasyLogin.LogoutOfVivox
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.LogoutOfVivox
  EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged*
        name: OnLoginPropertyChanged
        nameWithType: EasyLogin.OnLoginPropertyChanged
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged
      VB:
      - id: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged*
        name: OnLoginPropertyChanged
        nameWithType: EasyLogin.OnLoginPropertyChanged
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.OnLoginPropertyChanged
  KeyEventArg`1:
    name:
      CSharp:
      - id: KeyEventArg`1
        name: KeyEventArg
        nameWithType: KeyEventArg
        qualifiedName: KeyEventArg
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: KeyEventArg`1
        name: KeyEventArg
        nameWithType: KeyEventArg
        qualifiedName: KeyEventArg
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  KeyEventArg{AccountId}:
    name:
      CSharp:
      - id: KeyEventArg`1
        name: KeyEventArg
        nameWithType: KeyEventArg
        qualifiedName: KeyEventArg
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: KeyEventArg`1
        name: KeyEventArg
        nameWithType: KeyEventArg
        qualifiedName: KeyEventArg
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: KeyEventArg`1
    commentId: '!:KeyEventArg{AccountId}'
  EasyCodeForVivox.EasyLogin.OnLoginAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.OnLoginAdded*
        name: OnLoginAdded
        nameWithType: EasyLogin.OnLoginAdded
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginAdded
      VB:
      - id: EasyCodeForVivox.EasyLogin.OnLoginAdded*
        name: OnLoginAdded
        nameWithType: EasyLogin.OnLoginAdded
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.OnLoginAdded
  EasyCodeForVivox.EasyLogin.OnLoginRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.OnLoginRemoved*
        name: OnLoginRemoved
        nameWithType: EasyLogin.OnLoginRemoved
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginRemoved
      VB:
      - id: EasyCodeForVivox.EasyLogin.OnLoginRemoved*
        name: OnLoginRemoved
        nameWithType: EasyLogin.OnLoginRemoved
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.OnLoginRemoved
  ValueEventArg`2:
    name:
      CSharp:
      - id: ValueEventArg`2
        name: ValueEventArg
        nameWithType: ValueEventArg
        qualifiedName: ValueEventArg
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ValueEventArg`2
        name: ValueEventArg
        nameWithType: ValueEventArg
        qualifiedName: ValueEventArg
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  ValueEventArg{AccountId,ILoginSession}:
    name:
      CSharp:
      - id: ValueEventArg`2
        name: ValueEventArg
        nameWithType: ValueEventArg
        qualifiedName: ValueEventArg
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ValueEventArg`2
        name: ValueEventArg
        nameWithType: ValueEventArg
        qualifiedName: ValueEventArg
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ValueEventArg`2
    commentId: '!:ValueEventArg{AccountId,ILoginSession}'
  EasyCodeForVivox.EasyLogin.OnLoginUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin.OnLoginUpdated*
        name: OnLoginUpdated
        nameWithType: EasyLogin.OnLoginUpdated
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginUpdated
      VB:
      - id: EasyCodeForVivox.EasyLogin.OnLoginUpdated*
        name: OnLoginUpdated
        nameWithType: EasyLogin.OnLoginUpdated
        qualifiedName: EasyCodeForVivox.EasyLogin.OnLoginUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyLogin.OnLoginUpdated
  EasyCodeForVivox.EasyLogin:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyLogin
        name: EasyLogin
        nameWithType: EasyLogin
        qualifiedName: EasyCodeForVivox.EasyLogin
      VB:
      - id: EasyCodeForVivox.EasyLogin
        name: EasyLogin
        nameWithType: EasyLogin
        qualifiedName: EasyCodeForVivox.EasyLogin
    isDefinition: true
    commentId: T:EasyCodeForVivox.EasyLogin
  EasyCodeForVivox.EasyMessages.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.#ctor*
        name: EasyMessages
        nameWithType: EasyMessages.EasyMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.EasyMessages
      VB:
      - id: EasyCodeForVivox.EasyMessages.#ctor*
        name: EasyMessages
        nameWithType: EasyMessages.EasyMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.EasyMessages
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.#ctor
  EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages*
        name: SubscribeToChannelMessages
        nameWithType: EasyMessages.SubscribeToChannelMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages
      VB:
      - id: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages*
        name: SubscribeToChannelMessages
        nameWithType: EasyMessages.SubscribeToChannelMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.SubscribeToChannelMessages
  EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages*
        name: SubscribeToDirectMessages
        nameWithType: EasyMessages.SubscribeToDirectMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages
      VB:
      - id: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages*
        name: SubscribeToDirectMessages
        nameWithType: EasyMessages.SubscribeToDirectMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.SubscribeToDirectMessages
  EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages*
        name: UnsubscribeFromChannelMessages
        nameWithType: EasyMessages.UnsubscribeFromChannelMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages
      VB:
      - id: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages*
        name: UnsubscribeFromChannelMessages
        nameWithType: EasyMessages.UnsubscribeFromChannelMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.UnsubscribeFromChannelMessages
  EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages*
        name: UnsubscribeFromDirectMessages
        nameWithType: EasyMessages.UnsubscribeFromDirectMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages
      VB:
      - id: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages*
        name: UnsubscribeFromDirectMessages
        nameWithType: EasyMessages.UnsubscribeFromDirectMessages
        qualifiedName: EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.UnsubscribeFromDirectMessages
  EasyCodeForVivox.EasyMessages.SendChannelMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.SendChannelMessage*
        name: SendChannelMessage
        nameWithType: EasyMessages.SendChannelMessage
        qualifiedName: EasyCodeForVivox.EasyMessages.SendChannelMessage
      VB:
      - id: EasyCodeForVivox.EasyMessages.SendChannelMessage*
        name: SendChannelMessage
        nameWithType: EasyMessages.SendChannelMessage
        qualifiedName: EasyCodeForVivox.EasyMessages.SendChannelMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.SendChannelMessage
  EasyCodeForVivox.EasyMessages.SendEventMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.SendEventMessage*
        name: SendEventMessage
        nameWithType: EasyMessages.SendEventMessage
        qualifiedName: EasyCodeForVivox.EasyMessages.SendEventMessage
      VB:
      - id: EasyCodeForVivox.EasyMessages.SendEventMessage*
        name: SendEventMessage
        nameWithType: EasyMessages.SendEventMessage
        qualifiedName: EasyCodeForVivox.EasyMessages.SendEventMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.SendEventMessage
  EasyCodeForVivox.EasyMessages.SendDirectMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.SendDirectMessage*
        name: SendDirectMessage
        nameWithType: EasyMessages.SendDirectMessage
        qualifiedName: EasyCodeForVivox.EasyMessages.SendDirectMessage
      VB:
      - id: EasyCodeForVivox.EasyMessages.SendDirectMessage*
        name: SendDirectMessage
        nameWithType: EasyMessages.SendDirectMessage
        qualifiedName: EasyCodeForVivox.EasyMessages.SendDirectMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.SendDirectMessage
  Dictionary{System.String,System.String}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{System.String,System.String}'
  QueueItemAddedEventArgs`1:
    name:
      CSharp:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  QueueItemAddedEventArgs{IDirectedTextMessage}:
    name:
      CSharp:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IDirectedTextMessage
        name: IDirectedTextMessage
        nameWithType: IDirectedTextMessage
        qualifiedName: IDirectedTextMessage
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IDirectedTextMessage
        name: IDirectedTextMessage
        nameWithType: IDirectedTextMessage
        qualifiedName: IDirectedTextMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: QueueItemAddedEventArgs`1
    commentId: '!:QueueItemAddedEventArgs{IDirectedTextMessage}'
  EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved*
        name: OnDirectMessageRecieved
        nameWithType: EasyMessages.OnDirectMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved
      VB:
      - id: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved*
        name: OnDirectMessageRecieved
        nameWithType: EasyMessages.OnDirectMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.OnDirectMessageRecieved
  QueueItemAddedEventArgs{IFailedDirectedTextMessage}:
    name:
      CSharp:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IFailedDirectedTextMessage
        name: IFailedDirectedTextMessage
        nameWithType: IFailedDirectedTextMessage
        qualifiedName: IFailedDirectedTextMessage
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IFailedDirectedTextMessage
        name: IFailedDirectedTextMessage
        nameWithType: IFailedDirectedTextMessage
        qualifiedName: IFailedDirectedTextMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: QueueItemAddedEventArgs`1
    commentId: '!:QueueItemAddedEventArgs{IFailedDirectedTextMessage}'
  EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback*
        name: OnDirectMessageFailedCallback
        nameWithType: EasyMessages.OnDirectMessageFailedCallback
        qualifiedName: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback
      VB:
      - id: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback*
        name: OnDirectMessageFailedCallback
        nameWithType: EasyMessages.OnDirectMessageFailedCallback
        qualifiedName: EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.OnDirectMessageFailedCallback
  QueueItemAddedEventArgs{IChannelTextMessage}:
    name:
      CSharp:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IChannelTextMessage
        name: IChannelTextMessage
        nameWithType: IChannelTextMessage
        qualifiedName: IChannelTextMessage
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: QueueItemAddedEventArgs`1
        name: QueueItemAddedEventArgs
        nameWithType: QueueItemAddedEventArgs
        qualifiedName: QueueItemAddedEventArgs
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IChannelTextMessage
        name: IChannelTextMessage
        nameWithType: IChannelTextMessage
        qualifiedName: IChannelTextMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: QueueItemAddedEventArgs`1
    commentId: '!:QueueItemAddedEventArgs{IChannelTextMessage}'
  EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved*
        name: OnChannelMessageRecieved
        nameWithType: EasyMessages.OnChannelMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved
      VB:
      - id: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved*
        name: OnChannelMessageRecieved
        nameWithType: EasyMessages.OnChannelMessageRecieved
        qualifiedName: EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMessages.OnChannelMessageRecieved
  EasyCodeForVivox.EasyMute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.#ctor*
        name: EasyMute
        nameWithType: EasyMute.EasyMute
        qualifiedName: EasyCodeForVivox.EasyMute.EasyMute
      VB:
      - id: EasyCodeForVivox.EasyMute.#ctor*
        name: EasyMute
        nameWithType: EasyMute.EasyMute
        qualifiedName: EasyCodeForVivox.EasyMute.EasyMute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.#ctor
  EasyCodeForVivox.EasyMute.Subscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.Subscribe*
        name: Subscribe
        nameWithType: EasyMute.Subscribe
        qualifiedName: EasyCodeForVivox.EasyMute.Subscribe
      VB:
      - id: EasyCodeForVivox.EasyMute.Subscribe*
        name: Subscribe
        nameWithType: EasyMute.Subscribe
        qualifiedName: EasyCodeForVivox.EasyMute.Subscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.Subscribe
  EasyCodeForVivox.EasyMute.Unsubscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyMute.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyMute.Unsubscribe
      VB:
      - id: EasyCodeForVivox.EasyMute.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyMute.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyMute.Unsubscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.Unsubscribe
  EasyCodeForVivox.EasyMute.LocalMuteRemoteUser*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser*
        name: LocalMuteRemoteUser
        nameWithType: EasyMute.LocalMuteRemoteUser
        qualifiedName: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser
      VB:
      - id: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser*
        name: LocalMuteRemoteUser
        nameWithType: EasyMute.LocalMuteRemoteUser
        qualifiedName: EasyCodeForVivox.EasyMute.LocalMuteRemoteUser
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.LocalMuteRemoteUser
  EasyCodeForVivox.EasyMute.LocalMuteAllUsers*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.LocalMuteAllUsers*
        name: LocalMuteAllUsers
        nameWithType: EasyMute.LocalMuteAllUsers
        qualifiedName: EasyCodeForVivox.EasyMute.LocalMuteAllUsers
      VB:
      - id: EasyCodeForVivox.EasyMute.LocalMuteAllUsers*
        name: LocalMuteAllUsers
        nameWithType: EasyMute.LocalMuteAllUsers
        qualifiedName: EasyCodeForVivox.EasyMute.LocalMuteAllUsers
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.LocalMuteAllUsers
  EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers*
        name: LocalUnmuteAllUsers
        nameWithType: EasyMute.LocalUnmuteAllUsers
        qualifiedName: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers
      VB:
      - id: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers*
        name: LocalUnmuteAllUsers
        nameWithType: EasyMute.LocalUnmuteAllUsers
        qualifiedName: EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.LocalUnmuteAllUsers
  EasyCodeForVivox.EasyMute.LocalMuteSelf*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.LocalMuteSelf*
        name: LocalMuteSelf
        nameWithType: EasyMute.LocalMuteSelf
        qualifiedName: EasyCodeForVivox.EasyMute.LocalMuteSelf
      VB:
      - id: EasyCodeForVivox.EasyMute.LocalMuteSelf*
        name: LocalMuteSelf
        nameWithType: EasyMute.LocalMuteSelf
        qualifiedName: EasyCodeForVivox.EasyMute.LocalMuteSelf
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.LocalMuteSelf
  EasyCodeForVivox.EasyMute.LocalUnmuteSelf*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.LocalUnmuteSelf*
        name: LocalUnmuteSelf
        nameWithType: EasyMute.LocalUnmuteSelf
        qualifiedName: EasyCodeForVivox.EasyMute.LocalUnmuteSelf
      VB:
      - id: EasyCodeForVivox.EasyMute.LocalUnmuteSelf*
        name: LocalUnmuteSelf
        nameWithType: EasyMute.LocalUnmuteSelf
        qualifiedName: EasyCodeForVivox.EasyMute.LocalUnmuteSelf
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.LocalUnmuteSelf
  EasyCodeForVivox.EasyMute.CrossMuteUser*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.CrossMuteUser*
        name: CrossMuteUser
        nameWithType: EasyMute.CrossMuteUser
        qualifiedName: EasyCodeForVivox.EasyMute.CrossMuteUser
      VB:
      - id: EasyCodeForVivox.EasyMute.CrossMuteUser*
        name: CrossMuteUser
        nameWithType: EasyMute.CrossMuteUser
        qualifiedName: EasyCodeForVivox.EasyMute.CrossMuteUser
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.CrossMuteUser
  EasyCodeForVivox.EasyMute.CrossMuteUsers*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.CrossMuteUsers*
        name: CrossMuteUsers
        nameWithType: EasyMute.CrossMuteUsers
        qualifiedName: EasyCodeForVivox.EasyMute.CrossMuteUsers
      VB:
      - id: EasyCodeForVivox.EasyMute.CrossMuteUsers*
        name: CrossMuteUsers
        nameWithType: EasyMute.CrossMuteUsers
        qualifiedName: EasyCodeForVivox.EasyMute.CrossMuteUsers
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.CrossMuteUsers
  EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts*
        name: ClearAllCurrentCrossMutedAccounts
        nameWithType: EasyMute.ClearAllCurrentCrossMutedAccounts
        qualifiedName: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts
      VB:
      - id: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts*
        name: ClearAllCurrentCrossMutedAccounts
        nameWithType: EasyMute.ClearAllCurrentCrossMutedAccounts
        qualifiedName: EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyMute.ClearAllCurrentCrossMutedAccounts
  EasyCodeForVivox.EasySIP.GetUserSIP*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySIP.GetUserSIP*
        name: GetUserSIP
        nameWithType: EasySIP.GetUserSIP
        qualifiedName: EasyCodeForVivox.EasySIP.GetUserSIP
      VB:
      - id: EasyCodeForVivox.EasySIP.GetUserSIP*
        name: GetUserSIP
        nameWithType: EasySIP.GetUserSIP
        qualifiedName: EasyCodeForVivox.EasySIP.GetUserSIP
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySIP.GetUserSIP
  EasyCodeForVivox.EasySIP.GetChannelSip*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySIP.GetChannelSip*
        name: GetChannelSip
        nameWithType: EasySIP.GetChannelSip
        qualifiedName: EasyCodeForVivox.EasySIP.GetChannelSip
      VB:
      - id: EasyCodeForVivox.EasySIP.GetChannelSip*
        name: GetChannelSip
        nameWithType: EasySIP.GetChannelSip
        qualifiedName: EasyCodeForVivox.EasySIP.GetChannelSip
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySIP.GetChannelSip
  EasyCodeForVivox.EasySIP.GetChannelSIP*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySIP.GetChannelSIP*
        name: GetChannelSIP
        nameWithType: EasySIP.GetChannelSIP
        qualifiedName: EasyCodeForVivox.EasySIP.GetChannelSIP
      VB:
      - id: EasyCodeForVivox.EasySIP.GetChannelSIP*
        name: GetChannelSIP
        nameWithType: EasySIP.GetChannelSIP
        qualifiedName: EasyCodeForVivox.EasySIP.GetChannelSIP
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasySIP.GetChannelSIP
  EasyCodeForVivox.EasySIP:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasySIP
        name: EasySIP
        nameWithType: EasySIP
        qualifiedName: EasyCodeForVivox.EasySIP
      VB:
      - id: EasyCodeForVivox.EasySIP
        name: EasySIP
        nameWithType: EasySIP
        qualifiedName: EasyCodeForVivox.EasySIP
    isDefinition: true
    commentId: T:EasyCodeForVivox.EasySIP
  EasyCodeForVivox.EasyTextChannel.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextChannel.#ctor*
        name: EasyTextChannel
        nameWithType: EasyTextChannel.EasyTextChannel
        qualifiedName: EasyCodeForVivox.EasyTextChannel.EasyTextChannel
      VB:
      - id: EasyCodeForVivox.EasyTextChannel.#ctor*
        name: EasyTextChannel
        nameWithType: EasyTextChannel.EasyTextChannel
        qualifiedName: EasyCodeForVivox.EasyTextChannel.EasyTextChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextChannel.#ctor
  EasyCodeForVivox.EasyTextChannel.Subscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextChannel.Subscribe*
        name: Subscribe
        nameWithType: EasyTextChannel.Subscribe
        qualifiedName: EasyCodeForVivox.EasyTextChannel.Subscribe
      VB:
      - id: EasyCodeForVivox.EasyTextChannel.Subscribe*
        name: Subscribe
        nameWithType: EasyTextChannel.Subscribe
        qualifiedName: EasyCodeForVivox.EasyTextChannel.Subscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextChannel.Subscribe
  EasyCodeForVivox.EasyTextChannel.Unsubscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextChannel.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyTextChannel.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyTextChannel.Unsubscribe
      VB:
      - id: EasyCodeForVivox.EasyTextChannel.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyTextChannel.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyTextChannel.Unsubscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextChannel.Unsubscribe
  EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel*
        name: ToggleTextInChannel
        nameWithType: EasyTextChannel.ToggleTextInChannel
        qualifiedName: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel
      VB:
      - id: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel*
        name: ToggleTextInChannel
        nameWithType: EasyTextChannel.ToggleTextInChannel
        qualifiedName: EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextChannel.ToggleTextInChannel
  EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive*
        name: ToggleTextChannelActive
        nameWithType: EasyTextChannel.ToggleTextChannelActive
        qualifiedName: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive
      VB:
      - id: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive*
        name: ToggleTextChannelActive
        nameWithType: EasyTextChannel.ToggleTextChannelActive
        qualifiedName: EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextChannel.ToggleTextChannelActive
  EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged*
        name: OnChannelTextPropertyChanged
        nameWithType: EasyTextChannel.OnChannelTextPropertyChanged
        qualifiedName: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged
      VB:
      - id: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged*
        name: OnChannelTextPropertyChanged
        nameWithType: EasyTextChannel.OnChannelTextPropertyChanged
        qualifiedName: EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextChannel.OnChannelTextPropertyChanged
  EasyCodeForVivox.EasyTextToSpeech.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech.#ctor*
        name: EasyTextToSpeech
        nameWithType: EasyTextToSpeech.EasyTextToSpeech
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.EasyTextToSpeech
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech.#ctor*
        name: EasyTextToSpeech
        nameWithType: EasyTextToSpeech.EasyTextToSpeech
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.EasyTextToSpeech
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextToSpeech.#ctor
  EasyCodeForVivox.EasyTextToSpeech.MaleVoice*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech.MaleVoice*
        name: MaleVoice
        nameWithType: EasyTextToSpeech.MaleVoice
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.MaleVoice
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech.MaleVoice*
        name: MaleVoice
        nameWithType: EasyTextToSpeech.MaleVoice
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.MaleVoice
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextToSpeech.MaleVoice
  EasyCodeForVivox.EasyTextToSpeech.FemaleVoice*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice*
        name: FemaleVoice
        nameWithType: EasyTextToSpeech.FemaleVoice
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice*
        name: FemaleVoice
        nameWithType: EasyTextToSpeech.FemaleVoice
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.FemaleVoice
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextToSpeech.FemaleVoice
  EasyCodeForVivox.EasyTextToSpeech.Subscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech.Subscribe*
        name: Subscribe
        nameWithType: EasyTextToSpeech.Subscribe
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.Subscribe
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech.Subscribe*
        name: Subscribe
        nameWithType: EasyTextToSpeech.Subscribe
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.Subscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextToSpeech.Subscribe
  EasyCodeForVivox.EasyTextToSpeech.Unsubscribe*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyTextToSpeech.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe*
        name: Unsubscribe
        nameWithType: EasyTextToSpeech.Unsubscribe
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.Unsubscribe
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextToSpeech.Unsubscribe
  EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender*
        name: ChooseVoiceGender
        nameWithType: EasyTextToSpeech.ChooseVoiceGender
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender*
        name: ChooseVoiceGender
        nameWithType: EasyTextToSpeech.ChooseVoiceGender
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextToSpeech.ChooseVoiceGender
  EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage*
        name: PlayTTSMessage
        nameWithType: EasyTextToSpeech.PlayTTSMessage
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage
      VB:
      - id: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage*
        name: PlayTTSMessage
        nameWithType: EasyTextToSpeech.PlayTTSMessage
        qualifiedName: EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyTextToSpeech.PlayTTSMessage
  EasyCodeForVivox.EasyUsers.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyUsers.#ctor*
        name: EasyUsers
        nameWithType: EasyUsers.EasyUsers
        qualifiedName: EasyCodeForVivox.EasyUsers.EasyUsers
      VB:
      - id: EasyCodeForVivox.EasyUsers.#ctor*
        name: EasyUsers
        nameWithType: EasyUsers.EasyUsers
        qualifiedName: EasyCodeForVivox.EasyUsers.EasyUsers
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyUsers.#ctor
  EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents*
        name: SubscribeToParticipantEvents
        nameWithType: EasyUsers.SubscribeToParticipantEvents
        qualifiedName: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents
      VB:
      - id: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents*
        name: SubscribeToParticipantEvents
        nameWithType: EasyUsers.SubscribeToParticipantEvents
        qualifiedName: EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyUsers.SubscribeToParticipantEvents
  EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents*
        name: UnsubscribeFromParticipantEvents
        nameWithType: EasyUsers.UnsubscribeFromParticipantEvents
        qualifiedName: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents
      VB:
      - id: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents*
        name: UnsubscribeFromParticipantEvents
        nameWithType: EasyUsers.UnsubscribeFromParticipantEvents
        qualifiedName: EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyUsers.UnsubscribeFromParticipantEvents
  KeyEventArg{System.String}:
    name:
      CSharp:
      - id: KeyEventArg`1
        name: KeyEventArg
        nameWithType: KeyEventArg
        qualifiedName: KeyEventArg
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: KeyEventArg`1
        name: KeyEventArg
        nameWithType: KeyEventArg
        qualifiedName: KeyEventArg
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: KeyEventArg`1
    commentId: '!:KeyEventArg{System.String}'
  EasyCodeForVivox.EasyUsers.OnUserJoinedChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel*
        name: OnUserJoinedChannel
        nameWithType: EasyUsers.OnUserJoinedChannel
        qualifiedName: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel
      VB:
      - id: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel*
        name: OnUserJoinedChannel
        nameWithType: EasyUsers.OnUserJoinedChannel
        qualifiedName: EasyCodeForVivox.EasyUsers.OnUserJoinedChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyUsers.OnUserJoinedChannel
  EasyCodeForVivox.EasyUsers.OnUserLeftChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyUsers.OnUserLeftChannel*
        name: OnUserLeftChannel
        nameWithType: EasyUsers.OnUserLeftChannel
        qualifiedName: EasyCodeForVivox.EasyUsers.OnUserLeftChannel
      VB:
      - id: EasyCodeForVivox.EasyUsers.OnUserLeftChannel*
        name: OnUserLeftChannel
        nameWithType: EasyUsers.OnUserLeftChannel
        qualifiedName: EasyCodeForVivox.EasyUsers.OnUserLeftChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyUsers.OnUserLeftChannel
  ValueEventArg{System.String,IParticipant}:
    name:
      CSharp:
      - id: ValueEventArg`2
        name: ValueEventArg
        nameWithType: ValueEventArg
        qualifiedName: ValueEventArg
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IParticipant
        name: IParticipant
        nameWithType: IParticipant
        qualifiedName: IParticipant
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ValueEventArg`2
        name: ValueEventArg
        nameWithType: ValueEventArg
        qualifiedName: ValueEventArg
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IParticipant
        name: IParticipant
        nameWithType: IParticipant
        qualifiedName: IParticipant
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ValueEventArg`2
    commentId: '!:ValueEventArg{System.String,IParticipant}'
  EasyCodeForVivox.EasyUsers.OnUserValuesUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated*
        name: OnUserValuesUpdated
        nameWithType: EasyUsers.OnUserValuesUpdated
        qualifiedName: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated
      VB:
      - id: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated*
        name: OnUserValuesUpdated
        nameWithType: EasyUsers.OnUserValuesUpdated
        qualifiedName: EasyCodeForVivox.EasyUsers.OnUserValuesUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.EasyUsers.OnUserValuesUpdated
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  INetworkSerializable:
    name:
      CSharp:
      - id: INetworkSerializable
        name: INetworkSerializable
        nameWithType: INetworkSerializable
        qualifiedName: INetworkSerializable
        isExternal: true
      VB:
      - id: INetworkSerializable
        name: INetworkSerializable
        nameWithType: INetworkSerializable
        qualifiedName: INetworkSerializable
        isExternal: true
    isDefinition: true
    commentId: '!:INetworkSerializable'
  IEquatable`1:
    name:
      CSharp:
      - id: IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IEquatable`1'
  IEquatable{EasyCodeForVivox.DemoScene.PlayerInfo}:
    name:
      CSharp:
      - id: IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: IEquatable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: EasyCodeForVivox.DemoScene.PlayerInfo
        name: PlayerInfo
        nameWithType: PlayerInfo
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEquatable`1
        name: IEquatable
        nameWithType: IEquatable
        qualifiedName: IEquatable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: EasyCodeForVivox.DemoScene.PlayerInfo
        name: PlayerInfo
        nameWithType: PlayerInfo
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEquatable`1
    commentId: '!:IEquatable{EasyCodeForVivox.DemoScene.PlayerInfo}'
  FixedString32Bytes:
    name:
      CSharp:
      - id: FixedString32Bytes
        name: FixedString32Bytes
        nameWithType: FixedString32Bytes
        qualifiedName: FixedString32Bytes
        isExternal: true
      VB:
      - id: FixedString32Bytes
        name: FixedString32Bytes
        nameWithType: FixedString32Bytes
        qualifiedName: FixedString32Bytes
        isExternal: true
    isDefinition: true
    commentId: '!:FixedString32Bytes'
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt64
  BufferSerializer`1:
    name:
      CSharp:
      - id: BufferSerializer`1
        name: BufferSerializer
        nameWithType: BufferSerializer
        qualifiedName: BufferSerializer
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: BufferSerializer`1
        name: BufferSerializer
        nameWithType: BufferSerializer
        qualifiedName: BufferSerializer
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:BufferSerializer`1'
  BufferSerializer{{T}}:
    name:
      CSharp:
      - id: BufferSerializer`1
        name: BufferSerializer
        nameWithType: BufferSerializer
        qualifiedName: BufferSerializer
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: BufferSerializer`1
        name: BufferSerializer
        nameWithType: BufferSerializer
        qualifiedName: BufferSerializer
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: BufferSerializer`1
    commentId: '!:BufferSerializer{``0}'
  EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize*:
    name:
      CSharp:
      - id: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize*
        name: NetworkSerialize
        nameWithType: PlayerInfo.NetworkSerialize
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize
      VB:
      - id: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize*
        name: NetworkSerialize
        nameWithType: PlayerInfo.NetworkSerialize
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.DemoScene.PlayerInfo.NetworkSerialize
  EasyCodeForVivox.DemoScene:
    name:
      CSharp:
      - name: EasyCodeForVivox.DemoScene
        nameWithType: EasyCodeForVivox.DemoScene
        qualifiedName: EasyCodeForVivox.DemoScene
      VB:
      - name: EasyCodeForVivox.DemoScene
        nameWithType: EasyCodeForVivox.DemoScene
        qualifiedName: EasyCodeForVivox.DemoScene
    isDefinition: true
    commentId: N:EasyCodeForVivox.DemoScene
  EasyCodeForVivox.DemoScene.PlayerInfo:
    name:
      CSharp:
      - id: EasyCodeForVivox.DemoScene.PlayerInfo
        name: PlayerInfo
        nameWithType: PlayerInfo
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo
      VB:
      - id: EasyCodeForVivox.DemoScene.PlayerInfo
        name: PlayerInfo
        nameWithType: PlayerInfo
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo
    isDefinition: true
    parent: EasyCodeForVivox.DemoScene
    commentId: T:EasyCodeForVivox.DemoScene.PlayerInfo
  EasyCodeForVivox.DemoScene.PlayerInfo.Equals*:
    name:
      CSharp:
      - id: EasyCodeForVivox.DemoScene.PlayerInfo.Equals*
        name: Equals
        nameWithType: PlayerInfo.Equals
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo.Equals
      VB:
      - id: EasyCodeForVivox.DemoScene.PlayerInfo.Equals*
        name: Equals
        nameWithType: PlayerInfo.Equals
        qualifiedName: EasyCodeForVivox.DemoScene.PlayerInfo.Equals
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.DemoScene.PlayerInfo.Equals
  EasyCodeForVivox.Events.EasyEvents.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.#ctor*
        name: EasyEvents
        nameWithType: EasyEvents.EasyEvents
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.EasyEvents
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.#ctor*
        name: EasyEvents
        nameWithType: EasyEvents.EasyEvents
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.EasyEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.#ctor
  Action`1:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Action{ILoginSession}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ILoginSession
        name: ILoginSession
        nameWithType: ILoginSession
        qualifiedName: ILoginSession
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{ILoginSession}'
  Action{AccountId}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: AccountId
        name: AccountId
        nameWithType: AccountId
        qualifiedName: AccountId
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{AccountId}'
  Action{IChannelSession}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IChannelSession
        name: IChannelSession
        nameWithType: IChannelSession
        qualifiedName: IChannelSession
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IChannelSession
        name: IChannelSession
        nameWithType: IChannelSession
        qualifiedName: IChannelSession
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{IChannelSession}'
  Action:
    name:
      CSharp:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  Action{IChannelTextMessage}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IChannelTextMessage
        name: IChannelTextMessage
        nameWithType: IChannelTextMessage
        qualifiedName: IChannelTextMessage
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IChannelTextMessage
        name: IChannelTextMessage
        nameWithType: IChannelTextMessage
        qualifiedName: IChannelTextMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{IChannelTextMessage}'
  Action{IDirectedTextMessage}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IDirectedTextMessage
        name: IDirectedTextMessage
        nameWithType: IDirectedTextMessage
        qualifiedName: IDirectedTextMessage
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IDirectedTextMessage
        name: IDirectedTextMessage
        nameWithType: IDirectedTextMessage
        qualifiedName: IDirectedTextMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{IDirectedTextMessage}'
  Action{IFailedDirectedTextMessage}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IFailedDirectedTextMessage
        name: IFailedDirectedTextMessage
        nameWithType: IFailedDirectedTextMessage
        qualifiedName: IFailedDirectedTextMessage
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IFailedDirectedTextMessage
        name: IFailedDirectedTextMessage
        nameWithType: IFailedDirectedTextMessage
        qualifiedName: IFailedDirectedTextMessage
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{IFailedDirectedTextMessage}'
  Action{IParticipant}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IParticipant
        name: IParticipant
        nameWithType: IParticipant
        qualifiedName: IParticipant
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IParticipant
        name: IParticipant
        nameWithType: IParticipant
        qualifiedName: IParticipant
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{IParticipant}'
  Action{IAudioDevice}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IAudioDevice
        name: IAudioDevice
        nameWithType: IAudioDevice
        qualifiedName: IAudioDevice
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IAudioDevice
        name: IAudioDevice
        nameWithType: IAudioDevice
        qualifiedName: IAudioDevice
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{IAudioDevice}'
  Action{ITTSMessageQueueEventArgs}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ITTSMessageQueueEventArgs
        name: ITTSMessageQueueEventArgs
        nameWithType: ITTSMessageQueueEventArgs
        qualifiedName: ITTSMessageQueueEventArgs
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ITTSMessageQueueEventArgs
        name: ITTSMessageQueueEventArgs
        nameWithType: ITTSMessageQueueEventArgs
        qualifiedName: ITTSMessageQueueEventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{ITTSMessageQueueEventArgs}'
  Enum:
    name:
      CSharp:
      - id: Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      VB:
      - id: Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
    isDefinition: true
  T1:
    name:
      CSharp:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      VB:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
    isDefinition: true
  '{T1}':
    name:
      CSharp:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      VB:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
    isDefinition: false
    definition: T1
    commentId: '!:T1'
  T2:
    name:
      CSharp:
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      VB:
      - name: T2
        nameWithType: T2
        qualifiedName: T2
    isDefinition: true
  '{T2}':
    name:
      CSharp:
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      VB:
      - name: T2
        nameWithType: T2
        qualifiedName: T2
    isDefinition: false
    definition: T2
    commentId: '!:T2'
  EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke*
        name: CreateDelegateAndInvoke
        nameWithType: EasyEvents.CreateDelegateAndInvoke
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke*
        name: CreateDelegateAndInvoke
        nameWithType: EasyEvents.CreateDelegateAndInvoke
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.CreateDelegateAndInvoke
  EasyCodeForVivox.Events.EasyEvents.InvokeMethods*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.InvokeMethods*
        name: InvokeMethods
        nameWithType: EasyEvents.InvokeMethods
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.InvokeMethods
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.InvokeMethods*
        name: InvokeMethods
        nameWithType: EasyEvents.InvokeMethods
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.InvokeMethods
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.InvokeMethods
  EasyCodeForVivox.Events.EasyEvents.OnLoggingIn*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn*
        name: OnLoggingIn
        nameWithType: EasyEvents.OnLoggingIn
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn*
        name: OnLoggingIn
        nameWithType: EasyEvents.OnLoggingIn
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggingIn
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLoggingIn
  EasyCodeForVivox.Events.EasyEvents.OnLoggedIn*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn*
        name: OnLoggedIn
        nameWithType: EasyEvents.OnLoggedIn
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn*
        name: OnLoggedIn
        nameWithType: EasyEvents.OnLoggedIn
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggedIn
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLoggedIn
  EasyCodeForVivox.Events.EasyEvents.OnLoggingOut*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut*
        name: OnLoggingOut
        nameWithType: EasyEvents.OnLoggingOut
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut*
        name: OnLoggingOut
        nameWithType: EasyEvents.OnLoggingOut
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggingOut
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLoggingOut
  EasyCodeForVivox.Events.EasyEvents.OnLoggedOut*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut*
        name: OnLoggedOut
        nameWithType: EasyEvents.OnLoggedOut
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut*
        name: OnLoggedOut
        nameWithType: EasyEvents.OnLoggedOut
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoggedOut
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLoggedOut
  EasyCodeForVivox.Events.EasyEvents.OnLoginAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded*
        name: OnLoginAdded
        nameWithType: EasyEvents.OnLoginAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded*
        name: OnLoginAdded
        nameWithType: EasyEvents.OnLoginAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoginAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLoginAdded
  EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved*
        name: OnLoginRemoved
        nameWithType: EasyEvents.OnLoginRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved*
        name: OnLoginRemoved
        nameWithType: EasyEvents.OnLoginRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLoginRemoved
  EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated*
        name: OnLoginUpdated
        nameWithType: EasyEvents.OnLoginUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated*
        name: OnLoginUpdated
        nameWithType: EasyEvents.OnLoginUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLoginUpdated
  EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting*
        name: OnChannelConnecting
        nameWithType: EasyEvents.OnChannelConnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting*
        name: OnChannelConnecting
        nameWithType: EasyEvents.OnChannelConnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnChannelConnecting
  EasyCodeForVivox.Events.EasyEvents.OnChannelConnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected*
        name: OnChannelConnected
        nameWithType: EasyEvents.OnChannelConnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected*
        name: OnChannelConnected
        nameWithType: EasyEvents.OnChannelConnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelConnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnChannelConnected
  EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting*
        name: OnChannelDisconnecting
        nameWithType: EasyEvents.OnChannelDisconnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting*
        name: OnChannelDisconnecting
        nameWithType: EasyEvents.OnChannelDisconnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnecting
  EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected*
        name: OnChannelDisconnected
        nameWithType: EasyEvents.OnChannelDisconnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected*
        name: OnChannelDisconnected
        nameWithType: EasyEvents.OnChannelDisconnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnChannelDisconnected
  EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting*
        name: OnTextChannelConnecting
        nameWithType: EasyEvents.OnTextChannelConnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting*
        name: OnTextChannelConnecting
        nameWithType: EasyEvents.OnTextChannelConnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnecting
  EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected*
        name: OnTextChannelConnected
        nameWithType: EasyEvents.OnTextChannelConnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected*
        name: OnTextChannelConnected
        nameWithType: EasyEvents.OnTextChannelConnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnTextChannelConnected
  EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting*
        name: OnTextChannelDisconnecting
        nameWithType: EasyEvents.OnTextChannelDisconnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting*
        name: OnTextChannelDisconnecting
        nameWithType: EasyEvents.OnTextChannelDisconnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnecting
  EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected*
        name: OnTextChannelDisconnected
        nameWithType: EasyEvents.OnTextChannelDisconnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected*
        name: OnTextChannelDisconnected
        nameWithType: EasyEvents.OnTextChannelDisconnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnTextChannelDisconnected
  EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting*
        name: OnAudioChannelConnecting
        nameWithType: EasyEvents.OnAudioChannelConnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting*
        name: OnAudioChannelConnecting
        nameWithType: EasyEvents.OnAudioChannelConnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnecting
  EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected*
        name: OnAudioChannelConnected
        nameWithType: EasyEvents.OnAudioChannelConnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected*
        name: OnAudioChannelConnected
        nameWithType: EasyEvents.OnAudioChannelConnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelConnected
  EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting*
        name: OnAudioChannelDisconnecting
        nameWithType: EasyEvents.OnAudioChannelDisconnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting*
        name: OnAudioChannelDisconnecting
        nameWithType: EasyEvents.OnAudioChannelDisconnecting
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnecting
  EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected*
        name: OnAudioChannelDisconnected
        nameWithType: EasyEvents.OnAudioChannelDisconnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected*
        name: OnAudioChannelDisconnected
        nameWithType: EasyEvents.OnAudioChannelDisconnected
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioChannelDisconnected
  EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved*
        name: OnChannelMessageRecieved
        nameWithType: EasyEvents.OnChannelMessageRecieved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved*
        name: OnChannelMessageRecieved
        nameWithType: EasyEvents.OnChannelMessageRecieved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnChannelMessageRecieved
  EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved*
        name: OnEventMessageRecieved
        nameWithType: EasyEvents.OnEventMessageRecieved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved*
        name: OnEventMessageRecieved
        nameWithType: EasyEvents.OnEventMessageRecieved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnEventMessageRecieved
  EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent*
        name: OnChannelMessageSent
        nameWithType: EasyEvents.OnChannelMessageSent
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent*
        name: OnChannelMessageSent
        nameWithType: EasyEvents.OnChannelMessageSent
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnChannelMessageSent
  EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent*
        name: OnDirectMessageSent
        nameWithType: EasyEvents.OnDirectMessageSent
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent*
        name: OnDirectMessageSent
        nameWithType: EasyEvents.OnDirectMessageSent
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageSent
  EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved*
        name: OnDirectMessageRecieved
        nameWithType: EasyEvents.OnDirectMessageRecieved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved*
        name: OnDirectMessageRecieved
        nameWithType: EasyEvents.OnDirectMessageRecieved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageRecieved
  EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed*
        name: OnDirectMessageFailed
        nameWithType: EasyEvents.OnDirectMessageFailed
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed*
        name: OnDirectMessageFailed
        nameWithType: EasyEvents.OnDirectMessageFailed
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnDirectMessageFailed
  EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel*
        name: OnUserJoinedChannel
        nameWithType: EasyEvents.OnUserJoinedChannel
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel*
        name: OnUserJoinedChannel
        nameWithType: EasyEvents.OnUserJoinedChannel
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserJoinedChannel
  EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel*
        name: OnUserLeftChannel
        nameWithType: EasyEvents.OnUserLeftChannel
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel*
        name: OnUserLeftChannel
        nameWithType: EasyEvents.OnUserLeftChannel
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserLeftChannel
  EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated*
        name: OnUserValuesUpdated
        nameWithType: EasyEvents.OnUserValuesUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated*
        name: OnUserValuesUpdated
        nameWithType: EasyEvents.OnUserValuesUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserValuesUpdated
  EasyCodeForVivox.Events.EasyEvents.OnUserMuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserMuted*
        name: OnUserMuted
        nameWithType: EasyEvents.OnUserMuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserMuted
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserMuted*
        name: OnUserMuted
        nameWithType: EasyEvents.OnUserMuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserMuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserMuted
  EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted*
        name: OnUserUnmuted
        nameWithType: EasyEvents.OnUserUnmuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted*
        name: OnUserUnmuted
        nameWithType: EasyEvents.OnUserUnmuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserUnmuted
  EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted*
        name: OnUserCrossMuted
        nameWithType: EasyEvents.OnUserCrossMuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted*
        name: OnUserCrossMuted
        nameWithType: EasyEvents.OnUserCrossMuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserCrossMuted
  EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted*
        name: OnUserCrossUnmuted
        nameWithType: EasyEvents.OnUserCrossUnmuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted*
        name: OnUserCrossUnmuted
        nameWithType: EasyEvents.OnUserCrossUnmuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserCrossUnmuted
  EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking*
        name: OnUserSpeaking
        nameWithType: EasyEvents.OnUserSpeaking
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking*
        name: OnUserSpeaking
        nameWithType: EasyEvents.OnUserSpeaking
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserSpeaking
  EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking*
        name: OnUserNotSpeaking
        nameWithType: EasyEvents.OnUserNotSpeaking
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking*
        name: OnUserNotSpeaking
        nameWithType: EasyEvents.OnUserNotSpeaking
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnUserNotSpeaking
  EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted*
        name: OnLocalUserMuted
        nameWithType: EasyEvents.OnLocalUserMuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted*
        name: OnLocalUserMuted
        nameWithType: EasyEvents.OnLocalUserMuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLocalUserMuted
  EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted*
        name: OnLocalUserUnmuted
        nameWithType: EasyEvents.OnLocalUserUnmuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted*
        name: OnLocalUserUnmuted
        nameWithType: EasyEvents.OnLocalUserUnmuted
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnLocalUserUnmuted
  EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded*
        name: OnAudioInputDeviceAdded
        nameWithType: EasyEvents.OnAudioInputDeviceAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded*
        name: OnAudioInputDeviceAdded
        nameWithType: EasyEvents.OnAudioInputDeviceAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceAdded
  EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved*
        name: OnAudioInputDeviceRemoved
        nameWithType: EasyEvents.OnAudioInputDeviceRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved*
        name: OnAudioInputDeviceRemoved
        nameWithType: EasyEvents.OnAudioInputDeviceRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceRemoved
  EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated*
        name: OnAudioInputDeviceUpdated
        nameWithType: EasyEvents.OnAudioInputDeviceUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated*
        name: OnAudioInputDeviceUpdated
        nameWithType: EasyEvents.OnAudioInputDeviceUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioInputDeviceUpdated
  EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded*
        name: OnAudioOutputDeviceAdded
        nameWithType: EasyEvents.OnAudioOutputDeviceAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded*
        name: OnAudioOutputDeviceAdded
        nameWithType: EasyEvents.OnAudioOutputDeviceAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceAdded
  EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved*
        name: OnAudioOutputDeviceRemoved
        nameWithType: EasyEvents.OnAudioOutputDeviceRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved*
        name: OnAudioOutputDeviceRemoved
        nameWithType: EasyEvents.OnAudioOutputDeviceRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceRemoved
  EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated*
        name: OnAudioOutputDeviceUpdated
        nameWithType: EasyEvents.OnAudioOutputDeviceUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated*
        name: OnAudioOutputDeviceUpdated
        nameWithType: EasyEvents.OnAudioOutputDeviceUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnAudioOutputDeviceUpdated
  EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded*
        name: OnTTSMessageAdded
        nameWithType: EasyEvents.OnTTSMessageAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded*
        name: OnTTSMessageAdded
        nameWithType: EasyEvents.OnTTSMessageAdded
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnTTSMessageAdded
  EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved*
        name: OnTTSMessageRemoved
        nameWithType: EasyEvents.OnTTSMessageRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved*
        name: OnTTSMessageRemoved
        nameWithType: EasyEvents.OnTTSMessageRemoved
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnTTSMessageRemoved
  EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated*
        name: OnTTSMessageUpdated
        nameWithType: EasyEvents.OnTTSMessageUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated*
        name: OnTTSMessageUpdated
        nameWithType: EasyEvents.OnTTSMessageUpdated
        qualifiedName: EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.EasyEvents.OnTTSMessageUpdated
  EasyCodeForVivox.Events.EasyEvents:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.EasyEvents
        name: EasyEvents
        nameWithType: EasyEvents
        qualifiedName: EasyCodeForVivox.Events.EasyEvents
      VB:
      - id: EasyCodeForVivox.Events.EasyEvents
        name: EasyEvents
        nameWithType: EasyEvents
        qualifiedName: EasyCodeForVivox.Events.EasyEvents
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.EasyEvents
  EasyCodeForVivox.Events.LoginStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.LoginStatus
        name: LoginStatus
        nameWithType: LoginStatus
        qualifiedName: EasyCodeForVivox.Events.LoginStatus
      VB:
      - id: EasyCodeForVivox.Events.LoginStatus
        name: LoginStatus
        nameWithType: LoginStatus
        qualifiedName: EasyCodeForVivox.Events.LoginStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.LoginStatus
  EasyCodeForVivox.Events:
    name:
      CSharp:
      - name: EasyCodeForVivox.Events
        nameWithType: EasyCodeForVivox.Events
        qualifiedName: EasyCodeForVivox.Events
      VB:
      - name: EasyCodeForVivox.Events
        nameWithType: EasyCodeForVivox.Events
        qualifiedName: EasyCodeForVivox.Events
    isDefinition: true
    commentId: N:EasyCodeForVivox.Events
  EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options*
        name: Options
        nameWithType: LoginEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options*
        name: Options
        nameWithType: LoginEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.LoginEventAsyncAttribute.Options
  EasyCodeForVivox.Events.LoginEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute
        name: LoginEventAsyncAttribute
        nameWithType: LoginEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute
        name: LoginEventAsyncAttribute
        nameWithType: LoginEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.LoginEventAsyncAttribute
  EasyCodeForVivox.Events.LoginEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute.#ctor*
        name: LoginEventAsyncAttribute
        nameWithType: LoginEventAsyncAttribute.LoginEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAsyncAttribute.LoginEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.LoginEventAsyncAttribute.#ctor*
        name: LoginEventAsyncAttribute
        nameWithType: LoginEventAsyncAttribute.LoginEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAsyncAttribute.LoginEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.LoginEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.ChannelStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelStatus
        name: ChannelStatus
        nameWithType: ChannelStatus
        qualifiedName: EasyCodeForVivox.Events.ChannelStatus
      VB:
      - id: EasyCodeForVivox.Events.ChannelStatus
        name: ChannelStatus
        nameWithType: ChannelStatus
        qualifiedName: EasyCodeForVivox.Events.ChannelStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.ChannelStatus
  EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options*
        name: Options
        nameWithType: ChannelEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options*
        name: Options
        nameWithType: ChannelEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelEventAsyncAttribute.Options
  EasyCodeForVivox.Events.ChannelEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute
        name: ChannelEventAsyncAttribute
        nameWithType: ChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute
        name: ChannelEventAsyncAttribute
        nameWithType: ChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.ChannelEventAsyncAttribute
  EasyCodeForVivox.Events.ChannelEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.#ctor*
        name: ChannelEventAsyncAttribute
        nameWithType: ChannelEventAsyncAttribute.ChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.ChannelEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.#ctor*
        name: ChannelEventAsyncAttribute
        nameWithType: ChannelEventAsyncAttribute.ChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAsyncAttribute.ChannelEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.AudioChannelStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioChannelStatus
        name: AudioChannelStatus
        nameWithType: AudioChannelStatus
        qualifiedName: EasyCodeForVivox.Events.AudioChannelStatus
      VB:
      - id: EasyCodeForVivox.Events.AudioChannelStatus
        name: AudioChannelStatus
        nameWithType: AudioChannelStatus
        qualifiedName: EasyCodeForVivox.Events.AudioChannelStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.AudioChannelStatus
  EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options*
        name: Options
        nameWithType: AudioChannelEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options*
        name: Options
        nameWithType: AudioChannelEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.Options
  EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
        name: AudioChannelEventAsyncAttribute
        nameWithType: AudioChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
        name: AudioChannelEventAsyncAttribute
        nameWithType: AudioChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute
  EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.#ctor*
        name: AudioChannelEventAsyncAttribute
        nameWithType: AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.#ctor*
        name: AudioChannelEventAsyncAttribute
        nameWithType: AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.AudioChannelEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioChannelEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.TextChannelStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextChannelStatus
        name: TextChannelStatus
        nameWithType: TextChannelStatus
        qualifiedName: EasyCodeForVivox.Events.TextChannelStatus
      VB:
      - id: EasyCodeForVivox.Events.TextChannelStatus
        name: TextChannelStatus
        nameWithType: TextChannelStatus
        qualifiedName: EasyCodeForVivox.Events.TextChannelStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.TextChannelStatus
  EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options*
        name: Options
        nameWithType: TextChannelEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options*
        name: Options
        nameWithType: TextChannelEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.Options
  EasyCodeForVivox.Events.TextChannelEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
        name: TextChannelEventAsyncAttribute
        nameWithType: TextChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
        name: TextChannelEventAsyncAttribute
        nameWithType: TextChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.TextChannelEventAsyncAttribute
  EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.#ctor*
        name: TextChannelEventAsyncAttribute
        nameWithType: TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.#ctor*
        name: TextChannelEventAsyncAttribute
        nameWithType: TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.TextChannelEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextChannelEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.ChannelMessageStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelMessageStatus
        name: ChannelMessageStatus
        nameWithType: ChannelMessageStatus
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageStatus
      VB:
      - id: EasyCodeForVivox.Events.ChannelMessageStatus
        name: ChannelMessageStatus
        nameWithType: ChannelMessageStatus
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.ChannelMessageStatus
  EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options*
        name: Options
        nameWithType: ChannelMessageEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options*
        name: Options
        nameWithType: ChannelMessageEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.Options
  EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
        name: ChannelMessageEventAsyncAttribute
        nameWithType: ChannelMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
        name: ChannelMessageEventAsyncAttribute
        nameWithType: ChannelMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute
  EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.#ctor*
        name: ChannelMessageEventAsyncAttribute
        nameWithType: ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.#ctor*
        name: ChannelMessageEventAsyncAttribute
        nameWithType: ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.ChannelMessageEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelMessageEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.DirectMessageStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.DirectMessageStatus
        name: DirectMessageStatus
        nameWithType: DirectMessageStatus
        qualifiedName: EasyCodeForVivox.Events.DirectMessageStatus
      VB:
      - id: EasyCodeForVivox.Events.DirectMessageStatus
        name: DirectMessageStatus
        nameWithType: DirectMessageStatus
        qualifiedName: EasyCodeForVivox.Events.DirectMessageStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.DirectMessageStatus
  EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options*
        name: Options
        nameWithType: DirectMessageEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options*
        name: Options
        nameWithType: DirectMessageEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.Options
  EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
        name: DirectMessageEventAsyncAttribute
        nameWithType: DirectMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
        name: DirectMessageEventAsyncAttribute
        nameWithType: DirectMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute
  EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.#ctor*
        name: DirectMessageEventAsyncAttribute
        nameWithType: DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.#ctor*
        name: DirectMessageEventAsyncAttribute
        nameWithType: DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.DirectMessageEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.DirectMessageEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.UserStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.UserStatus
        name: UserStatus
        nameWithType: UserStatus
        qualifiedName: EasyCodeForVivox.Events.UserStatus
      VB:
      - id: EasyCodeForVivox.Events.UserStatus
        name: UserStatus
        nameWithType: UserStatus
        qualifiedName: EasyCodeForVivox.Events.UserStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.UserStatus
  EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options*
        name: Options
        nameWithType: UserEventsAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options*
        name: Options
        nameWithType: UserEventsAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.UserEventsAsyncAttribute.Options
  EasyCodeForVivox.Events.UserEventsAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute
        name: UserEventsAsyncAttribute
        nameWithType: UserEventsAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute
        name: UserEventsAsyncAttribute
        nameWithType: UserEventsAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.UserEventsAsyncAttribute
  EasyCodeForVivox.Events.UserEventsAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute.#ctor*
        name: UserEventsAsyncAttribute
        nameWithType: UserEventsAsyncAttribute.UserEventsAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAsyncAttribute.UserEventsAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.UserEventsAsyncAttribute.#ctor*
        name: UserEventsAsyncAttribute
        nameWithType: UserEventsAsyncAttribute.UserEventsAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAsyncAttribute.UserEventsAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.UserEventsAsyncAttribute.#ctor
  EasyCodeForVivox.Events.AudioDeviceStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioDeviceStatus
        name: AudioDeviceStatus
        nameWithType: AudioDeviceStatus
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceStatus
      VB:
      - id: EasyCodeForVivox.Events.AudioDeviceStatus
        name: AudioDeviceStatus
        nameWithType: AudioDeviceStatus
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.AudioDeviceStatus
  EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options*
        name: Options
        nameWithType: AudioDeviceEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options*
        name: Options
        nameWithType: AudioDeviceEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.Options
  EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
        name: AudioDeviceEventAsyncAttribute
        nameWithType: AudioDeviceEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
        name: AudioDeviceEventAsyncAttribute
        nameWithType: AudioDeviceEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute
  EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.#ctor*
        name: AudioDeviceEventAsyncAttribute
        nameWithType: AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.#ctor*
        name: AudioDeviceEventAsyncAttribute
        nameWithType: AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.AudioDeviceEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioDeviceEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.TextToSpeechStatus:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextToSpeechStatus
        name: TextToSpeechStatus
        nameWithType: TextToSpeechStatus
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechStatus
      VB:
      - id: EasyCodeForVivox.Events.TextToSpeechStatus
        name: TextToSpeechStatus
        nameWithType: TextToSpeechStatus
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechStatus
    isDefinition: true
    parent: EasyCodeForVivox.Events
    commentId: T:EasyCodeForVivox.Events.TextToSpeechStatus
  EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options*
        name: Options
        nameWithType: TextToSpeechEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options*
        name: Options
        nameWithType: TextToSpeechEventAsyncAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.Options
  EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
        name: TextToSpeechEventAsyncAttribute
        nameWithType: TextToSpeechEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
        name: TextToSpeechEventAsyncAttribute
        nameWithType: TextToSpeechEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute
  EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.#ctor*
        name: TextToSpeechEventAsyncAttribute
        nameWithType: TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.#ctor*
        name: TextToSpeechEventAsyncAttribute
        nameWithType: TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.TextToSpeechEventAsyncAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextToSpeechEventAsyncAttribute.#ctor
  EasyCodeForVivox.Events.LoginEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.LoginEventAttribute
        name: LoginEventAttribute
        nameWithType: LoginEventAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.LoginEventAttribute
        name: LoginEventAttribute
        nameWithType: LoginEventAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.LoginEventAttribute
  EasyCodeForVivox.Events.ChannelEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelEventAttribute
        name: ChannelEventAttribute
        nameWithType: ChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelEventAttribute
        name: ChannelEventAttribute
        nameWithType: ChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.ChannelEventAttribute
  EasyCodeForVivox.Events.AudioChannelEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioChannelEventAttribute
        name: AudioChannelEventAttribute
        nameWithType: AudioChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioChannelEventAttribute
        name: AudioChannelEventAttribute
        nameWithType: AudioChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.AudioChannelEventAttribute
  EasyCodeForVivox.Events.TextChannelEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextChannelEventAttribute
        name: TextChannelEventAttribute
        nameWithType: TextChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextChannelEventAttribute
        name: TextChannelEventAttribute
        nameWithType: TextChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.TextChannelEventAttribute
  EasyCodeForVivox.Events.ChannelMessageEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute
        name: ChannelMessageEventAttribute
        nameWithType: ChannelMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute
        name: ChannelMessageEventAttribute
        nameWithType: ChannelMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.ChannelMessageEventAttribute
  EasyCodeForVivox.Events.DirectMessageEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.DirectMessageEventAttribute
        name: DirectMessageEventAttribute
        nameWithType: DirectMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.DirectMessageEventAttribute
        name: DirectMessageEventAttribute
        nameWithType: DirectMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.DirectMessageEventAttribute
  EasyCodeForVivox.Events.UserEventsAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.UserEventsAttribute
        name: UserEventsAttribute
        nameWithType: UserEventsAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAttribute
      VB:
      - id: EasyCodeForVivox.Events.UserEventsAttribute
        name: UserEventsAttribute
        nameWithType: UserEventsAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.UserEventsAttribute
  EasyCodeForVivox.Events.AudioDeviceEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute
        name: AudioDeviceEventAttribute
        nameWithType: AudioDeviceEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute
        name: AudioDeviceEventAttribute
        nameWithType: AudioDeviceEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.AudioDeviceEventAttribute
  EasyCodeForVivox.Events.TextToSpeechEventAttribute:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute
        name: TextToSpeechEventAttribute
        nameWithType: TextToSpeechEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute
        name: TextToSpeechEventAttribute
        nameWithType: TextToSpeechEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAttribute
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.TextToSpeechEventAttribute
  EasyCodeForVivox.Events.LoginEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.LoginEventAttribute.Options*
        name: Options
        nameWithType: LoginEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.LoginEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.LoginEventAttribute.Options*
        name: Options
        nameWithType: LoginEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.LoginEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.LoginEventAttribute.Options
  EasyCodeForVivox.Events.LoginEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.LoginEventAttribute.#ctor*
        name: LoginEventAttribute
        nameWithType: LoginEventAttribute.LoginEventAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAttribute.LoginEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.LoginEventAttribute.#ctor*
        name: LoginEventAttribute
        nameWithType: LoginEventAttribute.LoginEventAttribute
        qualifiedName: EasyCodeForVivox.Events.LoginEventAttribute.LoginEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.LoginEventAttribute.#ctor
  EasyCodeForVivox.Events.ChannelEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelEventAttribute.Options*
        name: Options
        nameWithType: ChannelEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.ChannelEventAttribute.Options*
        name: Options
        nameWithType: ChannelEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelEventAttribute.Options
  EasyCodeForVivox.Events.ChannelEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelEventAttribute.#ctor*
        name: ChannelEventAttribute
        nameWithType: ChannelEventAttribute.ChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAttribute.ChannelEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelEventAttribute.#ctor*
        name: ChannelEventAttribute
        nameWithType: ChannelEventAttribute.ChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelEventAttribute.ChannelEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelEventAttribute.#ctor
  EasyCodeForVivox.Events.AudioChannelEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options*
        name: Options
        nameWithType: AudioChannelEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options*
        name: Options
        nameWithType: AudioChannelEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioChannelEventAttribute.Options
  EasyCodeForVivox.Events.AudioChannelEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioChannelEventAttribute.#ctor*
        name: AudioChannelEventAttribute
        nameWithType: AudioChannelEventAttribute.AudioChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAttribute.AudioChannelEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioChannelEventAttribute.#ctor*
        name: AudioChannelEventAttribute
        nameWithType: AudioChannelEventAttribute.AudioChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioChannelEventAttribute.AudioChannelEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioChannelEventAttribute.#ctor
  EasyCodeForVivox.Events.TextChannelEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextChannelEventAttribute.Options*
        name: Options
        nameWithType: TextChannelEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.TextChannelEventAttribute.Options*
        name: Options
        nameWithType: TextChannelEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextChannelEventAttribute.Options
  EasyCodeForVivox.Events.TextChannelEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextChannelEventAttribute.#ctor*
        name: TextChannelEventAttribute
        nameWithType: TextChannelEventAttribute.TextChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAttribute.TextChannelEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextChannelEventAttribute.#ctor*
        name: TextChannelEventAttribute
        nameWithType: TextChannelEventAttribute.TextChannelEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextChannelEventAttribute.TextChannelEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextChannelEventAttribute.#ctor
  EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options*
        name: Options
        nameWithType: ChannelMessageEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options*
        name: Options
        nameWithType: ChannelMessageEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelMessageEventAttribute.Options
  EasyCodeForVivox.Events.ChannelMessageEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute.#ctor*
        name: ChannelMessageEventAttribute
        nameWithType: ChannelMessageEventAttribute.ChannelMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAttribute.ChannelMessageEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.ChannelMessageEventAttribute.#ctor*
        name: ChannelMessageEventAttribute
        nameWithType: ChannelMessageEventAttribute.ChannelMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.ChannelMessageEventAttribute.ChannelMessageEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.ChannelMessageEventAttribute.#ctor
  EasyCodeForVivox.Events.DirectMessageEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options*
        name: Options
        nameWithType: DirectMessageEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options*
        name: Options
        nameWithType: DirectMessageEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.DirectMessageEventAttribute.Options
  EasyCodeForVivox.Events.DirectMessageEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.DirectMessageEventAttribute.#ctor*
        name: DirectMessageEventAttribute
        nameWithType: DirectMessageEventAttribute.DirectMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAttribute.DirectMessageEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.DirectMessageEventAttribute.#ctor*
        name: DirectMessageEventAttribute
        nameWithType: DirectMessageEventAttribute.DirectMessageEventAttribute
        qualifiedName: EasyCodeForVivox.Events.DirectMessageEventAttribute.DirectMessageEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.DirectMessageEventAttribute.#ctor
  EasyCodeForVivox.Events.UserEventsAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.UserEventsAttribute.Options*
        name: Options
        nameWithType: UserEventsAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.UserEventsAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.UserEventsAttribute.Options*
        name: Options
        nameWithType: UserEventsAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.UserEventsAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.UserEventsAttribute.Options
  EasyCodeForVivox.Events.UserEventsAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.UserEventsAttribute.#ctor*
        name: UserEventsAttribute
        nameWithType: UserEventsAttribute.UserEventsAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAttribute.UserEventsAttribute
      VB:
      - id: EasyCodeForVivox.Events.UserEventsAttribute.#ctor*
        name: UserEventsAttribute
        nameWithType: UserEventsAttribute.UserEventsAttribute
        qualifiedName: EasyCodeForVivox.Events.UserEventsAttribute.UserEventsAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.UserEventsAttribute.#ctor
  EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options*
        name: Options
        nameWithType: AudioDeviceEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options*
        name: Options
        nameWithType: AudioDeviceEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioDeviceEventAttribute.Options
  EasyCodeForVivox.Events.AudioDeviceEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute.#ctor*
        name: AudioDeviceEventAttribute
        nameWithType: AudioDeviceEventAttribute.AudioDeviceEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAttribute.AudioDeviceEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.AudioDeviceEventAttribute.#ctor*
        name: AudioDeviceEventAttribute
        nameWithType: AudioDeviceEventAttribute.AudioDeviceEventAttribute
        qualifiedName: EasyCodeForVivox.Events.AudioDeviceEventAttribute.AudioDeviceEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.AudioDeviceEventAttribute.#ctor
  EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options*
        name: Options
        nameWithType: TextToSpeechEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options
      VB:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options*
        name: Options
        nameWithType: TextToSpeechEventAttribute.Options
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextToSpeechEventAttribute.Options
  EasyCodeForVivox.Events.TextToSpeechEventAttribute.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute.#ctor*
        name: TextToSpeechEventAttribute
        nameWithType: TextToSpeechEventAttribute.TextToSpeechEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAttribute.TextToSpeechEventAttribute
      VB:
      - id: EasyCodeForVivox.Events.TextToSpeechEventAttribute.#ctor*
        name: TextToSpeechEventAttribute
        nameWithType: TextToSpeechEventAttribute.TextToSpeechEventAttribute
        qualifiedName: EasyCodeForVivox.Events.TextToSpeechEventAttribute.TextToSpeechEventAttribute
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.TextToSpeechEventAttribute.#ctor
  HashSet`1:
    name:
      CSharp:
      - id: HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:HashSet`1'
  HashSet{System.String}:
    name:
      CSharp:
      - id: HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: HashSet`1
    commentId: '!:HashSet{System.String}'
  Dictionary{Enum,List{MethodInfo}}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MethodInfo
        name: MethodInfo
        nameWithType: MethodInfo
        qualifiedName: MethodInfo
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MethodInfo
        name: MethodInfo
        nameWithType: MethodInfo
        qualifiedName: MethodInfo
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{Enum,List{MethodInfo}}'
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents*
        name: RegisterEvents
        nameWithType: HandleDynamicEvents.RegisterEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents*
        name: RegisterEvents
        nameWithType: HandleDynamicEvents.RegisterEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount*
        name: LogRegisteredEventsCount
        nameWithType: HandleDynamicEvents.LogRegisteredEventsCount
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount*
        name: LogRegisteredEventsCount
        nameWithType: HandleDynamicEvents.LogRegisteredEventsCount
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.LogRegisteredEventsCount
  MethodInfo:
    name:
      CSharp:
      - id: MethodInfo
        name: MethodInfo
        nameWithType: MethodInfo
        qualifiedName: MethodInfo
        isExternal: true
      VB:
      - id: MethodInfo
        name: MethodInfo
        nameWithType: MethodInfo
        qualifiedName: MethodInfo
        isExternal: true
    isDefinition: true
    commentId: '!:MethodInfo'
  EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent*
        name: AddDynamicEvent
        nameWithType: HandleDynamicEvents.AddDynamicEvent
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent*
        name: AddDynamicEvent
        nameWithType: HandleDynamicEvents.AddDynamicEvent
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.AddDynamicEvent
  Type[]:
    name:
      CSharp:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  BindingFlags:
    name:
      CSharp:
      - id: BindingFlags
        name: BindingFlags
        nameWithType: BindingFlags
        qualifiedName: BindingFlags
        isExternal: true
      VB:
      - id: BindingFlags
        name: BindingFlags
        nameWithType: BindingFlags
        qualifiedName: BindingFlags
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents*
        name: RegisterLoginEvents
        nameWithType: HandleDynamicEvents.RegisterLoginEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents*
        name: RegisterLoginEvents
        nameWithType: HandleDynamicEvents.RegisterLoginEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterLoginEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents*
        name: RegisterChannelEvents
        nameWithType: HandleDynamicEvents.RegisterChannelEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents*
        name: RegisterChannelEvents
        nameWithType: HandleDynamicEvents.RegisterChannelEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents*
        name: RegisterAudioDeviceEvents
        nameWithType: HandleDynamicEvents.RegisterAudioDeviceEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents*
        name: RegisterAudioDeviceEvents
        nameWithType: HandleDynamicEvents.RegisterAudioDeviceEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioDeviceEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents*
        name: RegisterAudioChannelEvents
        nameWithType: HandleDynamicEvents.RegisterAudioChannelEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents*
        name: RegisterAudioChannelEvents
        nameWithType: HandleDynamicEvents.RegisterAudioChannelEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterAudioChannelEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents*
        name: RegisterTextChannelEvents
        nameWithType: HandleDynamicEvents.RegisterTextChannelEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents*
        name: RegisterTextChannelEvents
        nameWithType: HandleDynamicEvents.RegisterTextChannelEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextChannelEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents*
        name: RegisterChannelMessageEvents
        nameWithType: HandleDynamicEvents.RegisterChannelMessageEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents*
        name: RegisterChannelMessageEvents
        nameWithType: HandleDynamicEvents.RegisterChannelMessageEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterChannelMessageEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents*
        name: RegisterDirectMessageEvents
        nameWithType: HandleDynamicEvents.RegisterDirectMessageEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents*
        name: RegisterDirectMessageEvents
        nameWithType: HandleDynamicEvents.RegisterDirectMessageEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterDirectMessageEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents*
        name: RegisterUserEvents
        nameWithType: HandleDynamicEvents.RegisterUserEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents*
        name: RegisterUserEvents
        nameWithType: HandleDynamicEvents.RegisterUserEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterUserEvents
  EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents*
        name: RegisterTextToSpeechEvents
        nameWithType: HandleDynamicEvents.RegisterTextToSpeechEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents*
        name: RegisterTextToSpeechEvents
        nameWithType: HandleDynamicEvents.RegisterTextToSpeechEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.HandleDynamicEvents.RegisterTextToSpeechEvents
  EasyCodeForVivox.Events.HandleDynamicEvents:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents
        name: HandleDynamicEvents
        nameWithType: HandleDynamicEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents
      VB:
      - id: EasyCodeForVivox.Events.HandleDynamicEvents
        name: HandleDynamicEvents
        nameWithType: HandleDynamicEvents
        qualifiedName: EasyCodeForVivox.Events.HandleDynamicEvents
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.HandleDynamicEvents
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.#ctor*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.#ctor*
        name: EasyEventsAsync
        nameWithType: EasyEventsAsync.EasyEventsAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.EasyEventsAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.#ctor*
        name: EasyEventsAsync
        nameWithType: EasyEventsAsync.EasyEventsAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.EasyEventsAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.#ctor
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync*
        name: OnLoggingInAsync
        nameWithType: EasyEventsAsync.OnLoggingInAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync*
        name: OnLoggingInAsync
        nameWithType: EasyEventsAsync.OnLoggingInAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingInAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync*
        name: OnLoggedInAsync
        nameWithType: EasyEventsAsync.OnLoggedInAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync*
        name: OnLoggedInAsync
        nameWithType: EasyEventsAsync.OnLoggedInAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedInAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync*
        name: OnLoggingOutAsync
        nameWithType: EasyEventsAsync.OnLoggingOutAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync*
        name: OnLoggingOutAsync
        nameWithType: EasyEventsAsync.OnLoggingOutAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggingOutAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync*
        name: OnLoggedOutAsync
        nameWithType: EasyEventsAsync.OnLoggedOutAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync*
        name: OnLoggedOutAsync
        nameWithType: EasyEventsAsync.OnLoggedOutAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLoggedOutAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync*
        name: OnChannelConnectingAsync
        nameWithType: EasyEventsAsync.OnChannelConnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync*
        name: OnChannelConnectingAsync
        nameWithType: EasyEventsAsync.OnChannelConnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync*
        name: OnChannelConnectedAsync
        nameWithType: EasyEventsAsync.OnChannelConnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync*
        name: OnChannelConnectedAsync
        nameWithType: EasyEventsAsync.OnChannelConnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelConnectedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync*
        name: OnChannelDisconnectingAsync
        nameWithType: EasyEventsAsync.OnChannelDisconnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync*
        name: OnChannelDisconnectingAsync
        nameWithType: EasyEventsAsync.OnChannelDisconnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync*
        name: OnChannelDisconnectedAsync
        nameWithType: EasyEventsAsync.OnChannelDisconnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync*
        name: OnChannelDisconnectedAsync
        nameWithType: EasyEventsAsync.OnChannelDisconnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelDisconnectedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync*
        name: OnTextChannelConnectingAsync
        nameWithType: EasyEventsAsync.OnTextChannelConnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync*
        name: OnTextChannelConnectingAsync
        nameWithType: EasyEventsAsync.OnTextChannelConnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync*
        name: OnTextChannelConnectedAsync
        nameWithType: EasyEventsAsync.OnTextChannelConnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync*
        name: OnTextChannelConnectedAsync
        nameWithType: EasyEventsAsync.OnTextChannelConnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelConnectedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync*
        name: OnTextChannelDisconnectingAsync
        nameWithType: EasyEventsAsync.OnTextChannelDisconnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync*
        name: OnTextChannelDisconnectingAsync
        nameWithType: EasyEventsAsync.OnTextChannelDisconnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync*
        name: OnTextChannelDisconnectedAsync
        nameWithType: EasyEventsAsync.OnTextChannelDisconnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync*
        name: OnTextChannelDisconnectedAsync
        nameWithType: EasyEventsAsync.OnTextChannelDisconnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTextChannelDisconnectedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync*
        name: OnAudioChannelConnectingAsync
        nameWithType: EasyEventsAsync.OnAudioChannelConnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync*
        name: OnAudioChannelConnectingAsync
        nameWithType: EasyEventsAsync.OnAudioChannelConnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync*
        name: OnAudioChannelConnectedAsync
        nameWithType: EasyEventsAsync.OnAudioChannelConnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync*
        name: OnAudioChannelConnectedAsync
        nameWithType: EasyEventsAsync.OnAudioChannelConnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelConnectedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync*
        name: OnAudioChannelDisconnectingAsync
        nameWithType: EasyEventsAsync.OnAudioChannelDisconnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync*
        name: OnAudioChannelDisconnectingAsync
        nameWithType: EasyEventsAsync.OnAudioChannelDisconnectingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync*
        name: OnAudioChannelDisconnectedAsync
        nameWithType: EasyEventsAsync.OnAudioChannelDisconnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync*
        name: OnAudioChannelDisconnectedAsync
        nameWithType: EasyEventsAsync.OnAudioChannelDisconnectedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioChannelDisconnectedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync*
        name: OnChannelMessageRecievedAsync
        nameWithType: EasyEventsAsync.OnChannelMessageRecievedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync*
        name: OnChannelMessageRecievedAsync
        nameWithType: EasyEventsAsync.OnChannelMessageRecievedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageRecievedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync*
        name: OnEventMessageRecievedAsync
        nameWithType: EasyEventsAsync.OnEventMessageRecievedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync*
        name: OnEventMessageRecievedAsync
        nameWithType: EasyEventsAsync.OnEventMessageRecievedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnEventMessageRecievedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync*
        name: OnChannelMessageSentAsync
        nameWithType: EasyEventsAsync.OnChannelMessageSentAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync*
        name: OnChannelMessageSentAsync
        nameWithType: EasyEventsAsync.OnChannelMessageSentAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnChannelMessageSentAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync*
        name: OnDirectMessageSentAsync
        nameWithType: EasyEventsAsync.OnDirectMessageSentAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync*
        name: OnDirectMessageSentAsync
        nameWithType: EasyEventsAsync.OnDirectMessageSentAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageSentAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync*
        name: OnDirectMessageRecievedAsync
        nameWithType: EasyEventsAsync.OnDirectMessageRecievedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync*
        name: OnDirectMessageRecievedAsync
        nameWithType: EasyEventsAsync.OnDirectMessageRecievedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageRecievedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync*
        name: OnDirectMessageFailedAsync
        nameWithType: EasyEventsAsync.OnDirectMessageFailedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync*
        name: OnDirectMessageFailedAsync
        nameWithType: EasyEventsAsync.OnDirectMessageFailedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnDirectMessageFailedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync*
        name: OnUserJoinedChannelAsync
        nameWithType: EasyEventsAsync.OnUserJoinedChannelAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync*
        name: OnUserJoinedChannelAsync
        nameWithType: EasyEventsAsync.OnUserJoinedChannelAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserJoinedChannelAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync*
        name: OnUserLeftChannelAsync
        nameWithType: EasyEventsAsync.OnUserLeftChannelAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync*
        name: OnUserLeftChannelAsync
        nameWithType: EasyEventsAsync.OnUserLeftChannelAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserLeftChannelAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync*
        name: OnUserValuesUpdatedAsync
        nameWithType: EasyEventsAsync.OnUserValuesUpdatedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync*
        name: OnUserValuesUpdatedAsync
        nameWithType: EasyEventsAsync.OnUserValuesUpdatedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserValuesUpdatedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync*
        name: OnUserMutedAsync
        nameWithType: EasyEventsAsync.OnUserMutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync*
        name: OnUserMutedAsync
        nameWithType: EasyEventsAsync.OnUserMutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserMutedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync*
        name: OnUserUnmutedAsync
        nameWithType: EasyEventsAsync.OnUserUnmutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync*
        name: OnUserUnmutedAsync
        nameWithType: EasyEventsAsync.OnUserUnmutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserUnmutedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync*
        name: OnUserCrossMutedAsync
        nameWithType: EasyEventsAsync.OnUserCrossMutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync*
        name: OnUserCrossMutedAsync
        nameWithType: EasyEventsAsync.OnUserCrossMutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossMutedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync*
        name: OnUserCrossUnmutedAsync
        nameWithType: EasyEventsAsync.OnUserCrossUnmutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync*
        name: OnUserCrossUnmutedAsync
        nameWithType: EasyEventsAsync.OnUserCrossUnmutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserCrossUnmutedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync*
        name: OnUserSpeakingAsync
        nameWithType: EasyEventsAsync.OnUserSpeakingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync*
        name: OnUserSpeakingAsync
        nameWithType: EasyEventsAsync.OnUserSpeakingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserSpeakingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync*
        name: OnUserNotSpeakingAsync
        nameWithType: EasyEventsAsync.OnUserNotSpeakingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync*
        name: OnUserNotSpeakingAsync
        nameWithType: EasyEventsAsync.OnUserNotSpeakingAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnUserNotSpeakingAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync*
        name: OnLocalUserMutedAsync
        nameWithType: EasyEventsAsync.OnLocalUserMutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync*
        name: OnLocalUserMutedAsync
        nameWithType: EasyEventsAsync.OnLocalUserMutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserMutedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync*
        name: OnLocalUserUnmutedAsync
        nameWithType: EasyEventsAsync.OnLocalUserUnmutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync*
        name: OnLocalUserUnmutedAsync
        nameWithType: EasyEventsAsync.OnLocalUserUnmutedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnLocalUserUnmutedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync*
        name: OnAudioInputDeviceAddedAsync
        nameWithType: EasyEventsAsync.OnAudioInputDeviceAddedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync*
        name: OnAudioInputDeviceAddedAsync
        nameWithType: EasyEventsAsync.OnAudioInputDeviceAddedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceAddedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync*
        name: OnAudioInputDeviceRemovedAsync
        nameWithType: EasyEventsAsync.OnAudioInputDeviceRemovedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync*
        name: OnAudioInputDeviceRemovedAsync
        nameWithType: EasyEventsAsync.OnAudioInputDeviceRemovedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceRemovedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync*
        name: OnAudioInputDeviceUpdatedAsync
        nameWithType: EasyEventsAsync.OnAudioInputDeviceUpdatedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync*
        name: OnAudioInputDeviceUpdatedAsync
        nameWithType: EasyEventsAsync.OnAudioInputDeviceUpdatedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioInputDeviceUpdatedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded*
        name: OnAudioOutputDeviceAdded
        nameWithType: EasyEventsAsync.OnAudioOutputDeviceAdded
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded*
        name: OnAudioOutputDeviceAdded
        nameWithType: EasyEventsAsync.OnAudioOutputDeviceAdded
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceAdded
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved*
        name: OnAudioOutputDeviceRemoved
        nameWithType: EasyEventsAsync.OnAudioOutputDeviceRemoved
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved*
        name: OnAudioOutputDeviceRemoved
        nameWithType: EasyEventsAsync.OnAudioOutputDeviceRemoved
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceRemoved
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated*
        name: OnAudioOutputDeviceUpdated
        nameWithType: EasyEventsAsync.OnAudioOutputDeviceUpdated
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated*
        name: OnAudioOutputDeviceUpdated
        nameWithType: EasyEventsAsync.OnAudioOutputDeviceUpdated
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnAudioOutputDeviceUpdated
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync*
        name: OnTTSMessageAddedAsync
        nameWithType: EasyEventsAsync.OnTTSMessageAddedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync*
        name: OnTTSMessageAddedAsync
        nameWithType: EasyEventsAsync.OnTTSMessageAddedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageAddedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync*
        name: OnTTSMessageRemovedAsync
        nameWithType: EasyEventsAsync.OnTTSMessageRemovedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync*
        name: OnTTSMessageRemovedAsync
        nameWithType: EasyEventsAsync.OnTTSMessageRemovedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageRemovedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync*
        name: OnTTSMessageUpdatedAsync
        nameWithType: EasyEventsAsync.OnTTSMessageUpdatedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync*
        name: OnTTSMessageUpdatedAsync
        nameWithType: EasyEventsAsync.OnTTSMessageUpdatedAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Events.Internal.EasyEventsAsync.OnTTSMessageUpdatedAsync
  EasyCodeForVivox.Events.Internal.EasyEventsAsync:
    name:
      CSharp:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync
        name: EasyEventsAsync
        nameWithType: EasyEventsAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync
      VB:
      - id: EasyCodeForVivox.Events.Internal.EasyEventsAsync
        name: EasyEventsAsync
        nameWithType: EasyEventsAsync
        qualifiedName: EasyCodeForVivox.Events.Internal.EasyEventsAsync
    isDefinition: true
    commentId: T:EasyCodeForVivox.Events.Internal.EasyEventsAsync
  EasyCodeForVivox.Events.Internal:
    name:
      CSharp:
      - name: EasyCodeForVivox.Events.Internal
        nameWithType: EasyCodeForVivox.Events.Internal
        qualifiedName: EasyCodeForVivox.Events.Internal
      VB:
      - name: EasyCodeForVivox.Events.Internal
        nameWithType: EasyCodeForVivox.Events.Internal
        qualifiedName: EasyCodeForVivox.Events.Internal
    isDefinition: true
    commentId: N:EasyCodeForVivox.Events.Internal
  EasyCodeForVivox.Extensions.EasyDebug.Color*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.EasyDebug.Color*
        name: Color
        nameWithType: EasyDebug.Color
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug.Color
      VB:
      - id: EasyCodeForVivox.Extensions.EasyDebug.Color*
        name: Color
        nameWithType: EasyDebug.Color
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug.Color
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.EasyDebug.Color
  EasyCodeForVivox.Extensions.EasyDebug.Bold*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.EasyDebug.Bold*
        name: Bold
        nameWithType: EasyDebug.Bold
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug.Bold
      VB:
      - id: EasyCodeForVivox.Extensions.EasyDebug.Bold*
        name: Bold
        nameWithType: EasyDebug.Bold
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug.Bold
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.EasyDebug.Bold
  EasyCodeForVivox.Extensions.EasyDebug.Italic*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.EasyDebug.Italic*
        name: Italic
        nameWithType: EasyDebug.Italic
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug.Italic
      VB:
      - id: EasyCodeForVivox.Extensions.EasyDebug.Italic*
        name: Italic
        nameWithType: EasyDebug.Italic
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug.Italic
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.EasyDebug.Italic
  EasyCodeForVivox.Extensions.EasyDebug:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.EasyDebug
        name: EasyDebug
        nameWithType: EasyDebug
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug
      VB:
      - id: EasyCodeForVivox.Extensions.EasyDebug
        name: EasyDebug
        nameWithType: EasyDebug
        qualifiedName: EasyCodeForVivox.Extensions.EasyDebug
    isDefinition: true
    commentId: T:EasyCodeForVivox.Extensions.EasyDebug
  EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf*
        name: IsSelf
        nameWithType: EasySIPExtensions.IsSelf
        qualifiedName: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf
      VB:
      - id: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf*
        name: IsSelf
        nameWithType: EasySIPExtensions.IsSelf
        qualifiedName: EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.EasySIPExtensions.IsSelf
  EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP*
        name: GetSIP
        nameWithType: EasySIPExtensions.GetSIP
        qualifiedName: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP
      VB:
      - id: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP*
        name: GetSIP
        nameWithType: EasySIPExtensions.GetSIP
        qualifiedName: EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.EasySIPExtensions.GetSIP
  EasyCodeForVivox.Extensions.EasySIPExtensions:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.EasySIPExtensions
        name: EasySIPExtensions
        nameWithType: EasySIPExtensions
        qualifiedName: EasyCodeForVivox.Extensions.EasySIPExtensions
      VB:
      - id: EasyCodeForVivox.Extensions.EasySIPExtensions
        name: EasySIPExtensions
        nameWithType: EasySIPExtensions
        qualifiedName: EasyCodeForVivox.Extensions.EasySIPExtensions
    isDefinition: true
    commentId: T:EasyCodeForVivox.Extensions.EasySIPExtensions
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo*
        name: SwitchTo
        nameWithType: GameObjectExtensions.SwitchTo
        qualifiedName: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo
      VB:
      - id: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo*
        name: SwitchTo
        nameWithType: GameObjectExtensions.SwitchTo
        qualifiedName: EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.GameObjectExtensions.SwitchTo
  EasyCodeForVivox.Extensions.GameObjectExtensions:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.GameObjectExtensions
        name: GameObjectExtensions
        nameWithType: GameObjectExtensions
        qualifiedName: EasyCodeForVivox.Extensions.GameObjectExtensions
      VB:
      - id: EasyCodeForVivox.Extensions.GameObjectExtensions
        name: GameObjectExtensions
        nameWithType: GameObjectExtensions
        qualifiedName: EasyCodeForVivox.Extensions.GameObjectExtensions
    isDefinition: true
    commentId: T:EasyCodeForVivox.Extensions.GameObjectExtensions
  IEnumerator:
    name:
      CSharp:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      VB:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
    isDefinition: true
    commentId: '!:IEnumerator'
  TTSMessage:
    name:
      CSharp:
      - id: TTSMessage
        name: TTSMessage
        nameWithType: TTSMessage
        qualifiedName: TTSMessage
        isExternal: true
      VB:
      - id: TTSMessage
        name: TTSMessage
        nameWithType: TTSMessage
        qualifiedName: TTSMessage
        isExternal: true
    isDefinition: true
    commentId: '!:TTSMessage'
  EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage*
        name: WaitForMessage
        nameWithType: TTSMessageExtensions.WaitForMessage
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage*
        name: WaitForMessage
        nameWithType: TTSMessageExtensions.WaitForMessage
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.WaitForMessage
  EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent*
        name: TTSMsgLocalPlayOverCurrent
        nameWithType: TTSMessageExtensions.TTSMsgLocalPlayOverCurrent
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent*
        name: TTSMsgLocalPlayOverCurrent
        nameWithType: TTSMessageExtensions.TTSMsgLocalPlayOverCurrent
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalPlayOverCurrent
  EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent*
        name: TTSMsgRemotePlayOverCurrent
        nameWithType: TTSMessageExtensions.TTSMsgRemotePlayOverCurrent
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent*
        name: TTSMsgRemotePlayOverCurrent
        nameWithType: TTSMessageExtensions.TTSMsgRemotePlayOverCurrent
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgRemotePlayOverCurrent
  EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent*
        name: TTSMsgLocalRemotePlayOverCurrent
        nameWithType: TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent*
        name: TTSMsgLocalRemotePlayOverCurrent
        nameWithType: TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalRemotePlayOverCurrent
  EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying*
        name: TTSMsgLocalReplaceCurrentMessagePlaying
        nameWithType: TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying*
        name: TTSMsgLocalReplaceCurrentMessagePlaying
        nameWithType: TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgLocalReplaceCurrentMessagePlaying
  EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal*
        name: TTSMsgQueueLocal
        nameWithType: TTSMessageExtensions.TTSMsgQueueLocal
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal*
        name: TTSMsgQueueLocal
        nameWithType: TTSMessageExtensions.TTSMsgQueueLocal
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueLocal
  EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote*
        name: TTSMsgQueueRemote
        nameWithType: TTSMessageExtensions.TTSMsgQueueRemote
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote*
        name: TTSMsgQueueRemote
        nameWithType: TTSMessageExtensions.TTSMsgQueueRemote
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemote
  EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal*
        name: TTSMsgQueueRemoteLocal
        nameWithType: TTSMessageExtensions.TTSMsgQueueRemoteLocal
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal*
        name: TTSMsgQueueRemoteLocal
        nameWithType: TTSMessageExtensions.TTSMsgQueueRemoteLocal
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.TTSMessageExtensions.TTSMsgQueueRemoteLocal
  EasyCodeForVivox.Extensions.TTSMessageExtensions:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions
        name: TTSMessageExtensions
        nameWithType: TTSMessageExtensions
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions
      VB:
      - id: EasyCodeForVivox.Extensions.TTSMessageExtensions
        name: TTSMessageExtensions
        nameWithType: TTSMessageExtensions
        qualifiedName: EasyCodeForVivox.Extensions.TTSMessageExtensions
    isDefinition: true
    commentId: T:EasyCodeForVivox.Extensions.TTSMessageExtensions
  TMP_Dropdown:
    name:
      CSharp:
      - id: TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
      VB:
      - id: TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.Extensions.UIExtensions.GetSelected*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.UIExtensions.GetSelected*
        name: GetSelected
        nameWithType: UIExtensions.GetSelected
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.GetSelected
      VB:
      - id: EasyCodeForVivox.Extensions.UIExtensions.GetSelected*
        name: GetSelected
        nameWithType: UIExtensions.GetSelected
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.GetSelected
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.UIExtensions.GetSelected
  EasyCodeForVivox.Extensions.UIExtensions.AddValue*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.UIExtensions.AddValue*
        name: AddValue
        nameWithType: UIExtensions.AddValue
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.AddValue
      VB:
      - id: EasyCodeForVivox.Extensions.UIExtensions.AddValue*
        name: AddValue
        nameWithType: UIExtensions.AddValue
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.AddValue
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.UIExtensions.AddValue
  EasyCodeForVivox.Extensions.UIExtensions.RemoveValue*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue*
        name: RemoveValue
        nameWithType: UIExtensions.RemoveValue
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue
      VB:
      - id: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue*
        name: RemoveValue
        nameWithType: UIExtensions.RemoveValue
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.RemoveValue
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.UIExtensions.RemoveValue
  Toggle:
    name:
      CSharp:
      - id: Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
      VB:
      - id: Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
    isDefinition: true
  EasyCodeForVivox.Extensions.UIExtensions.TurnOn*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.UIExtensions.TurnOn*
        name: TurnOn
        nameWithType: UIExtensions.TurnOn
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.TurnOn
      VB:
      - id: EasyCodeForVivox.Extensions.UIExtensions.TurnOn*
        name: TurnOn
        nameWithType: UIExtensions.TurnOn
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.TurnOn
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.UIExtensions.TurnOn
  EasyCodeForVivox.Extensions.UIExtensions.TurnOff*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.UIExtensions.TurnOff*
        name: TurnOff
        nameWithType: UIExtensions.TurnOff
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.TurnOff
      VB:
      - id: EasyCodeForVivox.Extensions.UIExtensions.TurnOff*
        name: TurnOff
        nameWithType: UIExtensions.TurnOff
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions.TurnOff
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.UIExtensions.TurnOff
  EasyCodeForVivox.Extensions.UIExtensions:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.UIExtensions
        name: UIExtensions
        nameWithType: UIExtensions
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions
      VB:
      - id: EasyCodeForVivox.Extensions.UIExtensions
        name: UIExtensions
        nameWithType: UIExtensions
        qualifiedName: EasyCodeForVivox.Extensions.UIExtensions
    isDefinition: true
    commentId: T:EasyCodeForVivox.Extensions.UIExtensions
  EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId*
        name: GetChannelId
        nameWithType: VivoxExtensions.GetChannelId
        qualifiedName: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId
      VB:
      - id: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId*
        name: GetChannelId
        nameWithType: VivoxExtensions.GetChannelId
        qualifiedName: EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.VivoxExtensions.GetChannelId
  EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash*
        name: GetMD5Hash
        nameWithType: VivoxExtensions.GetMD5Hash
        qualifiedName: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash
      VB:
      - id: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash*
        name: GetMD5Hash
        nameWithType: VivoxExtensions.GetMD5Hash
        qualifiedName: EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Extensions.VivoxExtensions.GetMD5Hash
  EasyCodeForVivox.Extensions.VivoxExtensions:
    name:
      CSharp:
      - id: EasyCodeForVivox.Extensions.VivoxExtensions
        name: VivoxExtensions
        nameWithType: VivoxExtensions
        qualifiedName: EasyCodeForVivox.Extensions.VivoxExtensions
      VB:
      - id: EasyCodeForVivox.Extensions.VivoxExtensions
        name: VivoxExtensions
        nameWithType: VivoxExtensions
        qualifiedName: EasyCodeForVivox.Extensions.VivoxExtensions
    isDefinition: true
    commentId: T:EasyCodeForVivox.Extensions.VivoxExtensions
  EasyCodeForVivox.Extensions:
    name:
      CSharp:
      - name: EasyCodeForVivox.Extensions
        nameWithType: EasyCodeForVivox.Extensions
        qualifiedName: EasyCodeForVivox.Extensions
      VB:
      - name: EasyCodeForVivox.Extensions
        nameWithType: EasyCodeForVivox.Extensions
        qualifiedName: EasyCodeForVivox.Extensions
    isDefinition: true
    commentId: N:EasyCodeForVivox.Extensions
  EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission*
        name: RequestAndroidMicPermission
        nameWithType: EasyVivoxUtilities.RequestAndroidMicPermission
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission
      VB:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission*
        name: RequestAndroidMicPermission
        nameWithType: EasyVivoxUtilities.RequestAndroidMicPermission
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestAndroidMicPermission
  EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess*
        name: RequestIOSMicrophoneAccess
        nameWithType: EasyVivoxUtilities.RequestIOSMicrophoneAccess
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess
      VB:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess*
        name: RequestIOSMicrophoneAccess
        nameWithType: EasyVivoxUtilities.RequestIOSMicrophoneAccess
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Utilities.EasyVivoxUtilities.RequestIOSMicrophoneAccess
  EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName*:
    name:
      CSharp:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName*
        name: FilterChannelAndUserName
        nameWithType: EasyVivoxUtilities.FilterChannelAndUserName
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName
      VB:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName*
        name: FilterChannelAndUserName
        nameWithType: EasyVivoxUtilities.FilterChannelAndUserName
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName
    isDefinition: true
    commentId: Overload:EasyCodeForVivox.Utilities.EasyVivoxUtilities.FilterChannelAndUserName
  EasyCodeForVivox.Utilities.EasyVivoxUtilities:
    name:
      CSharp:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities
        name: EasyVivoxUtilities
        nameWithType: EasyVivoxUtilities
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities
      VB:
      - id: EasyCodeForVivox.Utilities.EasyVivoxUtilities
        name: EasyVivoxUtilities
        nameWithType: EasyVivoxUtilities
        qualifiedName: EasyCodeForVivox.Utilities.EasyVivoxUtilities
    isDefinition: true
    commentId: T:EasyCodeForVivox.Utilities.EasyVivoxUtilities
  EasyCodeForVivox.Utilities:
    name:
      CSharp:
      - name: EasyCodeForVivox.Utilities
        nameWithType: EasyCodeForVivox.Utilities
        qualifiedName: EasyCodeForVivox.Utilities
      VB:
      - name: EasyCodeForVivox.Utilities
        nameWithType: EasyCodeForVivox.Utilities
        qualifiedName: EasyCodeForVivox.Utilities
    isDefinition: true
    commentId: N:EasyCodeForVivox.Utilities
